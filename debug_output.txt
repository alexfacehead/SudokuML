Epoch # 0
Board: tf.Tensor(
[[8 6 4 3 7 0 2 5 9]
 [3 2 5 8 4 9 7 6 1]
 [9 7 0 2 6 5 8 4 3]
 [4 3 6 1 9 2 5 8 0]
 [1 9 0 6 5 7 4 0 2]
 [2 5 7 4 8 3 9 0 0]
 [6 8 9 7 3 4 1 2 5]
 [7 1 3 5 2 8 6 9 0]
 [5 4 2 9 1 6 3 7 8]], shape=(9, 9), dtype=int32)

Puzzle # 1
All available actions: [(0, 5, 1), (0, 5, 2), (0, 5, 3), (0, 5, 4), (0, 5, 5), (0, 5, 6), (0, 5, 7), (0, 5, 8), (0, 5, 9), (2, 2, 1), (2, 2, 2), (2, 2, 3), (2, 2, 4), (2, 2, 5), (2, 2, 6), (2, 2, 7), (2, 2, 8), (2, 2, 9), (3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (4, 2, 1), (4, 2, 2), (4, 2, 3), (4, 2, 4), (4, 2, 5), (4, 2, 6), (4, 2, 7), (4, 2, 8), (4, 2, 9), (4, 7, 1), (4, 7, 2), (4, 7, 3), (4, 7, 4), (4, 7, 5), (4, 7, 6), (4, 7, 7), (4, 7, 8), (4, 7, 9), (5, 7, 1), (5, 7, 2), (5, 7, 3), (5, 7, 4), (5, 7, 5), (5, 7, 6), (5, 7, 7), (5, 7, 8), (5, 7, 9), (5, 8, 1), (5, 8, 2), (5, 8, 3), (5, 8, 4), (5, 8, 5), (5, 8, 6), (5, 8, 7), (5, 8, 8), (5, 8, 9), (7, 8, 1), (7, 8, 2), (7, 8, 3), (7, 8, 4), (7, 8, 5), (7, 8, 6), (7, 8, 7), (7, 8, 8), (7, 8, 9)]
State:
[[8 6 4 3 7 0 2 5 9]
 [3 2 5 8 4 9 7 6 1]
 [9 7 0 2 6 5 8 4 3]
 [4 3 6 1 9 2 5 8 0]
 [1 9 0 6 5 7 4 0 2]
 [2 5 7 4 8 3 9 0 0]
 [6 8 9 7 3 4 1 2 5]
 [7 1 3 5 2 8 6 9 0]
 [5 4 2 9 1 6 3 7 8]]
Valid actions: [(0, 5, 1), (2, 2, 1), (3, 8, 7), (4, 2, 8), (4, 7, 3), (5, 7, 1), (5, 8, 6), (7, 8, 4)]
All available actions: [(0, 5, 1), (0, 5, 2), (0, 5, 3), (0, 5, 4), (0, 5, 5), (0, 5, 6), (0, 5, 7), (0, 5, 8), (0, 5, 9), (2, 2, 1), (2, 2, 2), (2, 2, 3), (2, 2, 4), (2, 2, 5), (2, 2, 6), (2, 2, 7), (2, 2, 8), (2, 2, 9), (3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (4, 2, 1), (4, 2, 2), (4, 2, 3), (4, 2, 4), (4, 2, 5), (4, 2, 6), (4, 2, 7), (4, 2, 8), (4, 2, 9), (4, 7, 1), (4, 7, 2), (4, 7, 3), (4, 7, 4), (4, 7, 5), (4, 7, 6), (4, 7, 7), (4, 7, 8), (4, 7, 9), (5, 7, 1), (5, 7, 2), (5, 7, 3), (5, 7, 4), (5, 7, 5), (5, 7, 6), (5, 7, 7), (5, 7, 8), (5, 7, 9), (5, 8, 1), (5, 8, 2), (5, 8, 3), (5, 8, 4), (5, 8, 5), (5, 8, 6), (5, 8, 7), (5, 8, 8), (5, 8, 9), (7, 8, 1), (7, 8, 2), (7, 8, 3), (7, 8, 4), (7, 8, 5), (7, 8, 6), (7, 8, 7), (7, 8, 8), (7, 8, 9)]
Running total step #0
Puzzle step # 0
Exploration rate (epsilon): 0.5
All available actions: [(0, 5, 1), (0, 5, 2), (0, 5, 3), (0, 5, 4), (0, 5, 5), (0, 5, 6), (0, 5, 7), (0, 5, 8), (0, 5, 9), (2, 2, 1), (2, 2, 2), (2, 2, 3), (2, 2, 4), (2, 2, 5), (2, 2, 6), (2, 2, 7), (2, 2, 8), (2, 2, 9), (3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (4, 2, 1), (4, 2, 2), (4, 2, 3), (4, 2, 4), (4, 2, 5), (4, 2, 6), (4, 2, 7), (4, 2, 8), (4, 2, 9), (4, 7, 1), (4, 7, 2), (4, 7, 3), (4, 7, 4), (4, 7, 5), (4, 7, 6), (4, 7, 7), (4, 7, 8), (4, 7, 9), (5, 7, 1), (5, 7, 2), (5, 7, 3), (5, 7, 4), (5, 7, 5), (5, 7, 6), (5, 7, 7), (5, 7, 8), (5, 7, 9), (5, 8, 1), (5, 8, 2), (5, 8, 3), (5, 8, 4), (5, 8, 5), (5, 8, 6), (5, 8, 7), (5, 8, 8), (5, 8, 9), (7, 8, 1), (7, 8, 2), (7, 8, 3), (7, 8, 4), (7, 8, 5), (7, 8, 6), (7, 8, 7), (7, 8, 8), (7, 8, 9)]
State:
[[8 6 4 3 7 0 2 5 9]
 [3 2 5 8 4 9 7 6 1]
 [9 7 0 2 6 5 8 4 3]
 [4 3 6 1 9 2 5 8 0]
 [1 9 0 6 5 7 4 0 2]
 [2 5 7 4 8 3 9 0 0]
 [6 8 9 7 3 4 1 2 5]
 [7 1 3 5 2 8 6 9 0]
 [5 4 2 9 1 6 3 7 8]]
Valid actions: [(0, 5, 1), (2, 2, 1), (3, 8, 7), (4, 2, 8), (4, 7, 3), (5, 7, 1), (5, 8, 6), (7, 8, 4)]
All available actions: [(0, 5, 1), (0, 5, 2), (0, 5, 3), (0, 5, 4), (0, 5, 5), (0, 5, 6), (0, 5, 7), (0, 5, 8), (0, 5, 9), (2, 2, 1), (2, 2, 2), (2, 2, 3), (2, 2, 4), (2, 2, 5), (2, 2, 6), (2, 2, 7), (2, 2, 8), (2, 2, 9), (3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (4, 2, 1), (4, 2, 2), (4, 2, 3), (4, 2, 4), (4, 2, 5), (4, 2, 6), (4, 2, 7), (4, 2, 8), (4, 2, 9), (4, 7, 1), (4, 7, 2), (4, 7, 3), (4, 7, 4), (4, 7, 5), (4, 7, 6), (4, 7, 7), (4, 7, 8), (4, 7, 9), (5, 7, 1), (5, 7, 2), (5, 7, 3), (5, 7, 4), (5, 7, 5), (5, 7, 6), (5, 7, 7), (5, 7, 8), (5, 7, 9), (5, 8, 1), (5, 8, 2), (5, 8, 3), (5, 8, 4), (5, 8, 5), (5, 8, 6), (5, 8, 7), (5, 8, 8), (5, 8, 9), (7, 8, 1), (7, 8, 2), (7, 8, 3), (7, 8, 4), (7, 8, 5), (7, 8, 6), (7, 8, 7), (7, 8, 8), (7, 8, 9)]
Choosing to exploit
Valid move determined.
Step: Action: (4, 2, 8), Reward: tf.Tensor(10.0, shape=(), dtype=float32), Done: False
Running total step #1
Puzzle step # 1
Exploration rate (epsilon): 0.5
All available actions: [(0, 5, 1), (0, 5, 2), (0, 5, 3), (0, 5, 4), (0, 5, 5), (0, 5, 6), (0, 5, 7), (0, 5, 8), (0, 5, 9), (2, 2, 1), (2, 2, 2), (2, 2, 3), (2, 2, 4), (2, 2, 5), (2, 2, 6), (2, 2, 7), (2, 2, 8), (2, 2, 9), (3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (4, 7, 1), (4, 7, 2), (4, 7, 3), (4, 7, 4), (4, 7, 5), (4, 7, 6), (4, 7, 7), (4, 7, 8), (4, 7, 9), (5, 7, 1), (5, 7, 2), (5, 7, 3), (5, 7, 4), (5, 7, 5), (5, 7, 6), (5, 7, 7), (5, 7, 8), (5, 7, 9), (5, 8, 1), (5, 8, 2), (5, 8, 3), (5, 8, 4), (5, 8, 5), (5, 8, 6), (5, 8, 7), (5, 8, 8), (5, 8, 9), (7, 8, 1), (7, 8, 2), (7, 8, 3), (7, 8, 4), (7, 8, 5), (7, 8, 6), (7, 8, 7), (7, 8, 8), (7, 8, 9)]
State:
[[8 6 4 3 7 0 2 5 9]
 [3 2 5 8 4 9 7 6 1]
 [9 7 0 2 6 5 8 4 3]
 [4 3 6 1 9 2 5 8 0]
 [1 9 8 6 5 7 4 0 2]
 [2 5 7 4 8 3 9 0 0]
 [6 8 9 7 3 4 1 2 5]
 [7 1 3 5 2 8 6 9 0]
 [5 4 2 9 1 6 3 7 8]]
Valid actions: [(0, 5, 1), (2, 2, 1), (3, 8, 7), (4, 7, 3), (5, 7, 1), (5, 8, 6), (7, 8, 4)]
All available actions: [(0, 5, 1), (0, 5, 2), (0, 5, 3), (0, 5, 4), (0, 5, 5), (0, 5, 6), (0, 5, 7), (0, 5, 8), (0, 5, 9), (2, 2, 1), (2, 2, 2), (2, 2, 3), (2, 2, 4), (2, 2, 5), (2, 2, 6), (2, 2, 7), (2, 2, 8), (2, 2, 9), (3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (4, 7, 1), (4, 7, 2), (4, 7, 3), (4, 7, 4), (4, 7, 5), (4, 7, 6), (4, 7, 7), (4, 7, 8), (4, 7, 9), (5, 7, 1), (5, 7, 2), (5, 7, 3), (5, 7, 4), (5, 7, 5), (5, 7, 6), (5, 7, 7), (5, 7, 8), (5, 7, 9), (5, 8, 1), (5, 8, 2), (5, 8, 3), (5, 8, 4), (5, 8, 5), (5, 8, 6), (5, 8, 7), (5, 8, 8), (5, 8, 9), (7, 8, 1), (7, 8, 2), (7, 8, 3), (7, 8, 4), (7, 8, 5), (7, 8, 6), (7, 8, 7), (7, 8, 8), (7, 8, 9)]
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (0, 5, 1), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #2
Puzzle step # 2
Exploration rate (epsilon): 0.5
All available actions: [(2, 2, 1), (2, 2, 2), (2, 2, 3), (2, 2, 4), (2, 2, 5), (2, 2, 6), (2, 2, 7), (2, 2, 8), (2, 2, 9), (3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (4, 7, 1), (4, 7, 2), (4, 7, 3), (4, 7, 4), (4, 7, 5), (4, 7, 6), (4, 7, 7), (4, 7, 8), (4, 7, 9), (5, 7, 1), (5, 7, 2), (5, 7, 3), (5, 7, 4), (5, 7, 5), (5, 7, 6), (5, 7, 7), (5, 7, 8), (5, 7, 9), (5, 8, 1), (5, 8, 2), (5, 8, 3), (5, 8, 4), (5, 8, 5), (5, 8, 6), (5, 8, 7), (5, 8, 8), (5, 8, 9), (7, 8, 1), (7, 8, 2), (7, 8, 3), (7, 8, 4), (7, 8, 5), (7, 8, 6), (7, 8, 7), (7, 8, 8), (7, 8, 9)]
State:
[[8 6 4 3 7 1 2 5 9]
 [3 2 5 8 4 9 7 6 1]
 [9 7 0 2 6 5 8 4 3]
 [4 3 6 1 9 2 5 8 0]
 [1 9 8 6 5 7 4 0 2]
 [2 5 7 4 8 3 9 0 0]
 [6 8 9 7 3 4 1 2 5]
 [7 1 3 5 2 8 6 9 0]
 [5 4 2 9 1 6 3 7 8]]
Valid actions: [(2, 2, 1), (3, 8, 7), (4, 7, 3), (5, 7, 1), (5, 8, 6), (7, 8, 4)]
All available actions: [(2, 2, 1), (2, 2, 2), (2, 2, 3), (2, 2, 4), (2, 2, 5), (2, 2, 6), (2, 2, 7), (2, 2, 8), (2, 2, 9), (3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (4, 7, 1), (4, 7, 2), (4, 7, 3), (4, 7, 4), (4, 7, 5), (4, 7, 6), (4, 7, 7), (4, 7, 8), (4, 7, 9), (5, 7, 1), (5, 7, 2), (5, 7, 3), (5, 7, 4), (5, 7, 5), (5, 7, 6), (5, 7, 7), (5, 7, 8), (5, 7, 9), (5, 8, 1), (5, 8, 2), (5, 8, 3), (5, 8, 4), (5, 8, 5), (5, 8, 6), (5, 8, 7), (5, 8, 8), (5, 8, 9), (7, 8, 1), (7, 8, 2), (7, 8, 3), (7, 8, 4), (7, 8, 5), (7, 8, 6), (7, 8, 7), (7, 8, 8), (7, 8, 9)]
Running total step #3
Puzzle step # 3
Exploration rate (epsilon): 0.5
All available actions: [(2, 2, 1), (2, 2, 2), (2, 2, 3), (2, 2, 4), (2, 2, 5), (2, 2, 6), (2, 2, 7), (2, 2, 8), (2, 2, 9), (3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (4, 7, 1), (4, 7, 2), (4, 7, 3), (4, 7, 4), (4, 7, 5), (4, 7, 6), (4, 7, 7), (4, 7, 8), (4, 7, 9), (5, 7, 1), (5, 7, 2), (5, 7, 3), (5, 7, 4), (5, 7, 5), (5, 7, 6), (5, 7, 7), (5, 7, 8), (5, 7, 9), (5, 8, 1), (5, 8, 2), (5, 8, 3), (5, 8, 4), (5, 8, 5), (5, 8, 6), (5, 8, 7), (5, 8, 8), (5, 8, 9), (7, 8, 1), (7, 8, 2), (7, 8, 3), (7, 8, 4), (7, 8, 5), (7, 8, 6), (7, 8, 7), (7, 8, 8), (7, 8, 9)]
State:
[[8 6 4 3 7 1 2 5 9]
 [3 2 5 8 4 9 7 6 1]
 [9 7 0 2 6 5 8 4 3]
 [4 3 6 1 9 2 5 8 0]
 [1 9 8 6 5 7 4 0 2]
 [2 5 7 4 8 3 9 0 0]
 [6 8 9 7 3 4 1 2 5]
 [7 1 3 5 2 8 6 9 0]
 [5 4 2 9 1 6 3 7 8]]
Valid actions: [(2, 2, 1), (3, 8, 7), (4, 7, 3), (5, 7, 1), (5, 8, 6), (7, 8, 4)]
All available actions: [(2, 2, 1), (2, 2, 2), (2, 2, 3), (2, 2, 4), (2, 2, 5), (2, 2, 6), (2, 2, 7), (2, 2, 8), (2, 2, 9), (3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (4, 7, 1), (4, 7, 2), (4, 7, 3), (4, 7, 4), (4, 7, 5), (4, 7, 6), (4, 7, 7), (4, 7, 8), (4, 7, 9), (5, 7, 1), (5, 7, 2), (5, 7, 3), (5, 7, 4), (5, 7, 5), (5, 7, 6), (5, 7, 7), (5, 7, 8), (5, 7, 9), (5, 8, 1), (5, 8, 2), (5, 8, 3), (5, 8, 4), (5, 8, 5), (5, 8, 6), (5, 8, 7), (5, 8, 8), (5, 8, 9), (7, 8, 1), (7, 8, 2), (7, 8, 3), (7, 8, 4), (7, 8, 5), (7, 8, 6), (7, 8, 7), (7, 8, 8), (7, 8, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (7, 8, 4), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #4
Puzzle step # 4
Exploration rate (epsilon): 0.5
All available actions: [(2, 2, 1), (2, 2, 2), (2, 2, 3), (2, 2, 4), (2, 2, 5), (2, 2, 6), (2, 2, 7), (2, 2, 8), (2, 2, 9), (3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (4, 7, 1), (4, 7, 2), (4, 7, 3), (4, 7, 4), (4, 7, 5), (4, 7, 6), (4, 7, 7), (4, 7, 8), (4, 7, 9), (5, 7, 1), (5, 7, 2), (5, 7, 3), (5, 7, 4), (5, 7, 5), (5, 7, 6), (5, 7, 7), (5, 7, 8), (5, 7, 9), (5, 8, 1), (5, 8, 2), (5, 8, 3), (5, 8, 4), (5, 8, 5), (5, 8, 6), (5, 8, 7), (5, 8, 8), (5, 8, 9)]
State:
[[8 6 4 3 7 1 2 5 9]
 [3 2 5 8 4 9 7 6 1]
 [9 7 0 2 6 5 8 4 3]
 [4 3 6 1 9 2 5 8 0]
 [1 9 8 6 5 7 4 0 2]
 [2 5 7 4 8 3 9 0 0]
 [6 8 9 7 3 4 1 2 5]
 [7 1 3 5 2 8 6 9 4]
 [5 4 2 9 1 6 3 7 8]]
Valid actions: [(2, 2, 1), (3, 8, 7), (4, 7, 3), (5, 7, 1), (5, 8, 6)]
All available actions: [(2, 2, 1), (2, 2, 2), (2, 2, 3), (2, 2, 4), (2, 2, 5), (2, 2, 6), (2, 2, 7), (2, 2, 8), (2, 2, 9), (3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (4, 7, 1), (4, 7, 2), (4, 7, 3), (4, 7, 4), (4, 7, 5), (4, 7, 6), (4, 7, 7), (4, 7, 8), (4, 7, 9), (5, 7, 1), (5, 7, 2), (5, 7, 3), (5, 7, 4), (5, 7, 5), (5, 7, 6), (5, 7, 7), (5, 7, 8), (5, 7, 9), (5, 8, 1), (5, 8, 2), (5, 8, 3), (5, 8, 4), (5, 8, 5), (5, 8, 6), (5, 8, 7), (5, 8, 8), (5, 8, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (4, 7, 3), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #5
Puzzle step # 5
Exploration rate (epsilon): 0.4749999940395355
All available actions: [(2, 2, 1), (2, 2, 2), (2, 2, 3), (2, 2, 4), (2, 2, 5), (2, 2, 6), (2, 2, 7), (2, 2, 8), (2, 2, 9), (3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (5, 7, 1), (5, 7, 2), (5, 7, 3), (5, 7, 4), (5, 7, 5), (5, 7, 6), (5, 7, 7), (5, 7, 8), (5, 7, 9), (5, 8, 1), (5, 8, 2), (5, 8, 3), (5, 8, 4), (5, 8, 5), (5, 8, 6), (5, 8, 7), (5, 8, 8), (5, 8, 9)]
State:
[[8 6 4 3 7 1 2 5 9]
 [3 2 5 8 4 9 7 6 1]
 [9 7 0 2 6 5 8 4 3]
 [4 3 6 1 9 2 5 8 0]
 [1 9 8 6 5 7 4 3 2]
 [2 5 7 4 8 3 9 0 0]
 [6 8 9 7 3 4 1 2 5]
 [7 1 3 5 2 8 6 9 4]
 [5 4 2 9 1 6 3 7 8]]
Valid actions: [(2, 2, 1), (3, 8, 7), (5, 7, 1), (5, 8, 6)]
All available actions: [(2, 2, 1), (2, 2, 2), (2, 2, 3), (2, 2, 4), (2, 2, 5), (2, 2, 6), (2, 2, 7), (2, 2, 8), (2, 2, 9), (3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (5, 7, 1), (5, 7, 2), (5, 7, 3), (5, 7, 4), (5, 7, 5), (5, 7, 6), (5, 7, 7), (5, 7, 8), (5, 7, 9), (5, 8, 1), (5, 8, 2), (5, 8, 3), (5, 8, 4), (5, 8, 5), (5, 8, 6), (5, 8, 7), (5, 8, 8), (5, 8, 9)]
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (2, 2, 1), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #6
Puzzle step # 6
Exploration rate (epsilon): 0.4749999940395355
All available actions: [(3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (5, 7, 1), (5, 7, 2), (5, 7, 3), (5, 7, 4), (5, 7, 5), (5, 7, 6), (5, 7, 7), (5, 7, 8), (5, 7, 9), (5, 8, 1), (5, 8, 2), (5, 8, 3), (5, 8, 4), (5, 8, 5), (5, 8, 6), (5, 8, 7), (5, 8, 8), (5, 8, 9)]
State:
[[8 6 4 3 7 1 2 5 9]
 [3 2 5 8 4 9 7 6 1]
 [9 7 1 2 6 5 8 4 3]
 [4 3 6 1 9 2 5 8 0]
 [1 9 8 6 5 7 4 3 2]
 [2 5 7 4 8 3 9 0 0]
 [6 8 9 7 3 4 1 2 5]
 [7 1 3 5 2 8 6 9 4]
 [5 4 2 9 1 6 3 7 8]]
Valid actions: [(3, 8, 7), (5, 7, 1), (5, 8, 6)]
All available actions: [(3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (5, 7, 1), (5, 7, 2), (5, 7, 3), (5, 7, 4), (5, 7, 5), (5, 7, 6), (5, 7, 7), (5, 7, 8), (5, 7, 9), (5, 8, 1), (5, 8, 2), (5, 8, 3), (5, 8, 4), (5, 8, 5), (5, 8, 6), (5, 8, 7), (5, 8, 8), (5, 8, 9)]
Choosing to exploit
Valid move determined.
Step: Action: (5, 8, 6), Reward: tf.Tensor(10.0, shape=(), dtype=float32), Done: False
Running total step #7
Puzzle step # 7
Exploration rate (epsilon): 0.4749999940395355
All available actions: [(3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (5, 7, 1), (5, 7, 2), (5, 7, 3), (5, 7, 4), (5, 7, 5), (5, 7, 6), (5, 7, 7), (5, 7, 8), (5, 7, 9)]
State:
[[8 6 4 3 7 1 2 5 9]
 [3 2 5 8 4 9 7 6 1]
 [9 7 1 2 6 5 8 4 3]
 [4 3 6 1 9 2 5 8 0]
 [1 9 8 6 5 7 4 3 2]
 [2 5 7 4 8 3 9 0 6]
 [6 8 9 7 3 4 1 2 5]
 [7 1 3 5 2 8 6 9 4]
 [5 4 2 9 1 6 3 7 8]]
Valid actions: [(3, 8, 7), (5, 7, 1)]
All available actions: [(3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (5, 7, 1), (5, 7, 2), (5, 7, 3), (5, 7, 4), (5, 7, 5), (5, 7, 6), (5, 7, 7), (5, 7, 8), (5, 7, 9)]
Running total step #8
Puzzle step # 8
Exploration rate (epsilon): 0.4749999940395355
All available actions: [(3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (5, 7, 1), (5, 7, 2), (5, 7, 3), (5, 7, 4), (5, 7, 5), (5, 7, 6), (5, 7, 7), (5, 7, 8), (5, 7, 9)]
State:
[[8 6 4 3 7 1 2 5 9]
 [3 2 5 8 4 9 7 6 1]
 [9 7 1 2 6 5 8 4 3]
 [4 3 6 1 9 2 5 8 0]
 [1 9 8 6 5 7 4 3 2]
 [2 5 7 4 8 3 9 0 6]
 [6 8 9 7 3 4 1 2 5]
 [7 1 3 5 2 8 6 9 4]
 [5 4 2 9 1 6 3 7 8]]
Valid actions: [(3, 8, 7), (5, 7, 1)]
All available actions: [(3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (5, 7, 1), (5, 7, 2), (5, 7, 3), (5, 7, 4), (5, 7, 5), (5, 7, 6), (5, 7, 7), (5, 7, 8), (5, 7, 9)]
Running total step #9
Puzzle step # 9
Exploration rate (epsilon): 0.4749999940395355
All available actions: [(3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (5, 7, 1), (5, 7, 2), (5, 7, 3), (5, 7, 4), (5, 7, 5), (5, 7, 6), (5, 7, 7), (5, 7, 8), (5, 7, 9)]
State:
[[8 6 4 3 7 1 2 5 9]
 [3 2 5 8 4 9 7 6 1]
 [9 7 1 2 6 5 8 4 3]
 [4 3 6 1 9 2 5 8 0]
 [1 9 8 6 5 7 4 3 2]
 [2 5 7 4 8 3 9 0 6]
 [6 8 9 7 3 4 1 2 5]
 [7 1 3 5 2 8 6 9 4]
 [5 4 2 9 1 6 3 7 8]]
Valid actions: [(3, 8, 7), (5, 7, 1)]
All available actions: [(3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (5, 7, 1), (5, 7, 2), (5, 7, 3), (5, 7, 4), (5, 7, 5), (5, 7, 6), (5, 7, 7), (5, 7, 8), (5, 7, 9)]
Running total step #10
Puzzle step # 10
Exploration rate (epsilon): 0.45124998688697815
All available actions: [(3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (5, 7, 1), (5, 7, 2), (5, 7, 3), (5, 7, 4), (5, 7, 5), (5, 7, 6), (5, 7, 7), (5, 7, 8), (5, 7, 9)]
State:
[[8 6 4 3 7 1 2 5 9]
 [3 2 5 8 4 9 7 6 1]
 [9 7 1 2 6 5 8 4 3]
 [4 3 6 1 9 2 5 8 0]
 [1 9 8 6 5 7 4 3 2]
 [2 5 7 4 8 3 9 0 6]
 [6 8 9 7 3 4 1 2 5]
 [7 1 3 5 2 8 6 9 4]
 [5 4 2 9 1 6 3 7 8]]
Valid actions: [(3, 8, 7), (5, 7, 1)]
All available actions: [(3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (5, 7, 1), (5, 7, 2), (5, 7, 3), (5, 7, 4), (5, 7, 5), (5, 7, 6), (5, 7, 7), (5, 7, 8), (5, 7, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (5, 7, 1), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #11
Puzzle step # 11
Exploration rate (epsilon): 0.45124998688697815
All available actions: [(3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9)]
State:
[[8 6 4 3 7 1 2 5 9]
 [3 2 5 8 4 9 7 6 1]
 [9 7 1 2 6 5 8 4 3]
 [4 3 6 1 9 2 5 8 0]
 [1 9 8 6 5 7 4 3 2]
 [2 5 7 4 8 3 9 1 6]
 [6 8 9 7 3 4 1 2 5]
 [7 1 3 5 2 8 6 9 4]
 [5 4 2 9 1 6 3 7 8]]
Valid actions: [(3, 8, 7)]
All available actions: [(3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Solved.
Step: Action: (3, 8, 7), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: True
Board: tf.Tensor(
[[3 4 6 1 7 9 2 5 8]
 [0 8 7 5 2 0 0 6 4]
 [5 2 0 6 4 8 3 7 1]
 [9 6 5 0 3 2 4 1 7]
 [0 7 2 9 1 6 8 3 5]
 [8 1 0 7 5 4 6 2 9]
 [7 9 8 2 6 1 5 4 0]
 [6 3 1 4 8 5 7 9 2]
 [2 5 4 3 9 7 1 8 6]], shape=(9, 9), dtype=int32)

Puzzle # 2
All available actions: [(1, 0, 1), (1, 0, 2), (1, 0, 3), (1, 0, 4), (1, 0, 5), (1, 0, 6), (1, 0, 7), (1, 0, 8), (1, 0, 9), (1, 5, 1), (1, 5, 2), (1, 5, 3), (1, 5, 4), (1, 5, 5), (1, 5, 6), (1, 5, 7), (1, 5, 8), (1, 5, 9), (1, 6, 1), (1, 6, 2), (1, 6, 3), (1, 6, 4), (1, 6, 5), (1, 6, 6), (1, 6, 7), (1, 6, 8), (1, 6, 9), (2, 2, 1), (2, 2, 2), (2, 2, 3), (2, 2, 4), (2, 2, 5), (2, 2, 6), (2, 2, 7), (2, 2, 8), (2, 2, 9), (3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9), (5, 2, 1), (5, 2, 2), (5, 2, 3), (5, 2, 4), (5, 2, 5), (5, 2, 6), (5, 2, 7), (5, 2, 8), (5, 2, 9), (6, 8, 1), (6, 8, 2), (6, 8, 3), (6, 8, 4), (6, 8, 5), (6, 8, 6), (6, 8, 7), (6, 8, 8), (6, 8, 9)]
State:
[[3 4 6 1 7 9 2 5 8]
 [0 8 7 5 2 0 0 6 4]
 [5 2 0 6 4 8 3 7 1]
 [9 6 5 0 3 2 4 1 7]
 [0 7 2 9 1 6 8 3 5]
 [8 1 0 7 5 4 6 2 9]
 [7 9 8 2 6 1 5 4 0]
 [6 3 1 4 8 5 7 9 2]
 [2 5 4 3 9 7 1 8 6]]
Valid actions: [(1, 0, 1), (1, 5, 3), (1, 6, 9), (2, 2, 9), (3, 3, 8), (4, 0, 4), (5, 2, 3), (6, 8, 3)]
All available actions: [(1, 0, 1), (1, 0, 2), (1, 0, 3), (1, 0, 4), (1, 0, 5), (1, 0, 6), (1, 0, 7), (1, 0, 8), (1, 0, 9), (1, 5, 1), (1, 5, 2), (1, 5, 3), (1, 5, 4), (1, 5, 5), (1, 5, 6), (1, 5, 7), (1, 5, 8), (1, 5, 9), (1, 6, 1), (1, 6, 2), (1, 6, 3), (1, 6, 4), (1, 6, 5), (1, 6, 6), (1, 6, 7), (1, 6, 8), (1, 6, 9), (2, 2, 1), (2, 2, 2), (2, 2, 3), (2, 2, 4), (2, 2, 5), (2, 2, 6), (2, 2, 7), (2, 2, 8), (2, 2, 9), (3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9), (5, 2, 1), (5, 2, 2), (5, 2, 3), (5, 2, 4), (5, 2, 5), (5, 2, 6), (5, 2, 7), (5, 2, 8), (5, 2, 9), (6, 8, 1), (6, 8, 2), (6, 8, 3), (6, 8, 4), (6, 8, 5), (6, 8, 6), (6, 8, 7), (6, 8, 8), (6, 8, 9)]
Running total step #12
Puzzle step # 0
Exploration rate (epsilon): 0.45124998688697815
All available actions: [(1, 0, 1), (1, 0, 2), (1, 0, 3), (1, 0, 4), (1, 0, 5), (1, 0, 6), (1, 0, 7), (1, 0, 8), (1, 0, 9), (1, 5, 1), (1, 5, 2), (1, 5, 3), (1, 5, 4), (1, 5, 5), (1, 5, 6), (1, 5, 7), (1, 5, 8), (1, 5, 9), (1, 6, 1), (1, 6, 2), (1, 6, 3), (1, 6, 4), (1, 6, 5), (1, 6, 6), (1, 6, 7), (1, 6, 8), (1, 6, 9), (2, 2, 1), (2, 2, 2), (2, 2, 3), (2, 2, 4), (2, 2, 5), (2, 2, 6), (2, 2, 7), (2, 2, 8), (2, 2, 9), (3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9), (5, 2, 1), (5, 2, 2), (5, 2, 3), (5, 2, 4), (5, 2, 5), (5, 2, 6), (5, 2, 7), (5, 2, 8), (5, 2, 9), (6, 8, 1), (6, 8, 2), (6, 8, 3), (6, 8, 4), (6, 8, 5), (6, 8, 6), (6, 8, 7), (6, 8, 8), (6, 8, 9)]
State:
[[3 4 6 1 7 9 2 5 8]
 [0 8 7 5 2 0 0 6 4]
 [5 2 0 6 4 8 3 7 1]
 [9 6 5 0 3 2 4 1 7]
 [0 7 2 9 1 6 8 3 5]
 [8 1 0 7 5 4 6 2 9]
 [7 9 8 2 6 1 5 4 0]
 [6 3 1 4 8 5 7 9 2]
 [2 5 4 3 9 7 1 8 6]]
Valid actions: [(1, 0, 1), (1, 5, 3), (1, 6, 9), (2, 2, 9), (3, 3, 8), (4, 0, 4), (5, 2, 3), (6, 8, 3)]
All available actions: [(1, 0, 1), (1, 0, 2), (1, 0, 3), (1, 0, 4), (1, 0, 5), (1, 0, 6), (1, 0, 7), (1, 0, 8), (1, 0, 9), (1, 5, 1), (1, 5, 2), (1, 5, 3), (1, 5, 4), (1, 5, 5), (1, 5, 6), (1, 5, 7), (1, 5, 8), (1, 5, 9), (1, 6, 1), (1, 6, 2), (1, 6, 3), (1, 6, 4), (1, 6, 5), (1, 6, 6), (1, 6, 7), (1, 6, 8), (1, 6, 9), (2, 2, 1), (2, 2, 2), (2, 2, 3), (2, 2, 4), (2, 2, 5), (2, 2, 6), (2, 2, 7), (2, 2, 8), (2, 2, 9), (3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9), (5, 2, 1), (5, 2, 2), (5, 2, 3), (5, 2, 4), (5, 2, 5), (5, 2, 6), (5, 2, 7), (5, 2, 8), (5, 2, 9), (6, 8, 1), (6, 8, 2), (6, 8, 3), (6, 8, 4), (6, 8, 5), (6, 8, 6), (6, 8, 7), (6, 8, 8), (6, 8, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (2, 2, 9), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #13
Puzzle step # 1
Exploration rate (epsilon): 0.45124998688697815
All available actions: [(1, 0, 1), (1, 0, 2), (1, 0, 3), (1, 0, 4), (1, 0, 5), (1, 0, 6), (1, 0, 7), (1, 0, 8), (1, 0, 9), (1, 5, 1), (1, 5, 2), (1, 5, 3), (1, 5, 4), (1, 5, 5), (1, 5, 6), (1, 5, 7), (1, 5, 8), (1, 5, 9), (1, 6, 1), (1, 6, 2), (1, 6, 3), (1, 6, 4), (1, 6, 5), (1, 6, 6), (1, 6, 7), (1, 6, 8), (1, 6, 9), (3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9), (5, 2, 1), (5, 2, 2), (5, 2, 3), (5, 2, 4), (5, 2, 5), (5, 2, 6), (5, 2, 7), (5, 2, 8), (5, 2, 9), (6, 8, 1), (6, 8, 2), (6, 8, 3), (6, 8, 4), (6, 8, 5), (6, 8, 6), (6, 8, 7), (6, 8, 8), (6, 8, 9)]
State:
[[3 4 6 1 7 9 2 5 8]
 [0 8 7 5 2 0 0 6 4]
 [5 2 9 6 4 8 3 7 1]
 [9 6 5 0 3 2 4 1 7]
 [0 7 2 9 1 6 8 3 5]
 [8 1 0 7 5 4 6 2 9]
 [7 9 8 2 6 1 5 4 0]
 [6 3 1 4 8 5 7 9 2]
 [2 5 4 3 9 7 1 8 6]]
Valid actions: [(1, 0, 1), (1, 5, 3), (1, 6, 9), (3, 3, 8), (4, 0, 4), (5, 2, 3), (6, 8, 3)]
All available actions: [(1, 0, 1), (1, 0, 2), (1, 0, 3), (1, 0, 4), (1, 0, 5), (1, 0, 6), (1, 0, 7), (1, 0, 8), (1, 0, 9), (1, 5, 1), (1, 5, 2), (1, 5, 3), (1, 5, 4), (1, 5, 5), (1, 5, 6), (1, 5, 7), (1, 5, 8), (1, 5, 9), (1, 6, 1), (1, 6, 2), (1, 6, 3), (1, 6, 4), (1, 6, 5), (1, 6, 6), (1, 6, 7), (1, 6, 8), (1, 6, 9), (3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9), (5, 2, 1), (5, 2, 2), (5, 2, 3), (5, 2, 4), (5, 2, 5), (5, 2, 6), (5, 2, 7), (5, 2, 8), (5, 2, 9), (6, 8, 1), (6, 8, 2), (6, 8, 3), (6, 8, 4), (6, 8, 5), (6, 8, 6), (6, 8, 7), (6, 8, 8), (6, 8, 9)]
Running total step #14
Puzzle step # 2
Exploration rate (epsilon): 0.45124998688697815
All available actions: [(1, 0, 1), (1, 0, 2), (1, 0, 3), (1, 0, 4), (1, 0, 5), (1, 0, 6), (1, 0, 7), (1, 0, 8), (1, 0, 9), (1, 5, 1), (1, 5, 2), (1, 5, 3), (1, 5, 4), (1, 5, 5), (1, 5, 6), (1, 5, 7), (1, 5, 8), (1, 5, 9), (1, 6, 1), (1, 6, 2), (1, 6, 3), (1, 6, 4), (1, 6, 5), (1, 6, 6), (1, 6, 7), (1, 6, 8), (1, 6, 9), (3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9), (5, 2, 1), (5, 2, 2), (5, 2, 3), (5, 2, 4), (5, 2, 5), (5, 2, 6), (5, 2, 7), (5, 2, 8), (5, 2, 9), (6, 8, 1), (6, 8, 2), (6, 8, 3), (6, 8, 4), (6, 8, 5), (6, 8, 6), (6, 8, 7), (6, 8, 8), (6, 8, 9)]
State:
[[3 4 6 1 7 9 2 5 8]
 [0 8 7 5 2 0 0 6 4]
 [5 2 9 6 4 8 3 7 1]
 [9 6 5 0 3 2 4 1 7]
 [0 7 2 9 1 6 8 3 5]
 [8 1 0 7 5 4 6 2 9]
 [7 9 8 2 6 1 5 4 0]
 [6 3 1 4 8 5 7 9 2]
 [2 5 4 3 9 7 1 8 6]]
Valid actions: [(1, 0, 1), (1, 5, 3), (1, 6, 9), (3, 3, 8), (4, 0, 4), (5, 2, 3), (6, 8, 3)]
All available actions: [(1, 0, 1), (1, 0, 2), (1, 0, 3), (1, 0, 4), (1, 0, 5), (1, 0, 6), (1, 0, 7), (1, 0, 8), (1, 0, 9), (1, 5, 1), (1, 5, 2), (1, 5, 3), (1, 5, 4), (1, 5, 5), (1, 5, 6), (1, 5, 7), (1, 5, 8), (1, 5, 9), (1, 6, 1), (1, 6, 2), (1, 6, 3), (1, 6, 4), (1, 6, 5), (1, 6, 6), (1, 6, 7), (1, 6, 8), (1, 6, 9), (3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9), (5, 2, 1), (5, 2, 2), (5, 2, 3), (5, 2, 4), (5, 2, 5), (5, 2, 6), (5, 2, 7), (5, 2, 8), (5, 2, 9), (6, 8, 1), (6, 8, 2), (6, 8, 3), (6, 8, 4), (6, 8, 5), (6, 8, 6), (6, 8, 7), (6, 8, 8), (6, 8, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (1, 6, 9), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #15
Puzzle step # 3
Exploration rate (epsilon): 0.4286874830722809
All available actions: [(1, 0, 1), (1, 0, 2), (1, 0, 3), (1, 0, 4), (1, 0, 5), (1, 0, 6), (1, 0, 7), (1, 0, 8), (1, 0, 9), (1, 5, 1), (1, 5, 2), (1, 5, 3), (1, 5, 4), (1, 5, 5), (1, 5, 6), (1, 5, 7), (1, 5, 8), (1, 5, 9), (3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9), (5, 2, 1), (5, 2, 2), (5, 2, 3), (5, 2, 4), (5, 2, 5), (5, 2, 6), (5, 2, 7), (5, 2, 8), (5, 2, 9), (6, 8, 1), (6, 8, 2), (6, 8, 3), (6, 8, 4), (6, 8, 5), (6, 8, 6), (6, 8, 7), (6, 8, 8), (6, 8, 9)]
State:
[[3 4 6 1 7 9 2 5 8]
 [0 8 7 5 2 0 9 6 4]
 [5 2 9 6 4 8 3 7 1]
 [9 6 5 0 3 2 4 1 7]
 [0 7 2 9 1 6 8 3 5]
 [8 1 0 7 5 4 6 2 9]
 [7 9 8 2 6 1 5 4 0]
 [6 3 1 4 8 5 7 9 2]
 [2 5 4 3 9 7 1 8 6]]
Valid actions: [(1, 0, 1), (1, 5, 3), (3, 3, 8), (4, 0, 4), (5, 2, 3), (6, 8, 3)]
All available actions: [(1, 0, 1), (1, 0, 2), (1, 0, 3), (1, 0, 4), (1, 0, 5), (1, 0, 6), (1, 0, 7), (1, 0, 8), (1, 0, 9), (1, 5, 1), (1, 5, 2), (1, 5, 3), (1, 5, 4), (1, 5, 5), (1, 5, 6), (1, 5, 7), (1, 5, 8), (1, 5, 9), (3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9), (5, 2, 1), (5, 2, 2), (5, 2, 3), (5, 2, 4), (5, 2, 5), (5, 2, 6), (5, 2, 7), (5, 2, 8), (5, 2, 9), (6, 8, 1), (6, 8, 2), (6, 8, 3), (6, 8, 4), (6, 8, 5), (6, 8, 6), (6, 8, 7), (6, 8, 8), (6, 8, 9)]
Choosing to exploit
Valid move determined.
Step: Action: (1, 0, 1), Reward: tf.Tensor(10.0, shape=(), dtype=float32), Done: False
Running total step #16
Puzzle step # 4
Exploration rate (epsilon): 0.4286874830722809
All available actions: [(1, 5, 1), (1, 5, 2), (1, 5, 3), (1, 5, 4), (1, 5, 5), (1, 5, 6), (1, 5, 7), (1, 5, 8), (1, 5, 9), (3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9), (5, 2, 1), (5, 2, 2), (5, 2, 3), (5, 2, 4), (5, 2, 5), (5, 2, 6), (5, 2, 7), (5, 2, 8), (5, 2, 9), (6, 8, 1), (6, 8, 2), (6, 8, 3), (6, 8, 4), (6, 8, 5), (6, 8, 6), (6, 8, 7), (6, 8, 8), (6, 8, 9)]
State:
[[3 4 6 1 7 9 2 5 8]
 [1 8 7 5 2 0 9 6 4]
 [5 2 9 6 4 8 3 7 1]
 [9 6 5 0 3 2 4 1 7]
 [0 7 2 9 1 6 8 3 5]
 [8 1 0 7 5 4 6 2 9]
 [7 9 8 2 6 1 5 4 0]
 [6 3 1 4 8 5 7 9 2]
 [2 5 4 3 9 7 1 8 6]]
Valid actions: [(1, 5, 3), (3, 3, 8), (4, 0, 4), (5, 2, 3), (6, 8, 3)]
All available actions: [(1, 5, 1), (1, 5, 2), (1, 5, 3), (1, 5, 4), (1, 5, 5), (1, 5, 6), (1, 5, 7), (1, 5, 8), (1, 5, 9), (3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9), (5, 2, 1), (5, 2, 2), (5, 2, 3), (5, 2, 4), (5, 2, 5), (5, 2, 6), (5, 2, 7), (5, 2, 8), (5, 2, 9), (6, 8, 1), (6, 8, 2), (6, 8, 3), (6, 8, 4), (6, 8, 5), (6, 8, 6), (6, 8, 7), (6, 8, 8), (6, 8, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (5, 2, 3), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #17
Puzzle step # 5
Exploration rate (epsilon): 0.4286874830722809
All available actions: [(1, 5, 1), (1, 5, 2), (1, 5, 3), (1, 5, 4), (1, 5, 5), (1, 5, 6), (1, 5, 7), (1, 5, 8), (1, 5, 9), (3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9), (6, 8, 1), (6, 8, 2), (6, 8, 3), (6, 8, 4), (6, 8, 5), (6, 8, 6), (6, 8, 7), (6, 8, 8), (6, 8, 9)]
State:
[[3 4 6 1 7 9 2 5 8]
 [1 8 7 5 2 0 9 6 4]
 [5 2 9 6 4 8 3 7 1]
 [9 6 5 0 3 2 4 1 7]
 [0 7 2 9 1 6 8 3 5]
 [8 1 3 7 5 4 6 2 9]
 [7 9 8 2 6 1 5 4 0]
 [6 3 1 4 8 5 7 9 2]
 [2 5 4 3 9 7 1 8 6]]
Valid actions: [(1, 5, 3), (3, 3, 8), (4, 0, 4), (6, 8, 3)]
All available actions: [(1, 5, 1), (1, 5, 2), (1, 5, 3), (1, 5, 4), (1, 5, 5), (1, 5, 6), (1, 5, 7), (1, 5, 8), (1, 5, 9), (3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9), (6, 8, 1), (6, 8, 2), (6, 8, 3), (6, 8, 4), (6, 8, 5), (6, 8, 6), (6, 8, 7), (6, 8, 8), (6, 8, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (6, 8, 3), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #18
Puzzle step # 6
Exploration rate (epsilon): 0.4286874830722809
All available actions: [(1, 5, 1), (1, 5, 2), (1, 5, 3), (1, 5, 4), (1, 5, 5), (1, 5, 6), (1, 5, 7), (1, 5, 8), (1, 5, 9), (3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9)]
State:
[[3 4 6 1 7 9 2 5 8]
 [1 8 7 5 2 0 9 6 4]
 [5 2 9 6 4 8 3 7 1]
 [9 6 5 0 3 2 4 1 7]
 [0 7 2 9 1 6 8 3 5]
 [8 1 3 7 5 4 6 2 9]
 [7 9 8 2 6 1 5 4 3]
 [6 3 1 4 8 5 7 9 2]
 [2 5 4 3 9 7 1 8 6]]
Valid actions: [(1, 5, 3), (3, 3, 8), (4, 0, 4)]
All available actions: [(1, 5, 1), (1, 5, 2), (1, 5, 3), (1, 5, 4), (1, 5, 5), (1, 5, 6), (1, 5, 7), (1, 5, 8), (1, 5, 9), (3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9)]
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (1, 5, 3), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #19
Puzzle step # 7
Exploration rate (epsilon): 0.4286874830722809
All available actions: [(3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9)]
State:
[[3 4 6 1 7 9 2 5 8]
 [1 8 7 5 2 3 9 6 4]
 [5 2 9 6 4 8 3 7 1]
 [9 6 5 0 3 2 4 1 7]
 [0 7 2 9 1 6 8 3 5]
 [8 1 3 7 5 4 6 2 9]
 [7 9 8 2 6 1 5 4 3]
 [6 3 1 4 8 5 7 9 2]
 [2 5 4 3 9 7 1 8 6]]
Valid actions: [(3, 3, 8), (4, 0, 4)]
All available actions: [(3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9)]
Running total step #20
Puzzle step # 8
Exploration rate (epsilon): 0.40725311636924744
All available actions: [(3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9)]
State:
[[3 4 6 1 7 9 2 5 8]
 [1 8 7 5 2 3 9 6 4]
 [5 2 9 6 4 8 3 7 1]
 [9 6 5 0 3 2 4 1 7]
 [0 7 2 9 1 6 8 3 5]
 [8 1 3 7 5 4 6 2 9]
 [7 9 8 2 6 1 5 4 3]
 [6 3 1 4 8 5 7 9 2]
 [2 5 4 3 9 7 1 8 6]]
Valid actions: [(3, 3, 8), (4, 0, 4)]
All available actions: [(3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9)]
Running total step #21
Puzzle step # 9
Exploration rate (epsilon): 0.40725311636924744
All available actions: [(3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9)]
State:
[[3 4 6 1 7 9 2 5 8]
 [1 8 7 5 2 3 9 6 4]
 [5 2 9 6 4 8 3 7 1]
 [9 6 5 0 3 2 4 1 7]
 [0 7 2 9 1 6 8 3 5]
 [8 1 3 7 5 4 6 2 9]
 [7 9 8 2 6 1 5 4 3]
 [6 3 1 4 8 5 7 9 2]
 [2 5 4 3 9 7 1 8 6]]
Valid actions: [(3, 3, 8), (4, 0, 4)]
All available actions: [(3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9)]
Running total step #22
Puzzle step # 10
Exploration rate (epsilon): 0.40725311636924744
All available actions: [(3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9)]
State:
[[3 4 6 1 7 9 2 5 8]
 [1 8 7 5 2 3 9 6 4]
 [5 2 9 6 4 8 3 7 1]
 [9 6 5 0 3 2 4 1 7]
 [0 7 2 9 1 6 8 3 5]
 [8 1 3 7 5 4 6 2 9]
 [7 9 8 2 6 1 5 4 3]
 [6 3 1 4 8 5 7 9 2]
 [2 5 4 3 9 7 1 8 6]]
Valid actions: [(3, 3, 8), (4, 0, 4)]
All available actions: [(3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (4, 0, 4), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #23
Puzzle step # 11
Exploration rate (epsilon): 0.40725311636924744
All available actions: [(3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9)]
State:
[[3 4 6 1 7 9 2 5 8]
 [1 8 7 5 2 3 9 6 4]
 [5 2 9 6 4 8 3 7 1]
 [9 6 5 0 3 2 4 1 7]
 [4 7 2 9 1 6 8 3 5]
 [8 1 3 7 5 4 6 2 9]
 [7 9 8 2 6 1 5 4 3]
 [6 3 1 4 8 5 7 9 2]
 [2 5 4 3 9 7 1 8 6]]
Valid actions: [(3, 3, 8)]
All available actions: [(3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9)]
Running total step #24
Puzzle step # 12
Exploration rate (epsilon): 0.40725311636924744
All available actions: [(3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9)]
State:
[[3 4 6 1 7 9 2 5 8]
 [1 8 7 5 2 3 9 6 4]
 [5 2 9 6 4 8 3 7 1]
 [9 6 5 0 3 2 4 1 7]
 [4 7 2 9 1 6 8 3 5]
 [8 1 3 7 5 4 6 2 9]
 [7 9 8 2 6 1 5 4 3]
 [6 3 1 4 8 5 7 9 2]
 [2 5 4 3 9 7 1 8 6]]
Valid actions: [(3, 3, 8)]
All available actions: [(3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9)]
Running total step #25
Puzzle step # 13
Exploration rate (epsilon): 0.3868904411792755
All available actions: [(3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9)]
State:
[[3 4 6 1 7 9 2 5 8]
 [1 8 7 5 2 3 9 6 4]
 [5 2 9 6 4 8 3 7 1]
 [9 6 5 0 3 2 4 1 7]
 [4 7 2 9 1 6 8 3 5]
 [8 1 3 7 5 4 6 2 9]
 [7 9 8 2 6 1 5 4 3]
 [6 3 1 4 8 5 7 9 2]
 [2 5 4 3 9 7 1 8 6]]
Valid actions: [(3, 3, 8)]
All available actions: [(3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9)]
Running total step #26
Puzzle step # 14
Exploration rate (epsilon): 0.3868904411792755
All available actions: [(3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9)]
State:
[[3 4 6 1 7 9 2 5 8]
 [1 8 7 5 2 3 9 6 4]
 [5 2 9 6 4 8 3 7 1]
 [9 6 5 0 3 2 4 1 7]
 [4 7 2 9 1 6 8 3 5]
 [8 1 3 7 5 4 6 2 9]
 [7 9 8 2 6 1 5 4 3]
 [6 3 1 4 8 5 7 9 2]
 [2 5 4 3 9 7 1 8 6]]
Valid actions: [(3, 3, 8)]
All available actions: [(3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Solved.
Step: Action: (3, 3, 8), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: True
Board: tf.Tensor(
[[6 9 5 1 2 7 3 8 4]
 [1 3 8 0 5 9 6 7 0]
 [7 0 4 8 3 6 9 1 5]
 [8 5 1 2 6 0 7 3 9]
 [2 7 3 9 8 1 5 4 6]
 [9 4 6 5 7 3 8 2 1]
 [3 1 0 6 9 2 0 5 8]
 [4 8 9 0 1 5 2 0 3]
 [5 6 2 3 4 8 1 9 7]], shape=(9, 9), dtype=int32)

Puzzle # 3
All available actions: [(1, 3, 1), (1, 3, 2), (1, 3, 3), (1, 3, 4), (1, 3, 5), (1, 3, 6), (1, 3, 7), (1, 3, 8), (1, 3, 9), (1, 8, 1), (1, 8, 2), (1, 8, 3), (1, 8, 4), (1, 8, 5), (1, 8, 6), (1, 8, 7), (1, 8, 8), (1, 8, 9), (2, 1, 1), (2, 1, 2), (2, 1, 3), (2, 1, 4), (2, 1, 5), (2, 1, 6), (2, 1, 7), (2, 1, 8), (2, 1, 9), (3, 5, 1), (3, 5, 2), (3, 5, 3), (3, 5, 4), (3, 5, 5), (3, 5, 6), (3, 5, 7), (3, 5, 8), (3, 5, 9), (6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9), (6, 6, 1), (6, 6, 2), (6, 6, 3), (6, 6, 4), (6, 6, 5), (6, 6, 6), (6, 6, 7), (6, 6, 8), (6, 6, 9), (7, 3, 1), (7, 3, 2), (7, 3, 3), (7, 3, 4), (7, 3, 5), (7, 3, 6), (7, 3, 7), (7, 3, 8), (7, 3, 9), (7, 7, 1), (7, 7, 2), (7, 7, 3), (7, 7, 4), (7, 7, 5), (7, 7, 6), (7, 7, 7), (7, 7, 8), (7, 7, 9)]
State:
[[6 9 5 1 2 7 3 8 4]
 [1 3 8 0 5 9 6 7 0]
 [7 0 4 8 3 6 9 1 5]
 [8 5 1 2 6 0 7 3 9]
 [2 7 3 9 8 1 5 4 6]
 [9 4 6 5 7 3 8 2 1]
 [3 1 0 6 9 2 0 5 8]
 [4 8 9 0 1 5 2 0 3]
 [5 6 2 3 4 8 1 9 7]]
Valid actions: [(1, 3, 4), (1, 8, 2), (2, 1, 2), (3, 5, 4), (6, 2, 7), (6, 6, 4), (7, 3, 7), (7, 7, 6)]
All available actions: [(1, 3, 1), (1, 3, 2), (1, 3, 3), (1, 3, 4), (1, 3, 5), (1, 3, 6), (1, 3, 7), (1, 3, 8), (1, 3, 9), (1, 8, 1), (1, 8, 2), (1, 8, 3), (1, 8, 4), (1, 8, 5), (1, 8, 6), (1, 8, 7), (1, 8, 8), (1, 8, 9), (2, 1, 1), (2, 1, 2), (2, 1, 3), (2, 1, 4), (2, 1, 5), (2, 1, 6), (2, 1, 7), (2, 1, 8), (2, 1, 9), (3, 5, 1), (3, 5, 2), (3, 5, 3), (3, 5, 4), (3, 5, 5), (3, 5, 6), (3, 5, 7), (3, 5, 8), (3, 5, 9), (6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9), (6, 6, 1), (6, 6, 2), (6, 6, 3), (6, 6, 4), (6, 6, 5), (6, 6, 6), (6, 6, 7), (6, 6, 8), (6, 6, 9), (7, 3, 1), (7, 3, 2), (7, 3, 3), (7, 3, 4), (7, 3, 5), (7, 3, 6), (7, 3, 7), (7, 3, 8), (7, 3, 9), (7, 7, 1), (7, 7, 2), (7, 7, 3), (7, 7, 4), (7, 7, 5), (7, 7, 6), (7, 7, 7), (7, 7, 8), (7, 7, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (2, 1, 2), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #27
Puzzle step # 0
Exploration rate (epsilon): 0.3868904411792755
All available actions: [(1, 3, 1), (1, 3, 2), (1, 3, 3), (1, 3, 4), (1, 3, 5), (1, 3, 6), (1, 3, 7), (1, 3, 8), (1, 3, 9), (1, 8, 1), (1, 8, 2), (1, 8, 3), (1, 8, 4), (1, 8, 5), (1, 8, 6), (1, 8, 7), (1, 8, 8), (1, 8, 9), (3, 5, 1), (3, 5, 2), (3, 5, 3), (3, 5, 4), (3, 5, 5), (3, 5, 6), (3, 5, 7), (3, 5, 8), (3, 5, 9), (6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9), (6, 6, 1), (6, 6, 2), (6, 6, 3), (6, 6, 4), (6, 6, 5), (6, 6, 6), (6, 6, 7), (6, 6, 8), (6, 6, 9), (7, 3, 1), (7, 3, 2), (7, 3, 3), (7, 3, 4), (7, 3, 5), (7, 3, 6), (7, 3, 7), (7, 3, 8), (7, 3, 9), (7, 7, 1), (7, 7, 2), (7, 7, 3), (7, 7, 4), (7, 7, 5), (7, 7, 6), (7, 7, 7), (7, 7, 8), (7, 7, 9)]
State:
[[6 9 5 1 2 7 3 8 4]
 [1 3 8 0 5 9 6 7 0]
 [7 2 4 8 3 6 9 1 5]
 [8 5 1 2 6 0 7 3 9]
 [2 7 3 9 8 1 5 4 6]
 [9 4 6 5 7 3 8 2 1]
 [3 1 0 6 9 2 0 5 8]
 [4 8 9 0 1 5 2 0 3]
 [5 6 2 3 4 8 1 9 7]]
Valid actions: [(1, 3, 4), (1, 8, 2), (3, 5, 4), (6, 2, 7), (6, 6, 4), (7, 3, 7), (7, 7, 6)]
All available actions: [(1, 3, 1), (1, 3, 2), (1, 3, 3), (1, 3, 4), (1, 3, 5), (1, 3, 6), (1, 3, 7), (1, 3, 8), (1, 3, 9), (1, 8, 1), (1, 8, 2), (1, 8, 3), (1, 8, 4), (1, 8, 5), (1, 8, 6), (1, 8, 7), (1, 8, 8), (1, 8, 9), (3, 5, 1), (3, 5, 2), (3, 5, 3), (3, 5, 4), (3, 5, 5), (3, 5, 6), (3, 5, 7), (3, 5, 8), (3, 5, 9), (6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9), (6, 6, 1), (6, 6, 2), (6, 6, 3), (6, 6, 4), (6, 6, 5), (6, 6, 6), (6, 6, 7), (6, 6, 8), (6, 6, 9), (7, 3, 1), (7, 3, 2), (7, 3, 3), (7, 3, 4), (7, 3, 5), (7, 3, 6), (7, 3, 7), (7, 3, 8), (7, 3, 9), (7, 7, 1), (7, 7, 2), (7, 7, 3), (7, 7, 4), (7, 7, 5), (7, 7, 6), (7, 7, 7), (7, 7, 8), (7, 7, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (1, 8, 2), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #28
Puzzle step # 1
Exploration rate (epsilon): 0.3868904411792755
All available actions: [(1, 3, 1), (1, 3, 2), (1, 3, 3), (1, 3, 4), (1, 3, 5), (1, 3, 6), (1, 3, 7), (1, 3, 8), (1, 3, 9), (3, 5, 1), (3, 5, 2), (3, 5, 3), (3, 5, 4), (3, 5, 5), (3, 5, 6), (3, 5, 7), (3, 5, 8), (3, 5, 9), (6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9), (6, 6, 1), (6, 6, 2), (6, 6, 3), (6, 6, 4), (6, 6, 5), (6, 6, 6), (6, 6, 7), (6, 6, 8), (6, 6, 9), (7, 3, 1), (7, 3, 2), (7, 3, 3), (7, 3, 4), (7, 3, 5), (7, 3, 6), (7, 3, 7), (7, 3, 8), (7, 3, 9), (7, 7, 1), (7, 7, 2), (7, 7, 3), (7, 7, 4), (7, 7, 5), (7, 7, 6), (7, 7, 7), (7, 7, 8), (7, 7, 9)]
State:
[[6 9 5 1 2 7 3 8 4]
 [1 3 8 0 5 9 6 7 2]
 [7 2 4 8 3 6 9 1 5]
 [8 5 1 2 6 0 7 3 9]
 [2 7 3 9 8 1 5 4 6]
 [9 4 6 5 7 3 8 2 1]
 [3 1 0 6 9 2 0 5 8]
 [4 8 9 0 1 5 2 0 3]
 [5 6 2 3 4 8 1 9 7]]
Valid actions: [(1, 3, 4), (3, 5, 4), (6, 2, 7), (6, 6, 4), (7, 3, 7), (7, 7, 6)]
All available actions: [(1, 3, 1), (1, 3, 2), (1, 3, 3), (1, 3, 4), (1, 3, 5), (1, 3, 6), (1, 3, 7), (1, 3, 8), (1, 3, 9), (3, 5, 1), (3, 5, 2), (3, 5, 3), (3, 5, 4), (3, 5, 5), (3, 5, 6), (3, 5, 7), (3, 5, 8), (3, 5, 9), (6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9), (6, 6, 1), (6, 6, 2), (6, 6, 3), (6, 6, 4), (6, 6, 5), (6, 6, 6), (6, 6, 7), (6, 6, 8), (6, 6, 9), (7, 3, 1), (7, 3, 2), (7, 3, 3), (7, 3, 4), (7, 3, 5), (7, 3, 6), (7, 3, 7), (7, 3, 8), (7, 3, 9), (7, 7, 1), (7, 7, 2), (7, 7, 3), (7, 7, 4), (7, 7, 5), (7, 7, 6), (7, 7, 7), (7, 7, 8), (7, 7, 9)]
Running total step #29
Puzzle step # 2
Exploration rate (epsilon): 0.3868904411792755
All available actions: [(1, 3, 1), (1, 3, 2), (1, 3, 3), (1, 3, 4), (1, 3, 5), (1, 3, 6), (1, 3, 7), (1, 3, 8), (1, 3, 9), (3, 5, 1), (3, 5, 2), (3, 5, 3), (3, 5, 4), (3, 5, 5), (3, 5, 6), (3, 5, 7), (3, 5, 8), (3, 5, 9), (6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9), (6, 6, 1), (6, 6, 2), (6, 6, 3), (6, 6, 4), (6, 6, 5), (6, 6, 6), (6, 6, 7), (6, 6, 8), (6, 6, 9), (7, 3, 1), (7, 3, 2), (7, 3, 3), (7, 3, 4), (7, 3, 5), (7, 3, 6), (7, 3, 7), (7, 3, 8), (7, 3, 9), (7, 7, 1), (7, 7, 2), (7, 7, 3), (7, 7, 4), (7, 7, 5), (7, 7, 6), (7, 7, 7), (7, 7, 8), (7, 7, 9)]
State:
[[6 9 5 1 2 7 3 8 4]
 [1 3 8 0 5 9 6 7 2]
 [7 2 4 8 3 6 9 1 5]
 [8 5 1 2 6 0 7 3 9]
 [2 7 3 9 8 1 5 4 6]
 [9 4 6 5 7 3 8 2 1]
 [3 1 0 6 9 2 0 5 8]
 [4 8 9 0 1 5 2 0 3]
 [5 6 2 3 4 8 1 9 7]]
Valid actions: [(1, 3, 4), (3, 5, 4), (6, 2, 7), (6, 6, 4), (7, 3, 7), (7, 7, 6)]
All available actions: [(1, 3, 1), (1, 3, 2), (1, 3, 3), (1, 3, 4), (1, 3, 5), (1, 3, 6), (1, 3, 7), (1, 3, 8), (1, 3, 9), (3, 5, 1), (3, 5, 2), (3, 5, 3), (3, 5, 4), (3, 5, 5), (3, 5, 6), (3, 5, 7), (3, 5, 8), (3, 5, 9), (6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9), (6, 6, 1), (6, 6, 2), (6, 6, 3), (6, 6, 4), (6, 6, 5), (6, 6, 6), (6, 6, 7), (6, 6, 8), (6, 6, 9), (7, 3, 1), (7, 3, 2), (7, 3, 3), (7, 3, 4), (7, 3, 5), (7, 3, 6), (7, 3, 7), (7, 3, 8), (7, 3, 9), (7, 7, 1), (7, 7, 2), (7, 7, 3), (7, 7, 4), (7, 7, 5), (7, 7, 6), (7, 7, 7), (7, 7, 8), (7, 7, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (1, 3, 4), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #30
Puzzle step # 3
Exploration rate (epsilon): 0.3675459325313568
All available actions: [(3, 5, 1), (3, 5, 2), (3, 5, 3), (3, 5, 4), (3, 5, 5), (3, 5, 6), (3, 5, 7), (3, 5, 8), (3, 5, 9), (6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9), (6, 6, 1), (6, 6, 2), (6, 6, 3), (6, 6, 4), (6, 6, 5), (6, 6, 6), (6, 6, 7), (6, 6, 8), (6, 6, 9), (7, 3, 1), (7, 3, 2), (7, 3, 3), (7, 3, 4), (7, 3, 5), (7, 3, 6), (7, 3, 7), (7, 3, 8), (7, 3, 9), (7, 7, 1), (7, 7, 2), (7, 7, 3), (7, 7, 4), (7, 7, 5), (7, 7, 6), (7, 7, 7), (7, 7, 8), (7, 7, 9)]
State:
[[6 9 5 1 2 7 3 8 4]
 [1 3 8 4 5 9 6 7 2]
 [7 2 4 8 3 6 9 1 5]
 [8 5 1 2 6 0 7 3 9]
 [2 7 3 9 8 1 5 4 6]
 [9 4 6 5 7 3 8 2 1]
 [3 1 0 6 9 2 0 5 8]
 [4 8 9 0 1 5 2 0 3]
 [5 6 2 3 4 8 1 9 7]]
Valid actions: [(3, 5, 4), (6, 2, 7), (6, 6, 4), (7, 3, 7), (7, 7, 6)]
All available actions: [(3, 5, 1), (3, 5, 2), (3, 5, 3), (3, 5, 4), (3, 5, 5), (3, 5, 6), (3, 5, 7), (3, 5, 8), (3, 5, 9), (6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9), (6, 6, 1), (6, 6, 2), (6, 6, 3), (6, 6, 4), (6, 6, 5), (6, 6, 6), (6, 6, 7), (6, 6, 8), (6, 6, 9), (7, 3, 1), (7, 3, 2), (7, 3, 3), (7, 3, 4), (7, 3, 5), (7, 3, 6), (7, 3, 7), (7, 3, 8), (7, 3, 9), (7, 7, 1), (7, 7, 2), (7, 7, 3), (7, 7, 4), (7, 7, 5), (7, 7, 6), (7, 7, 7), (7, 7, 8), (7, 7, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (6, 6, 4), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #31
Puzzle step # 4
Exploration rate (epsilon): 0.3675459325313568
All available actions: [(3, 5, 1), (3, 5, 2), (3, 5, 3), (3, 5, 4), (3, 5, 5), (3, 5, 6), (3, 5, 7), (3, 5, 8), (3, 5, 9), (6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9), (7, 3, 1), (7, 3, 2), (7, 3, 3), (7, 3, 4), (7, 3, 5), (7, 3, 6), (7, 3, 7), (7, 3, 8), (7, 3, 9), (7, 7, 1), (7, 7, 2), (7, 7, 3), (7, 7, 4), (7, 7, 5), (7, 7, 6), (7, 7, 7), (7, 7, 8), (7, 7, 9)]
State:
[[6 9 5 1 2 7 3 8 4]
 [1 3 8 4 5 9 6 7 2]
 [7 2 4 8 3 6 9 1 5]
 [8 5 1 2 6 0 7 3 9]
 [2 7 3 9 8 1 5 4 6]
 [9 4 6 5 7 3 8 2 1]
 [3 1 0 6 9 2 4 5 8]
 [4 8 9 0 1 5 2 0 3]
 [5 6 2 3 4 8 1 9 7]]
Valid actions: [(3, 5, 4), (6, 2, 7), (7, 3, 7), (7, 7, 6)]
All available actions: [(3, 5, 1), (3, 5, 2), (3, 5, 3), (3, 5, 4), (3, 5, 5), (3, 5, 6), (3, 5, 7), (3, 5, 8), (3, 5, 9), (6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9), (7, 3, 1), (7, 3, 2), (7, 3, 3), (7, 3, 4), (7, 3, 5), (7, 3, 6), (7, 3, 7), (7, 3, 8), (7, 3, 9), (7, 7, 1), (7, 7, 2), (7, 7, 3), (7, 7, 4), (7, 7, 5), (7, 7, 6), (7, 7, 7), (7, 7, 8), (7, 7, 9)]
Running total step #32
Puzzle step # 5
Exploration rate (epsilon): 0.3675459325313568
All available actions: [(3, 5, 1), (3, 5, 2), (3, 5, 3), (3, 5, 4), (3, 5, 5), (3, 5, 6), (3, 5, 7), (3, 5, 8), (3, 5, 9), (6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9), (7, 3, 1), (7, 3, 2), (7, 3, 3), (7, 3, 4), (7, 3, 5), (7, 3, 6), (7, 3, 7), (7, 3, 8), (7, 3, 9), (7, 7, 1), (7, 7, 2), (7, 7, 3), (7, 7, 4), (7, 7, 5), (7, 7, 6), (7, 7, 7), (7, 7, 8), (7, 7, 9)]
State:
[[6 9 5 1 2 7 3 8 4]
 [1 3 8 4 5 9 6 7 2]
 [7 2 4 8 3 6 9 1 5]
 [8 5 1 2 6 0 7 3 9]
 [2 7 3 9 8 1 5 4 6]
 [9 4 6 5 7 3 8 2 1]
 [3 1 0 6 9 2 4 5 8]
 [4 8 9 0 1 5 2 0 3]
 [5 6 2 3 4 8 1 9 7]]
Valid actions: [(3, 5, 4), (6, 2, 7), (7, 3, 7), (7, 7, 6)]
All available actions: [(3, 5, 1), (3, 5, 2), (3, 5, 3), (3, 5, 4), (3, 5, 5), (3, 5, 6), (3, 5, 7), (3, 5, 8), (3, 5, 9), (6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9), (7, 3, 1), (7, 3, 2), (7, 3, 3), (7, 3, 4), (7, 3, 5), (7, 3, 6), (7, 3, 7), (7, 3, 8), (7, 3, 9), (7, 7, 1), (7, 7, 2), (7, 7, 3), (7, 7, 4), (7, 7, 5), (7, 7, 6), (7, 7, 7), (7, 7, 8), (7, 7, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (3, 5, 4), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #33
Puzzle step # 6
Exploration rate (epsilon): 0.3675459325313568
All available actions: [(6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9), (7, 3, 1), (7, 3, 2), (7, 3, 3), (7, 3, 4), (7, 3, 5), (7, 3, 6), (7, 3, 7), (7, 3, 8), (7, 3, 9), (7, 7, 1), (7, 7, 2), (7, 7, 3), (7, 7, 4), (7, 7, 5), (7, 7, 6), (7, 7, 7), (7, 7, 8), (7, 7, 9)]
State:
[[6 9 5 1 2 7 3 8 4]
 [1 3 8 4 5 9 6 7 2]
 [7 2 4 8 3 6 9 1 5]
 [8 5 1 2 6 4 7 3 9]
 [2 7 3 9 8 1 5 4 6]
 [9 4 6 5 7 3 8 2 1]
 [3 1 0 6 9 2 4 5 8]
 [4 8 9 0 1 5 2 0 3]
 [5 6 2 3 4 8 1 9 7]]
Valid actions: [(6, 2, 7), (7, 3, 7), (7, 7, 6)]
All available actions: [(6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9), (7, 3, 1), (7, 3, 2), (7, 3, 3), (7, 3, 4), (7, 3, 5), (7, 3, 6), (7, 3, 7), (7, 3, 8), (7, 3, 9), (7, 7, 1), (7, 7, 2), (7, 7, 3), (7, 7, 4), (7, 7, 5), (7, 7, 6), (7, 7, 7), (7, 7, 8), (7, 7, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (7, 7, 6), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #34
Puzzle step # 7
Exploration rate (epsilon): 0.3675459325313568
All available actions: [(6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9), (7, 3, 1), (7, 3, 2), (7, 3, 3), (7, 3, 4), (7, 3, 5), (7, 3, 6), (7, 3, 7), (7, 3, 8), (7, 3, 9)]
State:
[[6 9 5 1 2 7 3 8 4]
 [1 3 8 4 5 9 6 7 2]
 [7 2 4 8 3 6 9 1 5]
 [8 5 1 2 6 4 7 3 9]
 [2 7 3 9 8 1 5 4 6]
 [9 4 6 5 7 3 8 2 1]
 [3 1 0 6 9 2 4 5 8]
 [4 8 9 0 1 5 2 6 3]
 [5 6 2 3 4 8 1 9 7]]
Valid actions: [(6, 2, 7), (7, 3, 7)]
All available actions: [(6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9), (7, 3, 1), (7, 3, 2), (7, 3, 3), (7, 3, 4), (7, 3, 5), (7, 3, 6), (7, 3, 7), (7, 3, 8), (7, 3, 9)]
Running total step #35
Puzzle step # 8
Exploration rate (epsilon): 0.3491686284542084
All available actions: [(6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9), (7, 3, 1), (7, 3, 2), (7, 3, 3), (7, 3, 4), (7, 3, 5), (7, 3, 6), (7, 3, 7), (7, 3, 8), (7, 3, 9)]
State:
[[6 9 5 1 2 7 3 8 4]
 [1 3 8 4 5 9 6 7 2]
 [7 2 4 8 3 6 9 1 5]
 [8 5 1 2 6 4 7 3 9]
 [2 7 3 9 8 1 5 4 6]
 [9 4 6 5 7 3 8 2 1]
 [3 1 0 6 9 2 4 5 8]
 [4 8 9 0 1 5 2 6 3]
 [5 6 2 3 4 8 1 9 7]]
Valid actions: [(6, 2, 7), (7, 3, 7)]
All available actions: [(6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9), (7, 3, 1), (7, 3, 2), (7, 3, 3), (7, 3, 4), (7, 3, 5), (7, 3, 6), (7, 3, 7), (7, 3, 8), (7, 3, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (6, 2, 7), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #36
Puzzle step # 9
Exploration rate (epsilon): 0.3491686284542084
All available actions: [(7, 3, 1), (7, 3, 2), (7, 3, 3), (7, 3, 4), (7, 3, 5), (7, 3, 6), (7, 3, 7), (7, 3, 8), (7, 3, 9)]
State:
[[6 9 5 1 2 7 3 8 4]
 [1 3 8 4 5 9 6 7 2]
 [7 2 4 8 3 6 9 1 5]
 [8 5 1 2 6 4 7 3 9]
 [2 7 3 9 8 1 5 4 6]
 [9 4 6 5 7 3 8 2 1]
 [3 1 7 6 9 2 4 5 8]
 [4 8 9 0 1 5 2 6 3]
 [5 6 2 3 4 8 1 9 7]]
Valid actions: [(7, 3, 7)]
All available actions: [(7, 3, 1), (7, 3, 2), (7, 3, 3), (7, 3, 4), (7, 3, 5), (7, 3, 6), (7, 3, 7), (7, 3, 8), (7, 3, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Solved.
Step: Action: (7, 3, 7), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: True
Board: tf.Tensor(
[[4 9 7 2 5 8 3 1 6]
 [1 8 6 4 3 9 7 0 0]
 [2 5 3 7 1 6 4 9 8]
 [6 2 9 3 8 1 5 4 7]
 [3 0 5 9 0 4 1 8 2]
 [8 4 1 5 7 2 6 3 9]
 [9 6 2 0 4 5 8 7 3]
 [7 1 8 6 2 0 0 5 4]
 [5 0 4 8 9 7 2 6 1]], shape=(9, 9), dtype=int32)

Puzzle # 4
All available actions: [(1, 7, 1), (1, 7, 2), (1, 7, 3), (1, 7, 4), (1, 7, 5), (1, 7, 6), (1, 7, 7), (1, 7, 8), (1, 7, 9), (1, 8, 1), (1, 8, 2), (1, 8, 3), (1, 8, 4), (1, 8, 5), (1, 8, 6), (1, 8, 7), (1, 8, 8), (1, 8, 9), (4, 1, 1), (4, 1, 2), (4, 1, 3), (4, 1, 4), (4, 1, 5), (4, 1, 6), (4, 1, 7), (4, 1, 8), (4, 1, 9), (4, 4, 1), (4, 4, 2), (4, 4, 3), (4, 4, 4), (4, 4, 5), (4, 4, 6), (4, 4, 7), (4, 4, 8), (4, 4, 9), (6, 3, 1), (6, 3, 2), (6, 3, 3), (6, 3, 4), (6, 3, 5), (6, 3, 6), (6, 3, 7), (6, 3, 8), (6, 3, 9), (7, 5, 1), (7, 5, 2), (7, 5, 3), (7, 5, 4), (7, 5, 5), (7, 5, 6), (7, 5, 7), (7, 5, 8), (7, 5, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9), (8, 1, 1), (8, 1, 2), (8, 1, 3), (8, 1, 4), (8, 1, 5), (8, 1, 6), (8, 1, 7), (8, 1, 8), (8, 1, 9)]
State:
[[4 9 7 2 5 8 3 1 6]
 [1 8 6 4 3 9 7 0 0]
 [2 5 3 7 1 6 4 9 8]
 [6 2 9 3 8 1 5 4 7]
 [3 0 5 9 0 4 1 8 2]
 [8 4 1 5 7 2 6 3 9]
 [9 6 2 0 4 5 8 7 3]
 [7 1 8 6 2 0 0 5 4]
 [5 0 4 8 9 7 2 6 1]]
Valid actions: [(1, 7, 2), (1, 8, 5), (4, 1, 7), (4, 4, 6), (6, 3, 1), (7, 5, 3), (7, 6, 9), (8, 1, 3)]
All available actions: [(1, 7, 1), (1, 7, 2), (1, 7, 3), (1, 7, 4), (1, 7, 5), (1, 7, 6), (1, 7, 7), (1, 7, 8), (1, 7, 9), (1, 8, 1), (1, 8, 2), (1, 8, 3), (1, 8, 4), (1, 8, 5), (1, 8, 6), (1, 8, 7), (1, 8, 8), (1, 8, 9), (4, 1, 1), (4, 1, 2), (4, 1, 3), (4, 1, 4), (4, 1, 5), (4, 1, 6), (4, 1, 7), (4, 1, 8), (4, 1, 9), (4, 4, 1), (4, 4, 2), (4, 4, 3), (4, 4, 4), (4, 4, 5), (4, 4, 6), (4, 4, 7), (4, 4, 8), (4, 4, 9), (6, 3, 1), (6, 3, 2), (6, 3, 3), (6, 3, 4), (6, 3, 5), (6, 3, 6), (6, 3, 7), (6, 3, 8), (6, 3, 9), (7, 5, 1), (7, 5, 2), (7, 5, 3), (7, 5, 4), (7, 5, 5), (7, 5, 6), (7, 5, 7), (7, 5, 8), (7, 5, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9), (8, 1, 1), (8, 1, 2), (8, 1, 3), (8, 1, 4), (8, 1, 5), (8, 1, 6), (8, 1, 7), (8, 1, 8), (8, 1, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (7, 6, 9), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #37
Puzzle step # 0
Exploration rate (epsilon): 0.3491686284542084
All available actions: [(1, 7, 1), (1, 7, 2), (1, 7, 3), (1, 7, 4), (1, 7, 5), (1, 7, 6), (1, 7, 7), (1, 7, 8), (1, 7, 9), (1, 8, 1), (1, 8, 2), (1, 8, 3), (1, 8, 4), (1, 8, 5), (1, 8, 6), (1, 8, 7), (1, 8, 8), (1, 8, 9), (4, 1, 1), (4, 1, 2), (4, 1, 3), (4, 1, 4), (4, 1, 5), (4, 1, 6), (4, 1, 7), (4, 1, 8), (4, 1, 9), (4, 4, 1), (4, 4, 2), (4, 4, 3), (4, 4, 4), (4, 4, 5), (4, 4, 6), (4, 4, 7), (4, 4, 8), (4, 4, 9), (6, 3, 1), (6, 3, 2), (6, 3, 3), (6, 3, 4), (6, 3, 5), (6, 3, 6), (6, 3, 7), (6, 3, 8), (6, 3, 9), (7, 5, 1), (7, 5, 2), (7, 5, 3), (7, 5, 4), (7, 5, 5), (7, 5, 6), (7, 5, 7), (7, 5, 8), (7, 5, 9), (8, 1, 1), (8, 1, 2), (8, 1, 3), (8, 1, 4), (8, 1, 5), (8, 1, 6), (8, 1, 7), (8, 1, 8), (8, 1, 9)]
State:
[[4 9 7 2 5 8 3 1 6]
 [1 8 6 4 3 9 7 0 0]
 [2 5 3 7 1 6 4 9 8]
 [6 2 9 3 8 1 5 4 7]
 [3 0 5 9 0 4 1 8 2]
 [8 4 1 5 7 2 6 3 9]
 [9 6 2 0 4 5 8 7 3]
 [7 1 8 6 2 0 9 5 4]
 [5 0 4 8 9 7 2 6 1]]
Valid actions: [(1, 7, 2), (1, 8, 5), (4, 1, 7), (4, 4, 6), (6, 3, 1), (7, 5, 3), (8, 1, 3)]
All available actions: [(1, 7, 1), (1, 7, 2), (1, 7, 3), (1, 7, 4), (1, 7, 5), (1, 7, 6), (1, 7, 7), (1, 7, 8), (1, 7, 9), (1, 8, 1), (1, 8, 2), (1, 8, 3), (1, 8, 4), (1, 8, 5), (1, 8, 6), (1, 8, 7), (1, 8, 8), (1, 8, 9), (4, 1, 1), (4, 1, 2), (4, 1, 3), (4, 1, 4), (4, 1, 5), (4, 1, 6), (4, 1, 7), (4, 1, 8), (4, 1, 9), (4, 4, 1), (4, 4, 2), (4, 4, 3), (4, 4, 4), (4, 4, 5), (4, 4, 6), (4, 4, 7), (4, 4, 8), (4, 4, 9), (6, 3, 1), (6, 3, 2), (6, 3, 3), (6, 3, 4), (6, 3, 5), (6, 3, 6), (6, 3, 7), (6, 3, 8), (6, 3, 9), (7, 5, 1), (7, 5, 2), (7, 5, 3), (7, 5, 4), (7, 5, 5), (7, 5, 6), (7, 5, 7), (7, 5, 8), (7, 5, 9), (8, 1, 1), (8, 1, 2), (8, 1, 3), (8, 1, 4), (8, 1, 5), (8, 1, 6), (8, 1, 7), (8, 1, 8), (8, 1, 9)]
Running total step #38
Puzzle step # 1
Exploration rate (epsilon): 0.3491686284542084
All available actions: [(1, 7, 1), (1, 7, 2), (1, 7, 3), (1, 7, 4), (1, 7, 5), (1, 7, 6), (1, 7, 7), (1, 7, 8), (1, 7, 9), (1, 8, 1), (1, 8, 2), (1, 8, 3), (1, 8, 4), (1, 8, 5), (1, 8, 6), (1, 8, 7), (1, 8, 8), (1, 8, 9), (4, 1, 1), (4, 1, 2), (4, 1, 3), (4, 1, 4), (4, 1, 5), (4, 1, 6), (4, 1, 7), (4, 1, 8), (4, 1, 9), (4, 4, 1), (4, 4, 2), (4, 4, 3), (4, 4, 4), (4, 4, 5), (4, 4, 6), (4, 4, 7), (4, 4, 8), (4, 4, 9), (6, 3, 1), (6, 3, 2), (6, 3, 3), (6, 3, 4), (6, 3, 5), (6, 3, 6), (6, 3, 7), (6, 3, 8), (6, 3, 9), (7, 5, 1), (7, 5, 2), (7, 5, 3), (7, 5, 4), (7, 5, 5), (7, 5, 6), (7, 5, 7), (7, 5, 8), (7, 5, 9), (8, 1, 1), (8, 1, 2), (8, 1, 3), (8, 1, 4), (8, 1, 5), (8, 1, 6), (8, 1, 7), (8, 1, 8), (8, 1, 9)]
State:
[[4 9 7 2 5 8 3 1 6]
 [1 8 6 4 3 9 7 0 0]
 [2 5 3 7 1 6 4 9 8]
 [6 2 9 3 8 1 5 4 7]
 [3 0 5 9 0 4 1 8 2]
 [8 4 1 5 7 2 6 3 9]
 [9 6 2 0 4 5 8 7 3]
 [7 1 8 6 2 0 9 5 4]
 [5 0 4 8 9 7 2 6 1]]
Valid actions: [(1, 7, 2), (1, 8, 5), (4, 1, 7), (4, 4, 6), (6, 3, 1), (7, 5, 3), (8, 1, 3)]
All available actions: [(1, 7, 1), (1, 7, 2), (1, 7, 3), (1, 7, 4), (1, 7, 5), (1, 7, 6), (1, 7, 7), (1, 7, 8), (1, 7, 9), (1, 8, 1), (1, 8, 2), (1, 8, 3), (1, 8, 4), (1, 8, 5), (1, 8, 6), (1, 8, 7), (1, 8, 8), (1, 8, 9), (4, 1, 1), (4, 1, 2), (4, 1, 3), (4, 1, 4), (4, 1, 5), (4, 1, 6), (4, 1, 7), (4, 1, 8), (4, 1, 9), (4, 4, 1), (4, 4, 2), (4, 4, 3), (4, 4, 4), (4, 4, 5), (4, 4, 6), (4, 4, 7), (4, 4, 8), (4, 4, 9), (6, 3, 1), (6, 3, 2), (6, 3, 3), (6, 3, 4), (6, 3, 5), (6, 3, 6), (6, 3, 7), (6, 3, 8), (6, 3, 9), (7, 5, 1), (7, 5, 2), (7, 5, 3), (7, 5, 4), (7, 5, 5), (7, 5, 6), (7, 5, 7), (7, 5, 8), (7, 5, 9), (8, 1, 1), (8, 1, 2), (8, 1, 3), (8, 1, 4), (8, 1, 5), (8, 1, 6), (8, 1, 7), (8, 1, 8), (8, 1, 9)]
Running total step #39
Puzzle step # 2
Exploration rate (epsilon): 0.3491686284542084
All available actions: [(1, 7, 1), (1, 7, 2), (1, 7, 3), (1, 7, 4), (1, 7, 5), (1, 7, 6), (1, 7, 7), (1, 7, 8), (1, 7, 9), (1, 8, 1), (1, 8, 2), (1, 8, 3), (1, 8, 4), (1, 8, 5), (1, 8, 6), (1, 8, 7), (1, 8, 8), (1, 8, 9), (4, 1, 1), (4, 1, 2), (4, 1, 3), (4, 1, 4), (4, 1, 5), (4, 1, 6), (4, 1, 7), (4, 1, 8), (4, 1, 9), (4, 4, 1), (4, 4, 2), (4, 4, 3), (4, 4, 4), (4, 4, 5), (4, 4, 6), (4, 4, 7), (4, 4, 8), (4, 4, 9), (6, 3, 1), (6, 3, 2), (6, 3, 3), (6, 3, 4), (6, 3, 5), (6, 3, 6), (6, 3, 7), (6, 3, 8), (6, 3, 9), (7, 5, 1), (7, 5, 2), (7, 5, 3), (7, 5, 4), (7, 5, 5), (7, 5, 6), (7, 5, 7), (7, 5, 8), (7, 5, 9), (8, 1, 1), (8, 1, 2), (8, 1, 3), (8, 1, 4), (8, 1, 5), (8, 1, 6), (8, 1, 7), (8, 1, 8), (8, 1, 9)]
State:
[[4 9 7 2 5 8 3 1 6]
 [1 8 6 4 3 9 7 0 0]
 [2 5 3 7 1 6 4 9 8]
 [6 2 9 3 8 1 5 4 7]
 [3 0 5 9 0 4 1 8 2]
 [8 4 1 5 7 2 6 3 9]
 [9 6 2 0 4 5 8 7 3]
 [7 1 8 6 2 0 9 5 4]
 [5 0 4 8 9 7 2 6 1]]
Valid actions: [(1, 7, 2), (1, 8, 5), (4, 1, 7), (4, 4, 6), (6, 3, 1), (7, 5, 3), (8, 1, 3)]
All available actions: [(1, 7, 1), (1, 7, 2), (1, 7, 3), (1, 7, 4), (1, 7, 5), (1, 7, 6), (1, 7, 7), (1, 7, 8), (1, 7, 9), (1, 8, 1), (1, 8, 2), (1, 8, 3), (1, 8, 4), (1, 8, 5), (1, 8, 6), (1, 8, 7), (1, 8, 8), (1, 8, 9), (4, 1, 1), (4, 1, 2), (4, 1, 3), (4, 1, 4), (4, 1, 5), (4, 1, 6), (4, 1, 7), (4, 1, 8), (4, 1, 9), (4, 4, 1), (4, 4, 2), (4, 4, 3), (4, 4, 4), (4, 4, 5), (4, 4, 6), (4, 4, 7), (4, 4, 8), (4, 4, 9), (6, 3, 1), (6, 3, 2), (6, 3, 3), (6, 3, 4), (6, 3, 5), (6, 3, 6), (6, 3, 7), (6, 3, 8), (6, 3, 9), (7, 5, 1), (7, 5, 2), (7, 5, 3), (7, 5, 4), (7, 5, 5), (7, 5, 6), (7, 5, 7), (7, 5, 8), (7, 5, 9), (8, 1, 1), (8, 1, 2), (8, 1, 3), (8, 1, 4), (8, 1, 5), (8, 1, 6), (8, 1, 7), (8, 1, 8), (8, 1, 9)]
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (1, 8, 5), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #40
Puzzle step # 3
Exploration rate (epsilon): 0.33171018958091736
All available actions: [(1, 7, 1), (1, 7, 2), (1, 7, 3), (1, 7, 4), (1, 7, 5), (1, 7, 6), (1, 7, 7), (1, 7, 8), (1, 7, 9), (4, 1, 1), (4, 1, 2), (4, 1, 3), (4, 1, 4), (4, 1, 5), (4, 1, 6), (4, 1, 7), (4, 1, 8), (4, 1, 9), (4, 4, 1), (4, 4, 2), (4, 4, 3), (4, 4, 4), (4, 4, 5), (4, 4, 6), (4, 4, 7), (4, 4, 8), (4, 4, 9), (6, 3, 1), (6, 3, 2), (6, 3, 3), (6, 3, 4), (6, 3, 5), (6, 3, 6), (6, 3, 7), (6, 3, 8), (6, 3, 9), (7, 5, 1), (7, 5, 2), (7, 5, 3), (7, 5, 4), (7, 5, 5), (7, 5, 6), (7, 5, 7), (7, 5, 8), (7, 5, 9), (8, 1, 1), (8, 1, 2), (8, 1, 3), (8, 1, 4), (8, 1, 5), (8, 1, 6), (8, 1, 7), (8, 1, 8), (8, 1, 9)]
State:
[[4 9 7 2 5 8 3 1 6]
 [1 8 6 4 3 9 7 0 5]
 [2 5 3 7 1 6 4 9 8]
 [6 2 9 3 8 1 5 4 7]
 [3 0 5 9 0 4 1 8 2]
 [8 4 1 5 7 2 6 3 9]
 [9 6 2 0 4 5 8 7 3]
 [7 1 8 6 2 0 9 5 4]
 [5 0 4 8 9 7 2 6 1]]
Valid actions: [(1, 7, 2), (4, 1, 7), (4, 4, 6), (6, 3, 1), (7, 5, 3), (8, 1, 3)]
All available actions: [(1, 7, 1), (1, 7, 2), (1, 7, 3), (1, 7, 4), (1, 7, 5), (1, 7, 6), (1, 7, 7), (1, 7, 8), (1, 7, 9), (4, 1, 1), (4, 1, 2), (4, 1, 3), (4, 1, 4), (4, 1, 5), (4, 1, 6), (4, 1, 7), (4, 1, 8), (4, 1, 9), (4, 4, 1), (4, 4, 2), (4, 4, 3), (4, 4, 4), (4, 4, 5), (4, 4, 6), (4, 4, 7), (4, 4, 8), (4, 4, 9), (6, 3, 1), (6, 3, 2), (6, 3, 3), (6, 3, 4), (6, 3, 5), (6, 3, 6), (6, 3, 7), (6, 3, 8), (6, 3, 9), (7, 5, 1), (7, 5, 2), (7, 5, 3), (7, 5, 4), (7, 5, 5), (7, 5, 6), (7, 5, 7), (7, 5, 8), (7, 5, 9), (8, 1, 1), (8, 1, 2), (8, 1, 3), (8, 1, 4), (8, 1, 5), (8, 1, 6), (8, 1, 7), (8, 1, 8), (8, 1, 9)]
Running total step #41
Puzzle step # 4
Exploration rate (epsilon): 0.33171018958091736
All available actions: [(1, 7, 1), (1, 7, 2), (1, 7, 3), (1, 7, 4), (1, 7, 5), (1, 7, 6), (1, 7, 7), (1, 7, 8), (1, 7, 9), (4, 1, 1), (4, 1, 2), (4, 1, 3), (4, 1, 4), (4, 1, 5), (4, 1, 6), (4, 1, 7), (4, 1, 8), (4, 1, 9), (4, 4, 1), (4, 4, 2), (4, 4, 3), (4, 4, 4), (4, 4, 5), (4, 4, 6), (4, 4, 7), (4, 4, 8), (4, 4, 9), (6, 3, 1), (6, 3, 2), (6, 3, 3), (6, 3, 4), (6, 3, 5), (6, 3, 6), (6, 3, 7), (6, 3, 8), (6, 3, 9), (7, 5, 1), (7, 5, 2), (7, 5, 3), (7, 5, 4), (7, 5, 5), (7, 5, 6), (7, 5, 7), (7, 5, 8), (7, 5, 9), (8, 1, 1), (8, 1, 2), (8, 1, 3), (8, 1, 4), (8, 1, 5), (8, 1, 6), (8, 1, 7), (8, 1, 8), (8, 1, 9)]
State:
[[4 9 7 2 5 8 3 1 6]
 [1 8 6 4 3 9 7 0 5]
 [2 5 3 7 1 6 4 9 8]
 [6 2 9 3 8 1 5 4 7]
 [3 0 5 9 0 4 1 8 2]
 [8 4 1 5 7 2 6 3 9]
 [9 6 2 0 4 5 8 7 3]
 [7 1 8 6 2 0 9 5 4]
 [5 0 4 8 9 7 2 6 1]]
Valid actions: [(1, 7, 2), (4, 1, 7), (4, 4, 6), (6, 3, 1), (7, 5, 3), (8, 1, 3)]
All available actions: [(1, 7, 1), (1, 7, 2), (1, 7, 3), (1, 7, 4), (1, 7, 5), (1, 7, 6), (1, 7, 7), (1, 7, 8), (1, 7, 9), (4, 1, 1), (4, 1, 2), (4, 1, 3), (4, 1, 4), (4, 1, 5), (4, 1, 6), (4, 1, 7), (4, 1, 8), (4, 1, 9), (4, 4, 1), (4, 4, 2), (4, 4, 3), (4, 4, 4), (4, 4, 5), (4, 4, 6), (4, 4, 7), (4, 4, 8), (4, 4, 9), (6, 3, 1), (6, 3, 2), (6, 3, 3), (6, 3, 4), (6, 3, 5), (6, 3, 6), (6, 3, 7), (6, 3, 8), (6, 3, 9), (7, 5, 1), (7, 5, 2), (7, 5, 3), (7, 5, 4), (7, 5, 5), (7, 5, 6), (7, 5, 7), (7, 5, 8), (7, 5, 9), (8, 1, 1), (8, 1, 2), (8, 1, 3), (8, 1, 4), (8, 1, 5), (8, 1, 6), (8, 1, 7), (8, 1, 8), (8, 1, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (1, 7, 2), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #42
Puzzle step # 5
Exploration rate (epsilon): 0.33171018958091736
All available actions: [(4, 1, 1), (4, 1, 2), (4, 1, 3), (4, 1, 4), (4, 1, 5), (4, 1, 6), (4, 1, 7), (4, 1, 8), (4, 1, 9), (4, 4, 1), (4, 4, 2), (4, 4, 3), (4, 4, 4), (4, 4, 5), (4, 4, 6), (4, 4, 7), (4, 4, 8), (4, 4, 9), (6, 3, 1), (6, 3, 2), (6, 3, 3), (6, 3, 4), (6, 3, 5), (6, 3, 6), (6, 3, 7), (6, 3, 8), (6, 3, 9), (7, 5, 1), (7, 5, 2), (7, 5, 3), (7, 5, 4), (7, 5, 5), (7, 5, 6), (7, 5, 7), (7, 5, 8), (7, 5, 9), (8, 1, 1), (8, 1, 2), (8, 1, 3), (8, 1, 4), (8, 1, 5), (8, 1, 6), (8, 1, 7), (8, 1, 8), (8, 1, 9)]
State:
[[4 9 7 2 5 8 3 1 6]
 [1 8 6 4 3 9 7 2 5]
 [2 5 3 7 1 6 4 9 8]
 [6 2 9 3 8 1 5 4 7]
 [3 0 5 9 0 4 1 8 2]
 [8 4 1 5 7 2 6 3 9]
 [9 6 2 0 4 5 8 7 3]
 [7 1 8 6 2 0 9 5 4]
 [5 0 4 8 9 7 2 6 1]]
Valid actions: [(4, 1, 7), (4, 4, 6), (6, 3, 1), (7, 5, 3), (8, 1, 3)]
All available actions: [(4, 1, 1), (4, 1, 2), (4, 1, 3), (4, 1, 4), (4, 1, 5), (4, 1, 6), (4, 1, 7), (4, 1, 8), (4, 1, 9), (4, 4, 1), (4, 4, 2), (4, 4, 3), (4, 4, 4), (4, 4, 5), (4, 4, 6), (4, 4, 7), (4, 4, 8), (4, 4, 9), (6, 3, 1), (6, 3, 2), (6, 3, 3), (6, 3, 4), (6, 3, 5), (6, 3, 6), (6, 3, 7), (6, 3, 8), (6, 3, 9), (7, 5, 1), (7, 5, 2), (7, 5, 3), (7, 5, 4), (7, 5, 5), (7, 5, 6), (7, 5, 7), (7, 5, 8), (7, 5, 9), (8, 1, 1), (8, 1, 2), (8, 1, 3), (8, 1, 4), (8, 1, 5), (8, 1, 6), (8, 1, 7), (8, 1, 8), (8, 1, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (6, 3, 1), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #43
Puzzle step # 6
Exploration rate (epsilon): 0.33171018958091736
All available actions: [(4, 1, 1), (4, 1, 2), (4, 1, 3), (4, 1, 4), (4, 1, 5), (4, 1, 6), (4, 1, 7), (4, 1, 8), (4, 1, 9), (4, 4, 1), (4, 4, 2), (4, 4, 3), (4, 4, 4), (4, 4, 5), (4, 4, 6), (4, 4, 7), (4, 4, 8), (4, 4, 9), (7, 5, 1), (7, 5, 2), (7, 5, 3), (7, 5, 4), (7, 5, 5), (7, 5, 6), (7, 5, 7), (7, 5, 8), (7, 5, 9), (8, 1, 1), (8, 1, 2), (8, 1, 3), (8, 1, 4), (8, 1, 5), (8, 1, 6), (8, 1, 7), (8, 1, 8), (8, 1, 9)]
State:
[[4 9 7 2 5 8 3 1 6]
 [1 8 6 4 3 9 7 2 5]
 [2 5 3 7 1 6 4 9 8]
 [6 2 9 3 8 1 5 4 7]
 [3 0 5 9 0 4 1 8 2]
 [8 4 1 5 7 2 6 3 9]
 [9 6 2 1 4 5 8 7 3]
 [7 1 8 6 2 0 9 5 4]
 [5 0 4 8 9 7 2 6 1]]
Valid actions: [(4, 1, 7), (4, 4, 6), (7, 5, 3), (8, 1, 3)]
All available actions: [(4, 1, 1), (4, 1, 2), (4, 1, 3), (4, 1, 4), (4, 1, 5), (4, 1, 6), (4, 1, 7), (4, 1, 8), (4, 1, 9), (4, 4, 1), (4, 4, 2), (4, 4, 3), (4, 4, 4), (4, 4, 5), (4, 4, 6), (4, 4, 7), (4, 4, 8), (4, 4, 9), (7, 5, 1), (7, 5, 2), (7, 5, 3), (7, 5, 4), (7, 5, 5), (7, 5, 6), (7, 5, 7), (7, 5, 8), (7, 5, 9), (8, 1, 1), (8, 1, 2), (8, 1, 3), (8, 1, 4), (8, 1, 5), (8, 1, 6), (8, 1, 7), (8, 1, 8), (8, 1, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (4, 4, 6), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #44
Puzzle step # 7
Exploration rate (epsilon): 0.33171018958091736
All available actions: [(4, 1, 1), (4, 1, 2), (4, 1, 3), (4, 1, 4), (4, 1, 5), (4, 1, 6), (4, 1, 7), (4, 1, 8), (4, 1, 9), (7, 5, 1), (7, 5, 2), (7, 5, 3), (7, 5, 4), (7, 5, 5), (7, 5, 6), (7, 5, 7), (7, 5, 8), (7, 5, 9), (8, 1, 1), (8, 1, 2), (8, 1, 3), (8, 1, 4), (8, 1, 5), (8, 1, 6), (8, 1, 7), (8, 1, 8), (8, 1, 9)]
State:
[[4 9 7 2 5 8 3 1 6]
 [1 8 6 4 3 9 7 2 5]
 [2 5 3 7 1 6 4 9 8]
 [6 2 9 3 8 1 5 4 7]
 [3 0 5 9 6 4 1 8 2]
 [8 4 1 5 7 2 6 3 9]
 [9 6 2 1 4 5 8 7 3]
 [7 1 8 6 2 0 9 5 4]
 [5 0 4 8 9 7 2 6 1]]
Valid actions: [(4, 1, 7), (7, 5, 3), (8, 1, 3)]
All available actions: [(4, 1, 1), (4, 1, 2), (4, 1, 3), (4, 1, 4), (4, 1, 5), (4, 1, 6), (4, 1, 7), (4, 1, 8), (4, 1, 9), (7, 5, 1), (7, 5, 2), (7, 5, 3), (7, 5, 4), (7, 5, 5), (7, 5, 6), (7, 5, 7), (7, 5, 8), (7, 5, 9), (8, 1, 1), (8, 1, 2), (8, 1, 3), (8, 1, 4), (8, 1, 5), (8, 1, 6), (8, 1, 7), (8, 1, 8), (8, 1, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (7, 5, 3), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #45
Puzzle step # 8
Exploration rate (epsilon): 0.31512466073036194
All available actions: [(4, 1, 1), (4, 1, 2), (4, 1, 3), (4, 1, 4), (4, 1, 5), (4, 1, 6), (4, 1, 7), (4, 1, 8), (4, 1, 9), (8, 1, 1), (8, 1, 2), (8, 1, 3), (8, 1, 4), (8, 1, 5), (8, 1, 6), (8, 1, 7), (8, 1, 8), (8, 1, 9)]
State:
[[4 9 7 2 5 8 3 1 6]
 [1 8 6 4 3 9 7 2 5]
 [2 5 3 7 1 6 4 9 8]
 [6 2 9 3 8 1 5 4 7]
 [3 0 5 9 6 4 1 8 2]
 [8 4 1 5 7 2 6 3 9]
 [9 6 2 1 4 5 8 7 3]
 [7 1 8 6 2 3 9 5 4]
 [5 0 4 8 9 7 2 6 1]]
Valid actions: [(4, 1, 7), (8, 1, 3)]
All available actions: [(4, 1, 1), (4, 1, 2), (4, 1, 3), (4, 1, 4), (4, 1, 5), (4, 1, 6), (4, 1, 7), (4, 1, 8), (4, 1, 9), (8, 1, 1), (8, 1, 2), (8, 1, 3), (8, 1, 4), (8, 1, 5), (8, 1, 6), (8, 1, 7), (8, 1, 8), (8, 1, 9)]
Running total step #46
Puzzle step # 9
Exploration rate (epsilon): 0.31512466073036194
All available actions: [(4, 1, 1), (4, 1, 2), (4, 1, 3), (4, 1, 4), (4, 1, 5), (4, 1, 6), (4, 1, 7), (4, 1, 8), (4, 1, 9), (8, 1, 1), (8, 1, 2), (8, 1, 3), (8, 1, 4), (8, 1, 5), (8, 1, 6), (8, 1, 7), (8, 1, 8), (8, 1, 9)]
State:
[[4 9 7 2 5 8 3 1 6]
 [1 8 6 4 3 9 7 2 5]
 [2 5 3 7 1 6 4 9 8]
 [6 2 9 3 8 1 5 4 7]
 [3 0 5 9 6 4 1 8 2]
 [8 4 1 5 7 2 6 3 9]
 [9 6 2 1 4 5 8 7 3]
 [7 1 8 6 2 3 9 5 4]
 [5 0 4 8 9 7 2 6 1]]
Valid actions: [(4, 1, 7), (8, 1, 3)]
All available actions: [(4, 1, 1), (4, 1, 2), (4, 1, 3), (4, 1, 4), (4, 1, 5), (4, 1, 6), (4, 1, 7), (4, 1, 8), (4, 1, 9), (8, 1, 1), (8, 1, 2), (8, 1, 3), (8, 1, 4), (8, 1, 5), (8, 1, 6), (8, 1, 7), (8, 1, 8), (8, 1, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (8, 1, 3), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #47
Puzzle step # 10
Exploration rate (epsilon): 0.31512466073036194
All available actions: [(4, 1, 1), (4, 1, 2), (4, 1, 3), (4, 1, 4), (4, 1, 5), (4, 1, 6), (4, 1, 7), (4, 1, 8), (4, 1, 9)]
State:
[[4 9 7 2 5 8 3 1 6]
 [1 8 6 4 3 9 7 2 5]
 [2 5 3 7 1 6 4 9 8]
 [6 2 9 3 8 1 5 4 7]
 [3 0 5 9 6 4 1 8 2]
 [8 4 1 5 7 2 6 3 9]
 [9 6 2 1 4 5 8 7 3]
 [7 1 8 6 2 3 9 5 4]
 [5 3 4 8 9 7 2 6 1]]
Valid actions: [(4, 1, 7)]
All available actions: [(4, 1, 1), (4, 1, 2), (4, 1, 3), (4, 1, 4), (4, 1, 5), (4, 1, 6), (4, 1, 7), (4, 1, 8), (4, 1, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Solved.
Step: Action: (4, 1, 7), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: True
Board: tf.Tensor(
[[4 6 5 9 1 2 3 7 0]
 [1 8 9 4 7 3 5 6 2]
 [0 2 7 5 6 8 0 4 9]
 [7 3 8 6 4 5 2 9 0]
 [9 5 4 8 2 1 6 3 7]
 [2 1 6 0 9 7 0 5 4]
 [5 7 0 2 8 4 9 1 6]
 [6 4 2 1 5 9 7 8 3]
 [8 0 1 7 3 6 4 2 5]], shape=(9, 9), dtype=int32)

Puzzle # 5
All available actions: [(0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (2, 0, 1), (2, 0, 2), (2, 0, 3), (2, 0, 4), (2, 0, 5), (2, 0, 6), (2, 0, 7), (2, 0, 8), (2, 0, 9), (2, 6, 1), (2, 6, 2), (2, 6, 3), (2, 6, 4), (2, 6, 5), (2, 6, 6), (2, 6, 7), (2, 6, 8), (2, 6, 9), (3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (5, 3, 1), (5, 3, 2), (5, 3, 3), (5, 3, 4), (5, 3, 5), (5, 3, 6), (5, 3, 7), (5, 3, 8), (5, 3, 9), (5, 6, 1), (5, 6, 2), (5, 6, 3), (5, 6, 4), (5, 6, 5), (5, 6, 6), (5, 6, 7), (5, 6, 8), (5, 6, 9), (6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9), (8, 1, 1), (8, 1, 2), (8, 1, 3), (8, 1, 4), (8, 1, 5), (8, 1, 6), (8, 1, 7), (8, 1, 8), (8, 1, 9)]
State:
[[4 6 5 9 1 2 3 7 0]
 [1 8 9 4 7 3 5 6 2]
 [0 2 7 5 6 8 0 4 9]
 [7 3 8 6 4 5 2 9 0]
 [9 5 4 8 2 1 6 3 7]
 [2 1 6 0 9 7 0 5 4]
 [5 7 0 2 8 4 9 1 6]
 [6 4 2 1 5 9 7 8 3]
 [8 0 1 7 3 6 4 2 5]]
Valid actions: [(0, 8, 8), (2, 0, 3), (2, 6, 1), (3, 8, 1), (5, 3, 3), (5, 6, 8), (6, 2, 3), (8, 1, 9)]
All available actions: [(0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (2, 0, 1), (2, 0, 2), (2, 0, 3), (2, 0, 4), (2, 0, 5), (2, 0, 6), (2, 0, 7), (2, 0, 8), (2, 0, 9), (2, 6, 1), (2, 6, 2), (2, 6, 3), (2, 6, 4), (2, 6, 5), (2, 6, 6), (2, 6, 7), (2, 6, 8), (2, 6, 9), (3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (5, 3, 1), (5, 3, 2), (5, 3, 3), (5, 3, 4), (5, 3, 5), (5, 3, 6), (5, 3, 7), (5, 3, 8), (5, 3, 9), (5, 6, 1), (5, 6, 2), (5, 6, 3), (5, 6, 4), (5, 6, 5), (5, 6, 6), (5, 6, 7), (5, 6, 8), (5, 6, 9), (6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9), (8, 1, 1), (8, 1, 2), (8, 1, 3), (8, 1, 4), (8, 1, 5), (8, 1, 6), (8, 1, 7), (8, 1, 8), (8, 1, 9)]
Running total step #48
Puzzle step # 0
Exploration rate (epsilon): 0.31512466073036194
All available actions: [(0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (2, 0, 1), (2, 0, 2), (2, 0, 3), (2, 0, 4), (2, 0, 5), (2, 0, 6), (2, 0, 7), (2, 0, 8), (2, 0, 9), (2, 6, 1), (2, 6, 2), (2, 6, 3), (2, 6, 4), (2, 6, 5), (2, 6, 6), (2, 6, 7), (2, 6, 8), (2, 6, 9), (3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (5, 3, 1), (5, 3, 2), (5, 3, 3), (5, 3, 4), (5, 3, 5), (5, 3, 6), (5, 3, 7), (5, 3, 8), (5, 3, 9), (5, 6, 1), (5, 6, 2), (5, 6, 3), (5, 6, 4), (5, 6, 5), (5, 6, 6), (5, 6, 7), (5, 6, 8), (5, 6, 9), (6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9), (8, 1, 1), (8, 1, 2), (8, 1, 3), (8, 1, 4), (8, 1, 5), (8, 1, 6), (8, 1, 7), (8, 1, 8), (8, 1, 9)]
State:
[[4 6 5 9 1 2 3 7 0]
 [1 8 9 4 7 3 5 6 2]
 [0 2 7 5 6 8 0 4 9]
 [7 3 8 6 4 5 2 9 0]
 [9 5 4 8 2 1 6 3 7]
 [2 1 6 0 9 7 0 5 4]
 [5 7 0 2 8 4 9 1 6]
 [6 4 2 1 5 9 7 8 3]
 [8 0 1 7 3 6 4 2 5]]
Valid actions: [(0, 8, 8), (2, 0, 3), (2, 6, 1), (3, 8, 1), (5, 3, 3), (5, 6, 8), (6, 2, 3), (8, 1, 9)]
All available actions: [(0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (2, 0, 1), (2, 0, 2), (2, 0, 3), (2, 0, 4), (2, 0, 5), (2, 0, 6), (2, 0, 7), (2, 0, 8), (2, 0, 9), (2, 6, 1), (2, 6, 2), (2, 6, 3), (2, 6, 4), (2, 6, 5), (2, 6, 6), (2, 6, 7), (2, 6, 8), (2, 6, 9), (3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (5, 3, 1), (5, 3, 2), (5, 3, 3), (5, 3, 4), (5, 3, 5), (5, 3, 6), (5, 3, 7), (5, 3, 8), (5, 3, 9), (5, 6, 1), (5, 6, 2), (5, 6, 3), (5, 6, 4), (5, 6, 5), (5, 6, 6), (5, 6, 7), (5, 6, 8), (5, 6, 9), (6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9), (8, 1, 1), (8, 1, 2), (8, 1, 3), (8, 1, 4), (8, 1, 5), (8, 1, 6), (8, 1, 7), (8, 1, 8), (8, 1, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (0, 8, 8), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #49
Puzzle step # 1
Exploration rate (epsilon): 0.31512466073036194
All available actions: [(2, 0, 1), (2, 0, 2), (2, 0, 3), (2, 0, 4), (2, 0, 5), (2, 0, 6), (2, 0, 7), (2, 0, 8), (2, 0, 9), (2, 6, 1), (2, 6, 2), (2, 6, 3), (2, 6, 4), (2, 6, 5), (2, 6, 6), (2, 6, 7), (2, 6, 8), (2, 6, 9), (3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (5, 3, 1), (5, 3, 2), (5, 3, 3), (5, 3, 4), (5, 3, 5), (5, 3, 6), (5, 3, 7), (5, 3, 8), (5, 3, 9), (5, 6, 1), (5, 6, 2), (5, 6, 3), (5, 6, 4), (5, 6, 5), (5, 6, 6), (5, 6, 7), (5, 6, 8), (5, 6, 9), (6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9), (8, 1, 1), (8, 1, 2), (8, 1, 3), (8, 1, 4), (8, 1, 5), (8, 1, 6), (8, 1, 7), (8, 1, 8), (8, 1, 9)]
State:
[[4 6 5 9 1 2 3 7 8]
 [1 8 9 4 7 3 5 6 2]
 [0 2 7 5 6 8 0 4 9]
 [7 3 8 6 4 5 2 9 0]
 [9 5 4 8 2 1 6 3 7]
 [2 1 6 0 9 7 0 5 4]
 [5 7 0 2 8 4 9 1 6]
 [6 4 2 1 5 9 7 8 3]
 [8 0 1 7 3 6 4 2 5]]
Valid actions: [(2, 0, 3), (2, 6, 1), (3, 8, 1), (5, 3, 3), (5, 6, 8), (6, 2, 3), (8, 1, 9)]
All available actions: [(2, 0, 1), (2, 0, 2), (2, 0, 3), (2, 0, 4), (2, 0, 5), (2, 0, 6), (2, 0, 7), (2, 0, 8), (2, 0, 9), (2, 6, 1), (2, 6, 2), (2, 6, 3), (2, 6, 4), (2, 6, 5), (2, 6, 6), (2, 6, 7), (2, 6, 8), (2, 6, 9), (3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (5, 3, 1), (5, 3, 2), (5, 3, 3), (5, 3, 4), (5, 3, 5), (5, 3, 6), (5, 3, 7), (5, 3, 8), (5, 3, 9), (5, 6, 1), (5, 6, 2), (5, 6, 3), (5, 6, 4), (5, 6, 5), (5, 6, 6), (5, 6, 7), (5, 6, 8), (5, 6, 9), (6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9), (8, 1, 1), (8, 1, 2), (8, 1, 3), (8, 1, 4), (8, 1, 5), (8, 1, 6), (8, 1, 7), (8, 1, 8), (8, 1, 9)]
Remembering experience:
        State: [[4 6 5 9 1 2 3 7 8]
 [1 8 9 4 7 3 5 6 2]
 [0 2 7 5 6 8 0 4 9]
 [7 3 8 6 4 5 2 9 0]
 [9 5 4 8 2 1 6 3 7]
 [2 1 6 0 9 7 0 5 4]
 [5 7 0 2 8 4 9 1 6]
 [6 4 2 1 5 9 7 8 3]
 [8 0 1 7 3 6 4 2 5]]
        Action: (3, 8, 4)
        Reward: -5.0
        Next state: [[4 6 5 9 1 2 3 7 8]
 [1 8 9 4 7 3 5 6 2]
 [0 2 7 5 6 8 0 4 9]
 [7 3 8 6 4 5 2 9 0]
 [9 5 4 8 2 1 6 3 7]
 [2 1 6 0 9 7 0 5 4]
 [5 7 0 2 8 4 9 1 6]
 [6 4 2 1 5 9 7 8 3]
 [8 0 1 7 3 6 4 2 5]]
        Done: False
        Memory size: 51
        
Running total step #50
Puzzle step # 2
Exploration rate (epsilon): 0.2993684411048889
All available actions: [(2, 0, 1), (2, 0, 2), (2, 0, 3), (2, 0, 4), (2, 0, 5), (2, 0, 6), (2, 0, 7), (2, 0, 8), (2, 0, 9), (2, 6, 1), (2, 6, 2), (2, 6, 3), (2, 6, 4), (2, 6, 5), (2, 6, 6), (2, 6, 7), (2, 6, 8), (2, 6, 9), (3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (5, 3, 1), (5, 3, 2), (5, 3, 3), (5, 3, 4), (5, 3, 5), (5, 3, 6), (5, 3, 7), (5, 3, 8), (5, 3, 9), (5, 6, 1), (5, 6, 2), (5, 6, 3), (5, 6, 4), (5, 6, 5), (5, 6, 6), (5, 6, 7), (5, 6, 8), (5, 6, 9), (6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9), (8, 1, 1), (8, 1, 2), (8, 1, 3), (8, 1, 4), (8, 1, 5), (8, 1, 6), (8, 1, 7), (8, 1, 8), (8, 1, 9)]
State:
[[4 6 5 9 1 2 3 7 8]
 [1 8 9 4 7 3 5 6 2]
 [0 2 7 5 6 8 0 4 9]
 [7 3 8 6 4 5 2 9 0]
 [9 5 4 8 2 1 6 3 7]
 [2 1 6 0 9 7 0 5 4]
 [5 7 0 2 8 4 9 1 6]
 [6 4 2 1 5 9 7 8 3]
 [8 0 1 7 3 6 4 2 5]]
Valid actions: [(2, 0, 3), (2, 6, 1), (3, 8, 1), (5, 3, 3), (5, 6, 8), (6, 2, 3), (8, 1, 9)]
All available actions: [(2, 0, 1), (2, 0, 2), (2, 0, 3), (2, 0, 4), (2, 0, 5), (2, 0, 6), (2, 0, 7), (2, 0, 8), (2, 0, 9), (2, 6, 1), (2, 6, 2), (2, 6, 3), (2, 6, 4), (2, 6, 5), (2, 6, 6), (2, 6, 7), (2, 6, 8), (2, 6, 9), (3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (5, 3, 1), (5, 3, 2), (5, 3, 3), (5, 3, 4), (5, 3, 5), (5, 3, 6), (5, 3, 7), (5, 3, 8), (5, 3, 9), (5, 6, 1), (5, 6, 2), (5, 6, 3), (5, 6, 4), (5, 6, 5), (5, 6, 6), (5, 6, 7), (5, 6, 8), (5, 6, 9), (6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9), (8, 1, 1), (8, 1, 2), (8, 1, 3), (8, 1, 4), (8, 1, 5), (8, 1, 6), (8, 1, 7), (8, 1, 8), (8, 1, 9)]
Choosing to exploit
Valid move determined.
Step: Action: (5, 6, 8), Reward: tf.Tensor(10.0, shape=(), dtype=float32), Done: False
Running total step #51
Puzzle step # 3
Exploration rate (epsilon): 0.2993684411048889
All available actions: [(2, 0, 1), (2, 0, 2), (2, 0, 3), (2, 0, 4), (2, 0, 5), (2, 0, 6), (2, 0, 7), (2, 0, 8), (2, 0, 9), (2, 6, 1), (2, 6, 2), (2, 6, 3), (2, 6, 4), (2, 6, 5), (2, 6, 6), (2, 6, 7), (2, 6, 8), (2, 6, 9), (3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (5, 3, 1), (5, 3, 2), (5, 3, 3), (5, 3, 4), (5, 3, 5), (5, 3, 6), (5, 3, 7), (5, 3, 8), (5, 3, 9), (6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9), (8, 1, 1), (8, 1, 2), (8, 1, 3), (8, 1, 4), (8, 1, 5), (8, 1, 6), (8, 1, 7), (8, 1, 8), (8, 1, 9)]
State:
[[4 6 5 9 1 2 3 7 8]
 [1 8 9 4 7 3 5 6 2]
 [0 2 7 5 6 8 0 4 9]
 [7 3 8 6 4 5 2 9 0]
 [9 5 4 8 2 1 6 3 7]
 [2 1 6 0 9 7 8 5 4]
 [5 7 0 2 8 4 9 1 6]
 [6 4 2 1 5 9 7 8 3]
 [8 0 1 7 3 6 4 2 5]]
Valid actions: [(2, 0, 3), (2, 6, 1), (3, 8, 1), (5, 3, 3), (6, 2, 3), (8, 1, 9)]
All available actions: [(2, 0, 1), (2, 0, 2), (2, 0, 3), (2, 0, 4), (2, 0, 5), (2, 0, 6), (2, 0, 7), (2, 0, 8), (2, 0, 9), (2, 6, 1), (2, 6, 2), (2, 6, 3), (2, 6, 4), (2, 6, 5), (2, 6, 6), (2, 6, 7), (2, 6, 8), (2, 6, 9), (3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (5, 3, 1), (5, 3, 2), (5, 3, 3), (5, 3, 4), (5, 3, 5), (5, 3, 6), (5, 3, 7), (5, 3, 8), (5, 3, 9), (6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9), (8, 1, 1), (8, 1, 2), (8, 1, 3), (8, 1, 4), (8, 1, 5), (8, 1, 6), (8, 1, 7), (8, 1, 8), (8, 1, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (8, 1, 9), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #52
Puzzle step # 4
Exploration rate (epsilon): 0.2993684411048889
All available actions: [(2, 0, 1), (2, 0, 2), (2, 0, 3), (2, 0, 4), (2, 0, 5), (2, 0, 6), (2, 0, 7), (2, 0, 8), (2, 0, 9), (2, 6, 1), (2, 6, 2), (2, 6, 3), (2, 6, 4), (2, 6, 5), (2, 6, 6), (2, 6, 7), (2, 6, 8), (2, 6, 9), (3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (5, 3, 1), (5, 3, 2), (5, 3, 3), (5, 3, 4), (5, 3, 5), (5, 3, 6), (5, 3, 7), (5, 3, 8), (5, 3, 9), (6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9)]
State:
[[4 6 5 9 1 2 3 7 8]
 [1 8 9 4 7 3 5 6 2]
 [0 2 7 5 6 8 0 4 9]
 [7 3 8 6 4 5 2 9 0]
 [9 5 4 8 2 1 6 3 7]
 [2 1 6 0 9 7 8 5 4]
 [5 7 0 2 8 4 9 1 6]
 [6 4 2 1 5 9 7 8 3]
 [8 9 1 7 3 6 4 2 5]]
Valid actions: [(2, 0, 3), (2, 6, 1), (3, 8, 1), (5, 3, 3), (6, 2, 3)]
All available actions: [(2, 0, 1), (2, 0, 2), (2, 0, 3), (2, 0, 4), (2, 0, 5), (2, 0, 6), (2, 0, 7), (2, 0, 8), (2, 0, 9), (2, 6, 1), (2, 6, 2), (2, 6, 3), (2, 6, 4), (2, 6, 5), (2, 6, 6), (2, 6, 7), (2, 6, 8), (2, 6, 9), (3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (5, 3, 1), (5, 3, 2), (5, 3, 3), (5, 3, 4), (5, 3, 5), (5, 3, 6), (5, 3, 7), (5, 3, 8), (5, 3, 9), (6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (5, 3, 3), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #53
Puzzle step # 5
Exploration rate (epsilon): 0.2993684411048889
All available actions: [(2, 0, 1), (2, 0, 2), (2, 0, 3), (2, 0, 4), (2, 0, 5), (2, 0, 6), (2, 0, 7), (2, 0, 8), (2, 0, 9), (2, 6, 1), (2, 6, 2), (2, 6, 3), (2, 6, 4), (2, 6, 5), (2, 6, 6), (2, 6, 7), (2, 6, 8), (2, 6, 9), (3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9)]
State:
[[4 6 5 9 1 2 3 7 8]
 [1 8 9 4 7 3 5 6 2]
 [0 2 7 5 6 8 0 4 9]
 [7 3 8 6 4 5 2 9 0]
 [9 5 4 8 2 1 6 3 7]
 [2 1 6 3 9 7 8 5 4]
 [5 7 0 2 8 4 9 1 6]
 [6 4 2 1 5 9 7 8 3]
 [8 9 1 7 3 6 4 2 5]]
Valid actions: [(2, 0, 3), (2, 6, 1), (3, 8, 1), (6, 2, 3)]
All available actions: [(2, 0, 1), (2, 0, 2), (2, 0, 3), (2, 0, 4), (2, 0, 5), (2, 0, 6), (2, 0, 7), (2, 0, 8), (2, 0, 9), (2, 6, 1), (2, 6, 2), (2, 6, 3), (2, 6, 4), (2, 6, 5), (2, 6, 6), (2, 6, 7), (2, 6, 8), (2, 6, 9), (3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (2, 0, 3), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #54
Puzzle step # 6
Exploration rate (epsilon): 0.2993684411048889
All available actions: [(2, 6, 1), (2, 6, 2), (2, 6, 3), (2, 6, 4), (2, 6, 5), (2, 6, 6), (2, 6, 7), (2, 6, 8), (2, 6, 9), (3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9)]
State:
[[4 6 5 9 1 2 3 7 8]
 [1 8 9 4 7 3 5 6 2]
 [3 2 7 5 6 8 0 4 9]
 [7 3 8 6 4 5 2 9 0]
 [9 5 4 8 2 1 6 3 7]
 [2 1 6 3 9 7 8 5 4]
 [5 7 0 2 8 4 9 1 6]
 [6 4 2 1 5 9 7 8 3]
 [8 9 1 7 3 6 4 2 5]]
Valid actions: [(2, 6, 1), (3, 8, 1), (6, 2, 3)]
All available actions: [(2, 6, 1), (2, 6, 2), (2, 6, 3), (2, 6, 4), (2, 6, 5), (2, 6, 6), (2, 6, 7), (2, 6, 8), (2, 6, 9), (3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (6, 2, 3), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #55
Puzzle step # 7
Exploration rate (epsilon): 0.28440001606941223
All available actions: [(2, 6, 1), (2, 6, 2), (2, 6, 3), (2, 6, 4), (2, 6, 5), (2, 6, 6), (2, 6, 7), (2, 6, 8), (2, 6, 9), (3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9)]
State:
[[4 6 5 9 1 2 3 7 8]
 [1 8 9 4 7 3 5 6 2]
 [3 2 7 5 6 8 0 4 9]
 [7 3 8 6 4 5 2 9 0]
 [9 5 4 8 2 1 6 3 7]
 [2 1 6 3 9 7 8 5 4]
 [5 7 3 2 8 4 9 1 6]
 [6 4 2 1 5 9 7 8 3]
 [8 9 1 7 3 6 4 2 5]]
Valid actions: [(2, 6, 1), (3, 8, 1)]
All available actions: [(2, 6, 1), (2, 6, 2), (2, 6, 3), (2, 6, 4), (2, 6, 5), (2, 6, 6), (2, 6, 7), (2, 6, 8), (2, 6, 9), (3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (2, 6, 1), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #56
Puzzle step # 8
Exploration rate (epsilon): 0.28440001606941223
All available actions: [(3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9)]
State:
[[4 6 5 9 1 2 3 7 8]
 [1 8 9 4 7 3 5 6 2]
 [3 2 7 5 6 8 1 4 9]
 [7 3 8 6 4 5 2 9 0]
 [9 5 4 8 2 1 6 3 7]
 [2 1 6 3 9 7 8 5 4]
 [5 7 3 2 8 4 9 1 6]
 [6 4 2 1 5 9 7 8 3]
 [8 9 1 7 3 6 4 2 5]]
Valid actions: [(3, 8, 1)]
All available actions: [(3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Solved.
Step: Action: (3, 8, 1), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: True
Board: tf.Tensor(
[[1 9 4 6 8 5 2 3 7]
 [3 8 2 9 7 4 5 1 6]
 [6 5 7 2 1 3 4 8 9]
 [8 2 3 4 9 0 6 0 5]
 [0 4 1 7 6 0 9 2 3]
 [7 6 9 3 5 2 8 4 1]
 [2 1 5 8 0 0 7 6 4]
 [4 0 6 5 2 7 1 9 8]
 [9 7 8 1 4 6 3 0 2]], shape=(9, 9), dtype=int32)

Puzzle # 6
All available actions: [(3, 5, 1), (3, 5, 2), (3, 5, 3), (3, 5, 4), (3, 5, 5), (3, 5, 6), (3, 5, 7), (3, 5, 8), (3, 5, 9), (3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9), (4, 5, 1), (4, 5, 2), (4, 5, 3), (4, 5, 4), (4, 5, 5), (4, 5, 6), (4, 5, 7), (4, 5, 8), (4, 5, 9), (6, 4, 1), (6, 4, 2), (6, 4, 3), (6, 4, 4), (6, 4, 5), (6, 4, 6), (6, 4, 7), (6, 4, 8), (6, 4, 9), (6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9), (8, 7, 1), (8, 7, 2), (8, 7, 3), (8, 7, 4), (8, 7, 5), (8, 7, 6), (8, 7, 7), (8, 7, 8), (8, 7, 9)]
State:
[[1 9 4 6 8 5 2 3 7]
 [3 8 2 9 7 4 5 1 6]
 [6 5 7 2 1 3 4 8 9]
 [8 2 3 4 9 0 6 0 5]
 [0 4 1 7 6 0 9 2 3]
 [7 6 9 3 5 2 8 4 1]
 [2 1 5 8 0 0 7 6 4]
 [4 0 6 5 2 7 1 9 8]
 [9 7 8 1 4 6 3 0 2]]
Valid actions: [(3, 5, 1), (3, 7, 7), (4, 0, 5), (4, 5, 8), (6, 4, 3), (6, 5, 9), (7, 1, 3), (8, 7, 5)]
All available actions: [(3, 5, 1), (3, 5, 2), (3, 5, 3), (3, 5, 4), (3, 5, 5), (3, 5, 6), (3, 5, 7), (3, 5, 8), (3, 5, 9), (3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9), (4, 5, 1), (4, 5, 2), (4, 5, 3), (4, 5, 4), (4, 5, 5), (4, 5, 6), (4, 5, 7), (4, 5, 8), (4, 5, 9), (6, 4, 1), (6, 4, 2), (6, 4, 3), (6, 4, 4), (6, 4, 5), (6, 4, 6), (6, 4, 7), (6, 4, 8), (6, 4, 9), (6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9), (8, 7, 1), (8, 7, 2), (8, 7, 3), (8, 7, 4), (8, 7, 5), (8, 7, 6), (8, 7, 7), (8, 7, 8), (8, 7, 9)]
Choosing to exploit
Valid move determined.
Step: Action: (4, 5, 8), Reward: tf.Tensor(10.0, shape=(), dtype=float32), Done: False
Running total step #57
Puzzle step # 0
Exploration rate (epsilon): 0.28440001606941223
All available actions: [(3, 5, 1), (3, 5, 2), (3, 5, 3), (3, 5, 4), (3, 5, 5), (3, 5, 6), (3, 5, 7), (3, 5, 8), (3, 5, 9), (3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9), (6, 4, 1), (6, 4, 2), (6, 4, 3), (6, 4, 4), (6, 4, 5), (6, 4, 6), (6, 4, 7), (6, 4, 8), (6, 4, 9), (6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9), (8, 7, 1), (8, 7, 2), (8, 7, 3), (8, 7, 4), (8, 7, 5), (8, 7, 6), (8, 7, 7), (8, 7, 8), (8, 7, 9)]
State:
[[1 9 4 6 8 5 2 3 7]
 [3 8 2 9 7 4 5 1 6]
 [6 5 7 2 1 3 4 8 9]
 [8 2 3 4 9 0 6 0 5]
 [0 4 1 7 6 8 9 2 3]
 [7 6 9 3 5 2 8 4 1]
 [2 1 5 8 0 0 7 6 4]
 [4 0 6 5 2 7 1 9 8]
 [9 7 8 1 4 6 3 0 2]]
Valid actions: [(3, 5, 1), (3, 7, 7), (4, 0, 5), (6, 4, 3), (6, 5, 9), (7, 1, 3), (8, 7, 5)]
All available actions: [(3, 5, 1), (3, 5, 2), (3, 5, 3), (3, 5, 4), (3, 5, 5), (3, 5, 6), (3, 5, 7), (3, 5, 8), (3, 5, 9), (3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9), (6, 4, 1), (6, 4, 2), (6, 4, 3), (6, 4, 4), (6, 4, 5), (6, 4, 6), (6, 4, 7), (6, 4, 8), (6, 4, 9), (6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9), (8, 7, 1), (8, 7, 2), (8, 7, 3), (8, 7, 4), (8, 7, 5), (8, 7, 6), (8, 7, 7), (8, 7, 8), (8, 7, 9)]
Choosing to exploit
Valid move determined.
Step: Action: (6, 5, 9), Reward: tf.Tensor(10.0, shape=(), dtype=float32), Done: False
Running total step #58
Puzzle step # 1
Exploration rate (epsilon): 0.28440001606941223
All available actions: [(3, 5, 1), (3, 5, 2), (3, 5, 3), (3, 5, 4), (3, 5, 5), (3, 5, 6), (3, 5, 7), (3, 5, 8), (3, 5, 9), (3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9), (6, 4, 1), (6, 4, 2), (6, 4, 3), (6, 4, 4), (6, 4, 5), (6, 4, 6), (6, 4, 7), (6, 4, 8), (6, 4, 9), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9), (8, 7, 1), (8, 7, 2), (8, 7, 3), (8, 7, 4), (8, 7, 5), (8, 7, 6), (8, 7, 7), (8, 7, 8), (8, 7, 9)]
State:
[[1 9 4 6 8 5 2 3 7]
 [3 8 2 9 7 4 5 1 6]
 [6 5 7 2 1 3 4 8 9]
 [8 2 3 4 9 0 6 0 5]
 [0 4 1 7 6 8 9 2 3]
 [7 6 9 3 5 2 8 4 1]
 [2 1 5 8 0 9 7 6 4]
 [4 0 6 5 2 7 1 9 8]
 [9 7 8 1 4 6 3 0 2]]
Valid actions: [(3, 5, 1), (3, 7, 7), (4, 0, 5), (6, 4, 3), (7, 1, 3), (8, 7, 5)]
All available actions: [(3, 5, 1), (3, 5, 2), (3, 5, 3), (3, 5, 4), (3, 5, 5), (3, 5, 6), (3, 5, 7), (3, 5, 8), (3, 5, 9), (3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9), (6, 4, 1), (6, 4, 2), (6, 4, 3), (6, 4, 4), (6, 4, 5), (6, 4, 6), (6, 4, 7), (6, 4, 8), (6, 4, 9), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9), (8, 7, 1), (8, 7, 2), (8, 7, 3), (8, 7, 4), (8, 7, 5), (8, 7, 6), (8, 7, 7), (8, 7, 8), (8, 7, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (4, 0, 5), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #59
Puzzle step # 2
Exploration rate (epsilon): 0.28440001606941223
All available actions: [(3, 5, 1), (3, 5, 2), (3, 5, 3), (3, 5, 4), (3, 5, 5), (3, 5, 6), (3, 5, 7), (3, 5, 8), (3, 5, 9), (3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9), (6, 4, 1), (6, 4, 2), (6, 4, 3), (6, 4, 4), (6, 4, 5), (6, 4, 6), (6, 4, 7), (6, 4, 8), (6, 4, 9), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9), (8, 7, 1), (8, 7, 2), (8, 7, 3), (8, 7, 4), (8, 7, 5), (8, 7, 6), (8, 7, 7), (8, 7, 8), (8, 7, 9)]
State:
[[1 9 4 6 8 5 2 3 7]
 [3 8 2 9 7 4 5 1 6]
 [6 5 7 2 1 3 4 8 9]
 [8 2 3 4 9 0 6 0 5]
 [5 4 1 7 6 8 9 2 3]
 [7 6 9 3 5 2 8 4 1]
 [2 1 5 8 0 9 7 6 4]
 [4 0 6 5 2 7 1 9 8]
 [9 7 8 1 4 6 3 0 2]]
Valid actions: [(3, 5, 1), (3, 7, 7), (6, 4, 3), (7, 1, 3), (8, 7, 5)]
All available actions: [(3, 5, 1), (3, 5, 2), (3, 5, 3), (3, 5, 4), (3, 5, 5), (3, 5, 6), (3, 5, 7), (3, 5, 8), (3, 5, 9), (3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9), (6, 4, 1), (6, 4, 2), (6, 4, 3), (6, 4, 4), (6, 4, 5), (6, 4, 6), (6, 4, 7), (6, 4, 8), (6, 4, 9), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9), (8, 7, 1), (8, 7, 2), (8, 7, 3), (8, 7, 4), (8, 7, 5), (8, 7, 6), (8, 7, 7), (8, 7, 8), (8, 7, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (8, 7, 5), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #60
Puzzle step # 3
Exploration rate (epsilon): 0.27018001675605774
All available actions: [(3, 5, 1), (3, 5, 2), (3, 5, 3), (3, 5, 4), (3, 5, 5), (3, 5, 6), (3, 5, 7), (3, 5, 8), (3, 5, 9), (3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9), (6, 4, 1), (6, 4, 2), (6, 4, 3), (6, 4, 4), (6, 4, 5), (6, 4, 6), (6, 4, 7), (6, 4, 8), (6, 4, 9), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9)]
State:
[[1 9 4 6 8 5 2 3 7]
 [3 8 2 9 7 4 5 1 6]
 [6 5 7 2 1 3 4 8 9]
 [8 2 3 4 9 0 6 0 5]
 [5 4 1 7 6 8 9 2 3]
 [7 6 9 3 5 2 8 4 1]
 [2 1 5 8 0 9 7 6 4]
 [4 0 6 5 2 7 1 9 8]
 [9 7 8 1 4 6 3 5 2]]
Valid actions: [(3, 5, 1), (3, 7, 7), (6, 4, 3), (7, 1, 3)]
All available actions: [(3, 5, 1), (3, 5, 2), (3, 5, 3), (3, 5, 4), (3, 5, 5), (3, 5, 6), (3, 5, 7), (3, 5, 8), (3, 5, 9), (3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9), (6, 4, 1), (6, 4, 2), (6, 4, 3), (6, 4, 4), (6, 4, 5), (6, 4, 6), (6, 4, 7), (6, 4, 8), (6, 4, 9), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (6, 4, 3), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #61
Puzzle step # 4
Exploration rate (epsilon): 0.27018001675605774
All available actions: [(3, 5, 1), (3, 5, 2), (3, 5, 3), (3, 5, 4), (3, 5, 5), (3, 5, 6), (3, 5, 7), (3, 5, 8), (3, 5, 9), (3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9)]
State:
[[1 9 4 6 8 5 2 3 7]
 [3 8 2 9 7 4 5 1 6]
 [6 5 7 2 1 3 4 8 9]
 [8 2 3 4 9 0 6 0 5]
 [5 4 1 7 6 8 9 2 3]
 [7 6 9 3 5 2 8 4 1]
 [2 1 5 8 3 9 7 6 4]
 [4 0 6 5 2 7 1 9 8]
 [9 7 8 1 4 6 3 5 2]]
Valid actions: [(3, 5, 1), (3, 7, 7), (7, 1, 3)]
All available actions: [(3, 5, 1), (3, 5, 2), (3, 5, 3), (3, 5, 4), (3, 5, 5), (3, 5, 6), (3, 5, 7), (3, 5, 8), (3, 5, 9), (3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (7, 1, 3), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #62
Puzzle step # 5
Exploration rate (epsilon): 0.27018001675605774
All available actions: [(3, 5, 1), (3, 5, 2), (3, 5, 3), (3, 5, 4), (3, 5, 5), (3, 5, 6), (3, 5, 7), (3, 5, 8), (3, 5, 9), (3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9)]
State:
[[1 9 4 6 8 5 2 3 7]
 [3 8 2 9 7 4 5 1 6]
 [6 5 7 2 1 3 4 8 9]
 [8 2 3 4 9 0 6 0 5]
 [5 4 1 7 6 8 9 2 3]
 [7 6 9 3 5 2 8 4 1]
 [2 1 5 8 3 9 7 6 4]
 [4 3 6 5 2 7 1 9 8]
 [9 7 8 1 4 6 3 5 2]]
Valid actions: [(3, 5, 1), (3, 7, 7)]
All available actions: [(3, 5, 1), (3, 5, 2), (3, 5, 3), (3, 5, 4), (3, 5, 5), (3, 5, 6), (3, 5, 7), (3, 5, 8), (3, 5, 9), (3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9)]
Running total step #63
Puzzle step # 6
Exploration rate (epsilon): 0.27018001675605774
All available actions: [(3, 5, 1), (3, 5, 2), (3, 5, 3), (3, 5, 4), (3, 5, 5), (3, 5, 6), (3, 5, 7), (3, 5, 8), (3, 5, 9), (3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9)]
State:
[[1 9 4 6 8 5 2 3 7]
 [3 8 2 9 7 4 5 1 6]
 [6 5 7 2 1 3 4 8 9]
 [8 2 3 4 9 0 6 0 5]
 [5 4 1 7 6 8 9 2 3]
 [7 6 9 3 5 2 8 4 1]
 [2 1 5 8 3 9 7 6 4]
 [4 3 6 5 2 7 1 9 8]
 [9 7 8 1 4 6 3 5 2]]
Valid actions: [(3, 5, 1), (3, 7, 7)]
All available actions: [(3, 5, 1), (3, 5, 2), (3, 5, 3), (3, 5, 4), (3, 5, 5), (3, 5, 6), (3, 5, 7), (3, 5, 8), (3, 5, 9), (3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (3, 5, 1), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #64
Puzzle step # 7
Exploration rate (epsilon): 0.27018001675605774
All available actions: [(3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9)]
State:
[[1 9 4 6 8 5 2 3 7]
 [3 8 2 9 7 4 5 1 6]
 [6 5 7 2 1 3 4 8 9]
 [8 2 3 4 9 1 6 0 5]
 [5 4 1 7 6 8 9 2 3]
 [7 6 9 3 5 2 8 4 1]
 [2 1 5 8 3 9 7 6 4]
 [4 3 6 5 2 7 1 9 8]
 [9 7 8 1 4 6 3 5 2]]
Valid actions: [(3, 7, 7)]
All available actions: [(3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Solved.
Step: Action: (3, 7, 7), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: True
Board: tf.Tensor(
[[2 8 9 0 6 5 4 3 1]
 [3 1 7 9 2 4 8 5 6]
 [6 4 5 1 3 8 7 2 9]
 [7 6 3 0 9 1 5 4 2]
 [0 2 1 4 7 0 9 6 8]
 [8 9 4 6 5 2 1 7 0]
 [4 3 2 5 1 0 6 8 7]
 [0 5 6 3 8 0 2 1 4]
 [1 7 8 2 4 6 3 9 5]], shape=(9, 9), dtype=int32)

Puzzle # 7
All available actions: [(0, 3, 1), (0, 3, 2), (0, 3, 3), (0, 3, 4), (0, 3, 5), (0, 3, 6), (0, 3, 7), (0, 3, 8), (0, 3, 9), (3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9), (4, 5, 1), (4, 5, 2), (4, 5, 3), (4, 5, 4), (4, 5, 5), (4, 5, 6), (4, 5, 7), (4, 5, 8), (4, 5, 9), (5, 8, 1), (5, 8, 2), (5, 8, 3), (5, 8, 4), (5, 8, 5), (5, 8, 6), (5, 8, 7), (5, 8, 8), (5, 8, 9), (6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 0, 8), (7, 0, 9), (7, 5, 1), (7, 5, 2), (7, 5, 3), (7, 5, 4), (7, 5, 5), (7, 5, 6), (7, 5, 7), (7, 5, 8), (7, 5, 9)]
State:
[[2 8 9 0 6 5 4 3 1]
 [3 1 7 9 2 4 8 5 6]
 [6 4 5 1 3 8 7 2 9]
 [7 6 3 0 9 1 5 4 2]
 [0 2 1 4 7 0 9 6 8]
 [8 9 4 6 5 2 1 7 0]
 [4 3 2 5 1 0 6 8 7]
 [0 5 6 3 8 0 2 1 4]
 [1 7 8 2 4 6 3 9 5]]
Valid actions: [(0, 3, 7), (3, 3, 8), (4, 0, 5), (4, 5, 3), (5, 8, 3), (6, 5, 9), (7, 0, 9), (7, 5, 7), (7, 5, 9)]
All available actions: [(0, 3, 1), (0, 3, 2), (0, 3, 3), (0, 3, 4), (0, 3, 5), (0, 3, 6), (0, 3, 7), (0, 3, 8), (0, 3, 9), (3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9), (4, 5, 1), (4, 5, 2), (4, 5, 3), (4, 5, 4), (4, 5, 5), (4, 5, 6), (4, 5, 7), (4, 5, 8), (4, 5, 9), (5, 8, 1), (5, 8, 2), (5, 8, 3), (5, 8, 4), (5, 8, 5), (5, 8, 6), (5, 8, 7), (5, 8, 8), (5, 8, 9), (6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 0, 8), (7, 0, 9), (7, 5, 1), (7, 5, 2), (7, 5, 3), (7, 5, 4), (7, 5, 5), (7, 5, 6), (7, 5, 7), (7, 5, 8), (7, 5, 9)]
Choosing to exploit
Valid move determined.
Step: Action: (7, 5, 9), Reward: tf.Tensor(10.0, shape=(), dtype=float32), Done: False
Running total step #65
Puzzle step # 0
Exploration rate (epsilon): 0.2566710114479065
All available actions: [(0, 3, 1), (0, 3, 2), (0, 3, 3), (0, 3, 4), (0, 3, 5), (0, 3, 6), (0, 3, 7), (0, 3, 8), (0, 3, 9), (3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9), (4, 5, 1), (4, 5, 2), (4, 5, 3), (4, 5, 4), (4, 5, 5), (4, 5, 6), (4, 5, 7), (4, 5, 8), (4, 5, 9), (5, 8, 1), (5, 8, 2), (5, 8, 3), (5, 8, 4), (5, 8, 5), (5, 8, 6), (5, 8, 7), (5, 8, 8), (5, 8, 9), (6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 0, 8), (7, 0, 9)]
State:
[[2 8 9 0 6 5 4 3 1]
 [3 1 7 9 2 4 8 5 6]
 [6 4 5 1 3 8 7 2 9]
 [7 6 3 0 9 1 5 4 2]
 [0 2 1 4 7 0 9 6 8]
 [8 9 4 6 5 2 1 7 0]
 [4 3 2 5 1 0 6 8 7]
 [0 5 6 3 8 9 2 1 4]
 [1 7 8 2 4 6 3 9 5]]
Valid actions: [(0, 3, 7), (3, 3, 8), (4, 0, 5), (4, 5, 3), (5, 8, 3)]
All available actions: [(0, 3, 1), (0, 3, 2), (0, 3, 3), (0, 3, 4), (0, 3, 5), (0, 3, 6), (0, 3, 7), (0, 3, 8), (0, 3, 9), (3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9), (4, 5, 1), (4, 5, 2), (4, 5, 3), (4, 5, 4), (4, 5, 5), (4, 5, 6), (4, 5, 7), (4, 5, 8), (4, 5, 9), (5, 8, 1), (5, 8, 2), (5, 8, 3), (5, 8, 4), (5, 8, 5), (5, 8, 6), (5, 8, 7), (5, 8, 8), (5, 8, 9), (6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 0, 8), (7, 0, 9)]
Running total step #66
Puzzle step # 1
Exploration rate (epsilon): 0.2566710114479065
All available actions: [(0, 3, 1), (0, 3, 2), (0, 3, 3), (0, 3, 4), (0, 3, 5), (0, 3, 6), (0, 3, 7), (0, 3, 8), (0, 3, 9), (3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9), (4, 5, 1), (4, 5, 2), (4, 5, 3), (4, 5, 4), (4, 5, 5), (4, 5, 6), (4, 5, 7), (4, 5, 8), (4, 5, 9), (5, 8, 1), (5, 8, 2), (5, 8, 3), (5, 8, 4), (5, 8, 5), (5, 8, 6), (5, 8, 7), (5, 8, 8), (5, 8, 9), (6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 0, 8), (7, 0, 9)]
State:
[[2 8 9 0 6 5 4 3 1]
 [3 1 7 9 2 4 8 5 6]
 [6 4 5 1 3 8 7 2 9]
 [7 6 3 0 9 1 5 4 2]
 [0 2 1 4 7 0 9 6 8]
 [8 9 4 6 5 2 1 7 0]
 [4 3 2 5 1 0 6 8 7]
 [0 5 6 3 8 9 2 1 4]
 [1 7 8 2 4 6 3 9 5]]
Valid actions: [(0, 3, 7), (3, 3, 8), (4, 0, 5), (4, 5, 3), (5, 8, 3)]
All available actions: [(0, 3, 1), (0, 3, 2), (0, 3, 3), (0, 3, 4), (0, 3, 5), (0, 3, 6), (0, 3, 7), (0, 3, 8), (0, 3, 9), (3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9), (4, 5, 1), (4, 5, 2), (4, 5, 3), (4, 5, 4), (4, 5, 5), (4, 5, 6), (4, 5, 7), (4, 5, 8), (4, 5, 9), (5, 8, 1), (5, 8, 2), (5, 8, 3), (5, 8, 4), (5, 8, 5), (5, 8, 6), (5, 8, 7), (5, 8, 8), (5, 8, 9), (6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 0, 8), (7, 0, 9)]
Running total step #67
Puzzle step # 2
Exploration rate (epsilon): 0.2566710114479065
All available actions: [(0, 3, 1), (0, 3, 2), (0, 3, 3), (0, 3, 4), (0, 3, 5), (0, 3, 6), (0, 3, 7), (0, 3, 8), (0, 3, 9), (3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9), (4, 5, 1), (4, 5, 2), (4, 5, 3), (4, 5, 4), (4, 5, 5), (4, 5, 6), (4, 5, 7), (4, 5, 8), (4, 5, 9), (5, 8, 1), (5, 8, 2), (5, 8, 3), (5, 8, 4), (5, 8, 5), (5, 8, 6), (5, 8, 7), (5, 8, 8), (5, 8, 9), (6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 0, 8), (7, 0, 9)]
State:
[[2 8 9 0 6 5 4 3 1]
 [3 1 7 9 2 4 8 5 6]
 [6 4 5 1 3 8 7 2 9]
 [7 6 3 0 9 1 5 4 2]
 [0 2 1 4 7 0 9 6 8]
 [8 9 4 6 5 2 1 7 0]
 [4 3 2 5 1 0 6 8 7]
 [0 5 6 3 8 9 2 1 4]
 [1 7 8 2 4 6 3 9 5]]
Valid actions: [(0, 3, 7), (3, 3, 8), (4, 0, 5), (4, 5, 3), (5, 8, 3)]
All available actions: [(0, 3, 1), (0, 3, 2), (0, 3, 3), (0, 3, 4), (0, 3, 5), (0, 3, 6), (0, 3, 7), (0, 3, 8), (0, 3, 9), (3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9), (4, 5, 1), (4, 5, 2), (4, 5, 3), (4, 5, 4), (4, 5, 5), (4, 5, 6), (4, 5, 7), (4, 5, 8), (4, 5, 9), (5, 8, 1), (5, 8, 2), (5, 8, 3), (5, 8, 4), (5, 8, 5), (5, 8, 6), (5, 8, 7), (5, 8, 8), (5, 8, 9), (6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 0, 8), (7, 0, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (5, 8, 3), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #68
Puzzle step # 3
Exploration rate (epsilon): 0.2566710114479065
All available actions: [(0, 3, 1), (0, 3, 2), (0, 3, 3), (0, 3, 4), (0, 3, 5), (0, 3, 6), (0, 3, 7), (0, 3, 8), (0, 3, 9), (3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9), (4, 5, 1), (4, 5, 2), (4, 5, 3), (4, 5, 4), (4, 5, 5), (4, 5, 6), (4, 5, 7), (4, 5, 8), (4, 5, 9), (6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 0, 8), (7, 0, 9)]
State:
[[2 8 9 0 6 5 4 3 1]
 [3 1 7 9 2 4 8 5 6]
 [6 4 5 1 3 8 7 2 9]
 [7 6 3 0 9 1 5 4 2]
 [0 2 1 4 7 0 9 6 8]
 [8 9 4 6 5 2 1 7 3]
 [4 3 2 5 1 0 6 8 7]
 [0 5 6 3 8 9 2 1 4]
 [1 7 8 2 4 6 3 9 5]]
Valid actions: [(0, 3, 7), (3, 3, 8), (4, 0, 5), (4, 5, 3)]
All available actions: [(0, 3, 1), (0, 3, 2), (0, 3, 3), (0, 3, 4), (0, 3, 5), (0, 3, 6), (0, 3, 7), (0, 3, 8), (0, 3, 9), (3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9), (4, 5, 1), (4, 5, 2), (4, 5, 3), (4, 5, 4), (4, 5, 5), (4, 5, 6), (4, 5, 7), (4, 5, 8), (4, 5, 9), (6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 0, 8), (7, 0, 9)]
Choosing to exploit
Valid move determined.
Step: Action: (4, 5, 3), Reward: tf.Tensor(10.0, shape=(), dtype=float32), Done: False
Running total step #69
Puzzle step # 4
Exploration rate (epsilon): 0.2566710114479065
All available actions: [(0, 3, 1), (0, 3, 2), (0, 3, 3), (0, 3, 4), (0, 3, 5), (0, 3, 6), (0, 3, 7), (0, 3, 8), (0, 3, 9), (3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9), (6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 0, 8), (7, 0, 9)]
State:
[[2 8 9 0 6 5 4 3 1]
 [3 1 7 9 2 4 8 5 6]
 [6 4 5 1 3 8 7 2 9]
 [7 6 3 0 9 1 5 4 2]
 [0 2 1 4 7 3 9 6 8]
 [8 9 4 6 5 2 1 7 3]
 [4 3 2 5 1 0 6 8 7]
 [0 5 6 3 8 9 2 1 4]
 [1 7 8 2 4 6 3 9 5]]
Valid actions: [(0, 3, 7), (3, 3, 8), (4, 0, 5)]
All available actions: [(0, 3, 1), (0, 3, 2), (0, 3, 3), (0, 3, 4), (0, 3, 5), (0, 3, 6), (0, 3, 7), (0, 3, 8), (0, 3, 9), (3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9), (6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 0, 8), (7, 0, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (3, 3, 8), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #70
Puzzle step # 5
Exploration rate (epsilon): 0.24383744597434998
All available actions: [(0, 3, 1), (0, 3, 2), (0, 3, 3), (0, 3, 4), (0, 3, 5), (0, 3, 6), (0, 3, 7), (0, 3, 8), (0, 3, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9), (6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 0, 8), (7, 0, 9)]
State:
[[2 8 9 0 6 5 4 3 1]
 [3 1 7 9 2 4 8 5 6]
 [6 4 5 1 3 8 7 2 9]
 [7 6 3 8 9 1 5 4 2]
 [0 2 1 4 7 3 9 6 8]
 [8 9 4 6 5 2 1 7 3]
 [4 3 2 5 1 0 6 8 7]
 [0 5 6 3 8 9 2 1 4]
 [1 7 8 2 4 6 3 9 5]]
Valid actions: [(0, 3, 7), (4, 0, 5)]
All available actions: [(0, 3, 1), (0, 3, 2), (0, 3, 3), (0, 3, 4), (0, 3, 5), (0, 3, 6), (0, 3, 7), (0, 3, 8), (0, 3, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9), (6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 0, 8), (7, 0, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (4, 0, 5), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #71
Puzzle step # 6
Exploration rate (epsilon): 0.24383744597434998
All available actions: [(0, 3, 1), (0, 3, 2), (0, 3, 3), (0, 3, 4), (0, 3, 5), (0, 3, 6), (0, 3, 7), (0, 3, 8), (0, 3, 9), (6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 0, 8), (7, 0, 9)]
State:
[[2 8 9 0 6 5 4 3 1]
 [3 1 7 9 2 4 8 5 6]
 [6 4 5 1 3 8 7 2 9]
 [7 6 3 8 9 1 5 4 2]
 [5 2 1 4 7 3 9 6 8]
 [8 9 4 6 5 2 1 7 3]
 [4 3 2 5 1 0 6 8 7]
 [0 5 6 3 8 9 2 1 4]
 [1 7 8 2 4 6 3 9 5]]
Valid actions: [(0, 3, 7)]
All available actions: [(0, 3, 1), (0, 3, 2), (0, 3, 3), (0, 3, 4), (0, 3, 5), (0, 3, 6), (0, 3, 7), (0, 3, 8), (0, 3, 9), (6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 0, 8), (7, 0, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (0, 3, 7), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #72
Puzzle step # 7
Exploration rate (epsilon): 0.24383744597434998
All available actions: [(6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 0, 8), (7, 0, 9)]
State:
[[2 8 9 7 6 5 4 3 1]
 [3 1 7 9 2 4 8 5 6]
 [6 4 5 1 3 8 7 2 9]
 [7 6 3 8 9 1 5 4 2]
 [5 2 1 4 7 3 9 6 8]
 [8 9 4 6 5 2 1 7 3]
 [4 3 2 5 1 0 6 8 7]
 [0 5 6 3 8 9 2 1 4]
 [1 7 8 2 4 6 3 9 5]]
Valid actions: []
All available actions: [(6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 0, 8), (7, 0, 9)]
Choosing to exploit
Running total step #73
Puzzle step # 8
Exploration rate (epsilon): 0.24383744597434998
All available actions: [(6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 0, 8), (7, 0, 9)]
State:
[[2 8 9 7 6 5 4 3 1]
 [3 1 7 9 2 4 8 5 6]
 [6 4 5 1 3 8 7 2 9]
 [7 6 3 8 9 1 5 4 2]
 [5 2 1 4 7 3 9 6 8]
 [8 9 4 6 5 2 1 7 3]
 [4 3 2 5 1 0 6 8 7]
 [0 5 6 3 8 9 2 1 4]
 [1 7 8 2 4 6 3 9 5]]
Valid actions: []
All available actions: [(6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 0, 8), (7, 0, 9)]
Choosing to exploit
Running total step #74
Puzzle step # 9
Exploration rate (epsilon): 0.24383744597434998
All available actions: [(6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 0, 8), (7, 0, 9)]
State:
[[2 8 9 7 6 5 4 3 1]
 [3 1 7 9 2 4 8 5 6]
 [6 4 5 1 3 8 7 2 9]
 [7 6 3 8 9 1 5 4 2]
 [5 2 1 4 7 3 9 6 8]
 [8 9 4 6 5 2 1 7 3]
 [4 3 2 5 1 0 6 8 7]
 [0 5 6 3 8 9 2 1 4]
 [1 7 8 2 4 6 3 9 5]]
Valid actions: []
All available actions: [(6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 0, 8), (7, 0, 9)]
Running total step #75
Puzzle step # 10
Exploration rate (epsilon): 0.23164556920528412
All available actions: [(6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 0, 8), (7, 0, 9)]
State:
[[2 8 9 7 6 5 4 3 1]
 [3 1 7 9 2 4 8 5 6]
 [6 4 5 1 3 8 7 2 9]
 [7 6 3 8 9 1 5 4 2]
 [5 2 1 4 7 3 9 6 8]
 [8 9 4 6 5 2 1 7 3]
 [4 3 2 5 1 0 6 8 7]
 [0 5 6 3 8 9 2 1 4]
 [1 7 8 2 4 6 3 9 5]]
Valid actions: []
All available actions: [(6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 0, 8), (7, 0, 9)]
Choosing to exploit
Running total step #76
Puzzle step # 11
Exploration rate (epsilon): 0.23164556920528412
All available actions: [(6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 0, 8), (7, 0, 9)]
State:
[[2 8 9 7 6 5 4 3 1]
 [3 1 7 9 2 4 8 5 6]
 [6 4 5 1 3 8 7 2 9]
 [7 6 3 8 9 1 5 4 2]
 [5 2 1 4 7 3 9 6 8]
 [8 9 4 6 5 2 1 7 3]
 [4 3 2 5 1 0 6 8 7]
 [0 5 6 3 8 9 2 1 4]
 [1 7 8 2 4 6 3 9 5]]
Valid actions: []
All available actions: [(6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 0, 8), (7, 0, 9)]
Choosing to exploit
Running total step #77
Puzzle step # 12
Exploration rate (epsilon): 0.23164556920528412
All available actions: [(6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 0, 8), (7, 0, 9)]
State:
[[2 8 9 7 6 5 4 3 1]
 [3 1 7 9 2 4 8 5 6]
 [6 4 5 1 3 8 7 2 9]
 [7 6 3 8 9 1 5 4 2]
 [5 2 1 4 7 3 9 6 8]
 [8 9 4 6 5 2 1 7 3]
 [4 3 2 5 1 0 6 8 7]
 [0 5 6 3 8 9 2 1 4]
 [1 7 8 2 4 6 3 9 5]]
Valid actions: []
All available actions: [(6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 0, 8), (7, 0, 9)]
Choosing to exploit
Running total step #78
Puzzle step # 13
Exploration rate (epsilon): 0.23164556920528412
All available actions: [(6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 0, 8), (7, 0, 9)]
State:
[[2 8 9 7 6 5 4 3 1]
 [3 1 7 9 2 4 8 5 6]
 [6 4 5 1 3 8 7 2 9]
 [7 6 3 8 9 1 5 4 2]
 [5 2 1 4 7 3 9 6 8]
 [8 9 4 6 5 2 1 7 3]
 [4 3 2 5 1 0 6 8 7]
 [0 5 6 3 8 9 2 1 4]
 [1 7 8 2 4 6 3 9 5]]
Valid actions: []
All available actions: [(6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 0, 8), (7, 0, 9)]
Choosing to exploit
Running total step #79
Puzzle step # 14
Exploration rate (epsilon): 0.23164556920528412
All available actions: [(6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 0, 8), (7, 0, 9)]
State:
[[2 8 9 7 6 5 4 3 1]
 [3 1 7 9 2 4 8 5 6]
 [6 4 5 1 3 8 7 2 9]
 [7 6 3 8 9 1 5 4 2]
 [5 2 1 4 7 3 9 6 8]
 [8 9 4 6 5 2 1 7 3]
 [4 3 2 5 1 0 6 8 7]
 [0 5 6 3 8 9 2 1 4]
 [1 7 8 2 4 6 3 9 5]]
Valid actions: []
All available actions: [(6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 0, 8), (7, 0, 9)]
Choosing to exploit
Board: tf.Tensor(
[[8 9 4 2 3 1 6 0 0]
 [7 6 2 0 9 5 1 0 3]
 [3 5 1 8 7 6 9 4 0]
 [5 8 3 6 2 4 7 1 0]
 [2 1 9 3 8 7 5 0 4]
 [6 4 7 1 5 9 3 2 8]
 [1 2 8 7 6 3 4 9 5]
 [9 7 6 5 4 2 0 3 1]
 [4 3 5 9 1 8 2 7 6]], shape=(9, 9), dtype=int32)

Puzzle # 8
All available actions: [(0, 7, 1), (0, 7, 2), (0, 7, 3), (0, 7, 4), (0, 7, 5), (0, 7, 6), (0, 7, 7), (0, 7, 8), (0, 7, 9), (0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (1, 3, 1), (1, 3, 2), (1, 3, 3), (1, 3, 4), (1, 3, 5), (1, 3, 6), (1, 3, 7), (1, 3, 8), (1, 3, 9), (1, 7, 1), (1, 7, 2), (1, 7, 3), (1, 7, 4), (1, 7, 5), (1, 7, 6), (1, 7, 7), (1, 7, 8), (1, 7, 9), (2, 8, 1), (2, 8, 2), (2, 8, 3), (2, 8, 4), (2, 8, 5), (2, 8, 6), (2, 8, 7), (2, 8, 8), (2, 8, 9), (3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (4, 7, 1), (4, 7, 2), (4, 7, 3), (4, 7, 4), (4, 7, 5), (4, 7, 6), (4, 7, 7), (4, 7, 8), (4, 7, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
State:
[[8 9 4 2 3 1 6 0 0]
 [7 6 2 0 9 5 1 0 3]
 [3 5 1 8 7 6 9 4 0]
 [5 8 3 6 2 4 7 1 0]
 [2 1 9 3 8 7 5 0 4]
 [6 4 7 1 5 9 3 2 8]
 [1 2 8 7 6 3 4 9 5]
 [9 7 6 5 4 2 0 3 1]
 [4 3 5 9 1 8 2 7 6]]
Valid actions: [(0, 7, 5), (0, 8, 7), (1, 3, 4), (1, 7, 8), (2, 8, 2), (3, 8, 9), (4, 7, 6), (7, 6, 8)]
All available actions: [(0, 7, 1), (0, 7, 2), (0, 7, 3), (0, 7, 4), (0, 7, 5), (0, 7, 6), (0, 7, 7), (0, 7, 8), (0, 7, 9), (0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (1, 3, 1), (1, 3, 2), (1, 3, 3), (1, 3, 4), (1, 3, 5), (1, 3, 6), (1, 3, 7), (1, 3, 8), (1, 3, 9), (1, 7, 1), (1, 7, 2), (1, 7, 3), (1, 7, 4), (1, 7, 5), (1, 7, 6), (1, 7, 7), (1, 7, 8), (1, 7, 9), (2, 8, 1), (2, 8, 2), (2, 8, 3), (2, 8, 4), (2, 8, 5), (2, 8, 6), (2, 8, 7), (2, 8, 8), (2, 8, 9), (3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (4, 7, 1), (4, 7, 2), (4, 7, 3), (4, 7, 4), (4, 7, 5), (4, 7, 6), (4, 7, 7), (4, 7, 8), (4, 7, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
Running total step #80
Puzzle step # 0
Exploration rate (epsilon): 0.22006328403949738
All available actions: [(0, 7, 1), (0, 7, 2), (0, 7, 3), (0, 7, 4), (0, 7, 5), (0, 7, 6), (0, 7, 7), (0, 7, 8), (0, 7, 9), (0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (1, 3, 1), (1, 3, 2), (1, 3, 3), (1, 3, 4), (1, 3, 5), (1, 3, 6), (1, 3, 7), (1, 3, 8), (1, 3, 9), (1, 7, 1), (1, 7, 2), (1, 7, 3), (1, 7, 4), (1, 7, 5), (1, 7, 6), (1, 7, 7), (1, 7, 8), (1, 7, 9), (2, 8, 1), (2, 8, 2), (2, 8, 3), (2, 8, 4), (2, 8, 5), (2, 8, 6), (2, 8, 7), (2, 8, 8), (2, 8, 9), (3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (4, 7, 1), (4, 7, 2), (4, 7, 3), (4, 7, 4), (4, 7, 5), (4, 7, 6), (4, 7, 7), (4, 7, 8), (4, 7, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
State:
[[8 9 4 2 3 1 6 0 0]
 [7 6 2 0 9 5 1 0 3]
 [3 5 1 8 7 6 9 4 0]
 [5 8 3 6 2 4 7 1 0]
 [2 1 9 3 8 7 5 0 4]
 [6 4 7 1 5 9 3 2 8]
 [1 2 8 7 6 3 4 9 5]
 [9 7 6 5 4 2 0 3 1]
 [4 3 5 9 1 8 2 7 6]]
Valid actions: [(0, 7, 5), (0, 8, 7), (1, 3, 4), (1, 7, 8), (2, 8, 2), (3, 8, 9), (4, 7, 6), (7, 6, 8)]
All available actions: [(0, 7, 1), (0, 7, 2), (0, 7, 3), (0, 7, 4), (0, 7, 5), (0, 7, 6), (0, 7, 7), (0, 7, 8), (0, 7, 9), (0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (1, 3, 1), (1, 3, 2), (1, 3, 3), (1, 3, 4), (1, 3, 5), (1, 3, 6), (1, 3, 7), (1, 3, 8), (1, 3, 9), (1, 7, 1), (1, 7, 2), (1, 7, 3), (1, 7, 4), (1, 7, 5), (1, 7, 6), (1, 7, 7), (1, 7, 8), (1, 7, 9), (2, 8, 1), (2, 8, 2), (2, 8, 3), (2, 8, 4), (2, 8, 5), (2, 8, 6), (2, 8, 7), (2, 8, 8), (2, 8, 9), (3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (4, 7, 1), (4, 7, 2), (4, 7, 3), (4, 7, 4), (4, 7, 5), (4, 7, 6), (4, 7, 7), (4, 7, 8), (4, 7, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (3, 8, 9), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #81
Puzzle step # 1
Exploration rate (epsilon): 0.22006328403949738
All available actions: [(0, 7, 1), (0, 7, 2), (0, 7, 3), (0, 7, 4), (0, 7, 5), (0, 7, 6), (0, 7, 7), (0, 7, 8), (0, 7, 9), (0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (1, 3, 1), (1, 3, 2), (1, 3, 3), (1, 3, 4), (1, 3, 5), (1, 3, 6), (1, 3, 7), (1, 3, 8), (1, 3, 9), (1, 7, 1), (1, 7, 2), (1, 7, 3), (1, 7, 4), (1, 7, 5), (1, 7, 6), (1, 7, 7), (1, 7, 8), (1, 7, 9), (2, 8, 1), (2, 8, 2), (2, 8, 3), (2, 8, 4), (2, 8, 5), (2, 8, 6), (2, 8, 7), (2, 8, 8), (2, 8, 9), (4, 7, 1), (4, 7, 2), (4, 7, 3), (4, 7, 4), (4, 7, 5), (4, 7, 6), (4, 7, 7), (4, 7, 8), (4, 7, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
State:
[[8 9 4 2 3 1 6 0 0]
 [7 6 2 0 9 5 1 0 3]
 [3 5 1 8 7 6 9 4 0]
 [5 8 3 6 2 4 7 1 9]
 [2 1 9 3 8 7 5 0 4]
 [6 4 7 1 5 9 3 2 8]
 [1 2 8 7 6 3 4 9 5]
 [9 7 6 5 4 2 0 3 1]
 [4 3 5 9 1 8 2 7 6]]
Valid actions: [(0, 7, 5), (0, 8, 7), (1, 3, 4), (1, 7, 8), (2, 8, 2), (4, 7, 6), (7, 6, 8)]
All available actions: [(0, 7, 1), (0, 7, 2), (0, 7, 3), (0, 7, 4), (0, 7, 5), (0, 7, 6), (0, 7, 7), (0, 7, 8), (0, 7, 9), (0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (1, 3, 1), (1, 3, 2), (1, 3, 3), (1, 3, 4), (1, 3, 5), (1, 3, 6), (1, 3, 7), (1, 3, 8), (1, 3, 9), (1, 7, 1), (1, 7, 2), (1, 7, 3), (1, 7, 4), (1, 7, 5), (1, 7, 6), (1, 7, 7), (1, 7, 8), (1, 7, 9), (2, 8, 1), (2, 8, 2), (2, 8, 3), (2, 8, 4), (2, 8, 5), (2, 8, 6), (2, 8, 7), (2, 8, 8), (2, 8, 9), (4, 7, 1), (4, 7, 2), (4, 7, 3), (4, 7, 4), (4, 7, 5), (4, 7, 6), (4, 7, 7), (4, 7, 8), (4, 7, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
Choosing to exploit
Valid move determined.
Step: Action: (0, 7, 5), Reward: tf.Tensor(10.0, shape=(), dtype=float32), Done: False
Running total step #82
Puzzle step # 2
Exploration rate (epsilon): 0.22006328403949738
All available actions: [(0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (1, 3, 1), (1, 3, 2), (1, 3, 3), (1, 3, 4), (1, 3, 5), (1, 3, 6), (1, 3, 7), (1, 3, 8), (1, 3, 9), (1, 7, 1), (1, 7, 2), (1, 7, 3), (1, 7, 4), (1, 7, 5), (1, 7, 6), (1, 7, 7), (1, 7, 8), (1, 7, 9), (2, 8, 1), (2, 8, 2), (2, 8, 3), (2, 8, 4), (2, 8, 5), (2, 8, 6), (2, 8, 7), (2, 8, 8), (2, 8, 9), (4, 7, 1), (4, 7, 2), (4, 7, 3), (4, 7, 4), (4, 7, 5), (4, 7, 6), (4, 7, 7), (4, 7, 8), (4, 7, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
State:
[[8 9 4 2 3 1 6 5 0]
 [7 6 2 0 9 5 1 0 3]
 [3 5 1 8 7 6 9 4 0]
 [5 8 3 6 2 4 7 1 9]
 [2 1 9 3 8 7 5 0 4]
 [6 4 7 1 5 9 3 2 8]
 [1 2 8 7 6 3 4 9 5]
 [9 7 6 5 4 2 0 3 1]
 [4 3 5 9 1 8 2 7 6]]
Valid actions: [(0, 8, 7), (1, 3, 4), (1, 7, 8), (2, 8, 2), (4, 7, 6), (7, 6, 8)]
All available actions: [(0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (1, 3, 1), (1, 3, 2), (1, 3, 3), (1, 3, 4), (1, 3, 5), (1, 3, 6), (1, 3, 7), (1, 3, 8), (1, 3, 9), (1, 7, 1), (1, 7, 2), (1, 7, 3), (1, 7, 4), (1, 7, 5), (1, 7, 6), (1, 7, 7), (1, 7, 8), (1, 7, 9), (2, 8, 1), (2, 8, 2), (2, 8, 3), (2, 8, 4), (2, 8, 5), (2, 8, 6), (2, 8, 7), (2, 8, 8), (2, 8, 9), (4, 7, 1), (4, 7, 2), (4, 7, 3), (4, 7, 4), (4, 7, 5), (4, 7, 6), (4, 7, 7), (4, 7, 8), (4, 7, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (1, 3, 4), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #83
Puzzle step # 3
Exploration rate (epsilon): 0.22006328403949738
All available actions: [(0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (1, 7, 1), (1, 7, 2), (1, 7, 3), (1, 7, 4), (1, 7, 5), (1, 7, 6), (1, 7, 7), (1, 7, 8), (1, 7, 9), (2, 8, 1), (2, 8, 2), (2, 8, 3), (2, 8, 4), (2, 8, 5), (2, 8, 6), (2, 8, 7), (2, 8, 8), (2, 8, 9), (4, 7, 1), (4, 7, 2), (4, 7, 3), (4, 7, 4), (4, 7, 5), (4, 7, 6), (4, 7, 7), (4, 7, 8), (4, 7, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
State:
[[8 9 4 2 3 1 6 5 0]
 [7 6 2 4 9 5 1 0 3]
 [3 5 1 8 7 6 9 4 0]
 [5 8 3 6 2 4 7 1 9]
 [2 1 9 3 8 7 5 0 4]
 [6 4 7 1 5 9 3 2 8]
 [1 2 8 7 6 3 4 9 5]
 [9 7 6 5 4 2 0 3 1]
 [4 3 5 9 1 8 2 7 6]]
Valid actions: [(0, 8, 7), (1, 7, 8), (2, 8, 2), (4, 7, 6), (7, 6, 8)]
All available actions: [(0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (1, 7, 1), (1, 7, 2), (1, 7, 3), (1, 7, 4), (1, 7, 5), (1, 7, 6), (1, 7, 7), (1, 7, 8), (1, 7, 9), (2, 8, 1), (2, 8, 2), (2, 8, 3), (2, 8, 4), (2, 8, 5), (2, 8, 6), (2, 8, 7), (2, 8, 8), (2, 8, 9), (4, 7, 1), (4, 7, 2), (4, 7, 3), (4, 7, 4), (4, 7, 5), (4, 7, 6), (4, 7, 7), (4, 7, 8), (4, 7, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
Running total step #84
Puzzle step # 4
Exploration rate (epsilon): 0.22006328403949738
All available actions: [(0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (1, 7, 1), (1, 7, 2), (1, 7, 3), (1, 7, 4), (1, 7, 5), (1, 7, 6), (1, 7, 7), (1, 7, 8), (1, 7, 9), (2, 8, 1), (2, 8, 2), (2, 8, 3), (2, 8, 4), (2, 8, 5), (2, 8, 6), (2, 8, 7), (2, 8, 8), (2, 8, 9), (4, 7, 1), (4, 7, 2), (4, 7, 3), (4, 7, 4), (4, 7, 5), (4, 7, 6), (4, 7, 7), (4, 7, 8), (4, 7, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
State:
[[8 9 4 2 3 1 6 5 0]
 [7 6 2 4 9 5 1 0 3]
 [3 5 1 8 7 6 9 4 0]
 [5 8 3 6 2 4 7 1 9]
 [2 1 9 3 8 7 5 0 4]
 [6 4 7 1 5 9 3 2 8]
 [1 2 8 7 6 3 4 9 5]
 [9 7 6 5 4 2 0 3 1]
 [4 3 5 9 1 8 2 7 6]]
Valid actions: [(0, 8, 7), (1, 7, 8), (2, 8, 2), (4, 7, 6), (7, 6, 8)]
All available actions: [(0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (1, 7, 1), (1, 7, 2), (1, 7, 3), (1, 7, 4), (1, 7, 5), (1, 7, 6), (1, 7, 7), (1, 7, 8), (1, 7, 9), (2, 8, 1), (2, 8, 2), (2, 8, 3), (2, 8, 4), (2, 8, 5), (2, 8, 6), (2, 8, 7), (2, 8, 8), (2, 8, 9), (4, 7, 1), (4, 7, 2), (4, 7, 3), (4, 7, 4), (4, 7, 5), (4, 7, 6), (4, 7, 7), (4, 7, 8), (4, 7, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (0, 8, 7), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #85
Puzzle step # 5
Exploration rate (epsilon): 0.20906011760234833
All available actions: [(1, 7, 1), (1, 7, 2), (1, 7, 3), (1, 7, 4), (1, 7, 5), (1, 7, 6), (1, 7, 7), (1, 7, 8), (1, 7, 9), (2, 8, 1), (2, 8, 2), (2, 8, 3), (2, 8, 4), (2, 8, 5), (2, 8, 6), (2, 8, 7), (2, 8, 8), (2, 8, 9), (4, 7, 1), (4, 7, 2), (4, 7, 3), (4, 7, 4), (4, 7, 5), (4, 7, 6), (4, 7, 7), (4, 7, 8), (4, 7, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
State:
[[8 9 4 2 3 1 6 5 7]
 [7 6 2 4 9 5 1 0 3]
 [3 5 1 8 7 6 9 4 0]
 [5 8 3 6 2 4 7 1 9]
 [2 1 9 3 8 7 5 0 4]
 [6 4 7 1 5 9 3 2 8]
 [1 2 8 7 6 3 4 9 5]
 [9 7 6 5 4 2 0 3 1]
 [4 3 5 9 1 8 2 7 6]]
Valid actions: [(1, 7, 8), (2, 8, 2), (4, 7, 6), (7, 6, 8)]
All available actions: [(1, 7, 1), (1, 7, 2), (1, 7, 3), (1, 7, 4), (1, 7, 5), (1, 7, 6), (1, 7, 7), (1, 7, 8), (1, 7, 9), (2, 8, 1), (2, 8, 2), (2, 8, 3), (2, 8, 4), (2, 8, 5), (2, 8, 6), (2, 8, 7), (2, 8, 8), (2, 8, 9), (4, 7, 1), (4, 7, 2), (4, 7, 3), (4, 7, 4), (4, 7, 5), (4, 7, 6), (4, 7, 7), (4, 7, 8), (4, 7, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (2, 8, 2), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #86
Puzzle step # 6
Exploration rate (epsilon): 0.20906011760234833
All available actions: [(1, 7, 1), (1, 7, 2), (1, 7, 3), (1, 7, 4), (1, 7, 5), (1, 7, 6), (1, 7, 7), (1, 7, 8), (1, 7, 9), (4, 7, 1), (4, 7, 2), (4, 7, 3), (4, 7, 4), (4, 7, 5), (4, 7, 6), (4, 7, 7), (4, 7, 8), (4, 7, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
State:
[[8 9 4 2 3 1 6 5 7]
 [7 6 2 4 9 5 1 0 3]
 [3 5 1 8 7 6 9 4 2]
 [5 8 3 6 2 4 7 1 9]
 [2 1 9 3 8 7 5 0 4]
 [6 4 7 1 5 9 3 2 8]
 [1 2 8 7 6 3 4 9 5]
 [9 7 6 5 4 2 0 3 1]
 [4 3 5 9 1 8 2 7 6]]
Valid actions: [(1, 7, 8), (4, 7, 6), (7, 6, 8)]
All available actions: [(1, 7, 1), (1, 7, 2), (1, 7, 3), (1, 7, 4), (1, 7, 5), (1, 7, 6), (1, 7, 7), (1, 7, 8), (1, 7, 9), (4, 7, 1), (4, 7, 2), (4, 7, 3), (4, 7, 4), (4, 7, 5), (4, 7, 6), (4, 7, 7), (4, 7, 8), (4, 7, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (4, 7, 6), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #87
Puzzle step # 7
Exploration rate (epsilon): 0.20906011760234833
All available actions: [(1, 7, 1), (1, 7, 2), (1, 7, 3), (1, 7, 4), (1, 7, 5), (1, 7, 6), (1, 7, 7), (1, 7, 8), (1, 7, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
State:
[[8 9 4 2 3 1 6 5 7]
 [7 6 2 4 9 5 1 0 3]
 [3 5 1 8 7 6 9 4 2]
 [5 8 3 6 2 4 7 1 9]
 [2 1 9 3 8 7 5 6 4]
 [6 4 7 1 5 9 3 2 8]
 [1 2 8 7 6 3 4 9 5]
 [9 7 6 5 4 2 0 3 1]
 [4 3 5 9 1 8 2 7 6]]
Valid actions: [(1, 7, 8), (7, 6, 8)]
All available actions: [(1, 7, 1), (1, 7, 2), (1, 7, 3), (1, 7, 4), (1, 7, 5), (1, 7, 6), (1, 7, 7), (1, 7, 8), (1, 7, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (7, 6, 8), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #88
Puzzle step # 8
Exploration rate (epsilon): 0.20906011760234833
All available actions: [(1, 7, 1), (1, 7, 2), (1, 7, 3), (1, 7, 4), (1, 7, 5), (1, 7, 6), (1, 7, 7), (1, 7, 8), (1, 7, 9)]
State:
[[8 9 4 2 3 1 6 5 7]
 [7 6 2 4 9 5 1 0 3]
 [3 5 1 8 7 6 9 4 2]
 [5 8 3 6 2 4 7 1 9]
 [2 1 9 3 8 7 5 6 4]
 [6 4 7 1 5 9 3 2 8]
 [1 2 8 7 6 3 4 9 5]
 [9 7 6 5 4 2 8 3 1]
 [4 3 5 9 1 8 2 7 6]]
Valid actions: [(1, 7, 8)]
All available actions: [(1, 7, 1), (1, 7, 2), (1, 7, 3), (1, 7, 4), (1, 7, 5), (1, 7, 6), (1, 7, 7), (1, 7, 8), (1, 7, 9)]
Running total step #89
Puzzle step # 9
Exploration rate (epsilon): 0.20906011760234833
All available actions: [(1, 7, 1), (1, 7, 2), (1, 7, 3), (1, 7, 4), (1, 7, 5), (1, 7, 6), (1, 7, 7), (1, 7, 8), (1, 7, 9)]
State:
[[8 9 4 2 3 1 6 5 7]
 [7 6 2 4 9 5 1 0 3]
 [3 5 1 8 7 6 9 4 2]
 [5 8 3 6 2 4 7 1 9]
 [2 1 9 3 8 7 5 6 4]
 [6 4 7 1 5 9 3 2 8]
 [1 2 8 7 6 3 4 9 5]
 [9 7 6 5 4 2 8 3 1]
 [4 3 5 9 1 8 2 7 6]]
Valid actions: [(1, 7, 8)]
All available actions: [(1, 7, 1), (1, 7, 2), (1, 7, 3), (1, 7, 4), (1, 7, 5), (1, 7, 6), (1, 7, 7), (1, 7, 8), (1, 7, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Solved.
Step: Action: (1, 7, 8), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: True
Board: tf.Tensor(
[[5 6 3 4 7 2 1 9 8]
 [2 1 9 3 8 6 7 5 4]
 [8 4 7 1 9 5 6 2 3]
 [4 7 2 0 3 8 5 0 9]
 [0 0 1 2 4 0 3 8 6]
 [6 3 8 5 1 9 4 7 2]
 [7 9 0 8 6 4 2 3 1]
 [3 0 4 9 5 1 8 6 7]
 [0 8 6 7 2 3 9 4 5]], shape=(9, 9), dtype=int32)

Puzzle # 9
All available actions: [(3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9), (4, 1, 1), (4, 1, 2), (4, 1, 3), (4, 1, 4), (4, 1, 5), (4, 1, 6), (4, 1, 7), (4, 1, 8), (4, 1, 9), (4, 5, 1), (4, 5, 2), (4, 5, 3), (4, 5, 4), (4, 5, 5), (4, 5, 6), (4, 5, 7), (4, 5, 8), (4, 5, 9), (6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9), (8, 0, 1), (8, 0, 2), (8, 0, 3), (8, 0, 4), (8, 0, 5), (8, 0, 6), (8, 0, 7), (8, 0, 8), (8, 0, 9)]
State:
[[5 6 3 4 7 2 1 9 8]
 [2 1 9 3 8 6 7 5 4]
 [8 4 7 1 9 5 6 2 3]
 [4 7 2 0 3 8 5 0 9]
 [0 0 1 2 4 0 3 8 6]
 [6 3 8 5 1 9 4 7 2]
 [7 9 0 8 6 4 2 3 1]
 [3 0 4 9 5 1 8 6 7]
 [0 8 6 7 2 3 9 4 5]]
Valid actions: [(3, 3, 6), (3, 7, 1), (4, 0, 9), (4, 1, 5), (4, 5, 7), (6, 2, 5), (7, 1, 2), (8, 0, 1)]
All available actions: [(3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 0, 8), (4, 0, 9), (4, 1, 1), (4, 1, 2), (4, 1, 3), (4, 1, 4), (4, 1, 5), (4, 1, 6), (4, 1, 7), (4, 1, 8), (4, 1, 9), (4, 5, 1), (4, 5, 2), (4, 5, 3), (4, 5, 4), (4, 5, 5), (4, 5, 6), (4, 5, 7), (4, 5, 8), (4, 5, 9), (6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9), (8, 0, 1), (8, 0, 2), (8, 0, 3), (8, 0, 4), (8, 0, 5), (8, 0, 6), (8, 0, 7), (8, 0, 8), (8, 0, 9)]
Choosing to exploit
Valid move determined.
Step: Action: (4, 0, 9), Reward: tf.Tensor(10.0, shape=(), dtype=float32), Done: False
Running total step #90
Puzzle step # 0
Exploration rate (epsilon): 0.19860711693763733
All available actions: [(3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9), (4, 1, 1), (4, 1, 2), (4, 1, 3), (4, 1, 4), (4, 1, 5), (4, 1, 6), (4, 1, 7), (4, 1, 8), (4, 1, 9), (4, 5, 1), (4, 5, 2), (4, 5, 3), (4, 5, 4), (4, 5, 5), (4, 5, 6), (4, 5, 7), (4, 5, 8), (4, 5, 9), (6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9), (8, 0, 1), (8, 0, 2), (8, 0, 3), (8, 0, 4), (8, 0, 5), (8, 0, 6), (8, 0, 7), (8, 0, 8), (8, 0, 9)]
State:
[[5 6 3 4 7 2 1 9 8]
 [2 1 9 3 8 6 7 5 4]
 [8 4 7 1 9 5 6 2 3]
 [4 7 2 0 3 8 5 0 9]
 [9 0 1 2 4 0 3 8 6]
 [6 3 8 5 1 9 4 7 2]
 [7 9 0 8 6 4 2 3 1]
 [3 0 4 9 5 1 8 6 7]
 [0 8 6 7 2 3 9 4 5]]
Valid actions: [(3, 3, 6), (3, 7, 1), (4, 1, 5), (4, 5, 7), (6, 2, 5), (7, 1, 2), (8, 0, 1)]
All available actions: [(3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9), (4, 1, 1), (4, 1, 2), (4, 1, 3), (4, 1, 4), (4, 1, 5), (4, 1, 6), (4, 1, 7), (4, 1, 8), (4, 1, 9), (4, 5, 1), (4, 5, 2), (4, 5, 3), (4, 5, 4), (4, 5, 5), (4, 5, 6), (4, 5, 7), (4, 5, 8), (4, 5, 9), (6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 2, 8), (6, 2, 9), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9), (8, 0, 1), (8, 0, 2), (8, 0, 3), (8, 0, 4), (8, 0, 5), (8, 0, 6), (8, 0, 7), (8, 0, 8), (8, 0, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (6, 2, 5), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #91
Puzzle step # 1
Exploration rate (epsilon): 0.19860711693763733
All available actions: [(3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9), (4, 1, 1), (4, 1, 2), (4, 1, 3), (4, 1, 4), (4, 1, 5), (4, 1, 6), (4, 1, 7), (4, 1, 8), (4, 1, 9), (4, 5, 1), (4, 5, 2), (4, 5, 3), (4, 5, 4), (4, 5, 5), (4, 5, 6), (4, 5, 7), (4, 5, 8), (4, 5, 9), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9), (8, 0, 1), (8, 0, 2), (8, 0, 3), (8, 0, 4), (8, 0, 5), (8, 0, 6), (8, 0, 7), (8, 0, 8), (8, 0, 9)]
State:
[[5 6 3 4 7 2 1 9 8]
 [2 1 9 3 8 6 7 5 4]
 [8 4 7 1 9 5 6 2 3]
 [4 7 2 0 3 8 5 0 9]
 [9 0 1 2 4 0 3 8 6]
 [6 3 8 5 1 9 4 7 2]
 [7 9 5 8 6 4 2 3 1]
 [3 0 4 9 5 1 8 6 7]
 [0 8 6 7 2 3 9 4 5]]
Valid actions: [(3, 3, 6), (3, 7, 1), (4, 1, 5), (4, 5, 7), (7, 1, 2), (8, 0, 1)]
All available actions: [(3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9), (4, 1, 1), (4, 1, 2), (4, 1, 3), (4, 1, 4), (4, 1, 5), (4, 1, 6), (4, 1, 7), (4, 1, 8), (4, 1, 9), (4, 5, 1), (4, 5, 2), (4, 5, 3), (4, 5, 4), (4, 5, 5), (4, 5, 6), (4, 5, 7), (4, 5, 8), (4, 5, 9), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9), (8, 0, 1), (8, 0, 2), (8, 0, 3), (8, 0, 4), (8, 0, 5), (8, 0, 6), (8, 0, 7), (8, 0, 8), (8, 0, 9)]
Choosing to exploit
Valid move determined.
Step: Action: (4, 1, 5), Reward: tf.Tensor(10.0, shape=(), dtype=float32), Done: False
Running total step #92
Puzzle step # 2
Exploration rate (epsilon): 0.19860711693763733
All available actions: [(3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9), (4, 5, 1), (4, 5, 2), (4, 5, 3), (4, 5, 4), (4, 5, 5), (4, 5, 6), (4, 5, 7), (4, 5, 8), (4, 5, 9), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9), (8, 0, 1), (8, 0, 2), (8, 0, 3), (8, 0, 4), (8, 0, 5), (8, 0, 6), (8, 0, 7), (8, 0, 8), (8, 0, 9)]
State:
[[5 6 3 4 7 2 1 9 8]
 [2 1 9 3 8 6 7 5 4]
 [8 4 7 1 9 5 6 2 3]
 [4 7 2 0 3 8 5 0 9]
 [9 5 1 2 4 0 3 8 6]
 [6 3 8 5 1 9 4 7 2]
 [7 9 5 8 6 4 2 3 1]
 [3 0 4 9 5 1 8 6 7]
 [0 8 6 7 2 3 9 4 5]]
Valid actions: [(3, 3, 6), (3, 7, 1), (4, 5, 7), (7, 1, 2), (8, 0, 1)]
All available actions: [(3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9), (4, 5, 1), (4, 5, 2), (4, 5, 3), (4, 5, 4), (4, 5, 5), (4, 5, 6), (4, 5, 7), (4, 5, 8), (4, 5, 9), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9), (8, 0, 1), (8, 0, 2), (8, 0, 3), (8, 0, 4), (8, 0, 5), (8, 0, 6), (8, 0, 7), (8, 0, 8), (8, 0, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (4, 5, 7), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #93
Puzzle step # 3
Exploration rate (epsilon): 0.19860711693763733
All available actions: [(3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9), (8, 0, 1), (8, 0, 2), (8, 0, 3), (8, 0, 4), (8, 0, 5), (8, 0, 6), (8, 0, 7), (8, 0, 8), (8, 0, 9)]
State:
[[5 6 3 4 7 2 1 9 8]
 [2 1 9 3 8 6 7 5 4]
 [8 4 7 1 9 5 6 2 3]
 [4 7 2 0 3 8 5 0 9]
 [9 5 1 2 4 7 3 8 6]
 [6 3 8 5 1 9 4 7 2]
 [7 9 5 8 6 4 2 3 1]
 [3 0 4 9 5 1 8 6 7]
 [0 8 6 7 2 3 9 4 5]]
Valid actions: [(3, 3, 6), (3, 7, 1), (7, 1, 2), (8, 0, 1)]
All available actions: [(3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 3, 8), (3, 3, 9), (3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9), (8, 0, 1), (8, 0, 2), (8, 0, 3), (8, 0, 4), (8, 0, 5), (8, 0, 6), (8, 0, 7), (8, 0, 8), (8, 0, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (3, 3, 6), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #94
Puzzle step # 4
Exploration rate (epsilon): 0.19860711693763733
All available actions: [(3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9), (8, 0, 1), (8, 0, 2), (8, 0, 3), (8, 0, 4), (8, 0, 5), (8, 0, 6), (8, 0, 7), (8, 0, 8), (8, 0, 9)]
State:
[[5 6 3 4 7 2 1 9 8]
 [2 1 9 3 8 6 7 5 4]
 [8 4 7 1 9 5 6 2 3]
 [4 7 2 6 3 8 5 0 9]
 [9 5 1 2 4 7 3 8 6]
 [6 3 8 5 1 9 4 7 2]
 [7 9 5 8 6 4 2 3 1]
 [3 0 4 9 5 1 8 6 7]
 [0 8 6 7 2 3 9 4 5]]
Valid actions: [(3, 7, 1), (7, 1, 2), (8, 0, 1)]
All available actions: [(3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9), (8, 0, 1), (8, 0, 2), (8, 0, 3), (8, 0, 4), (8, 0, 5), (8, 0, 6), (8, 0, 7), (8, 0, 8), (8, 0, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (8, 0, 1), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #95
Puzzle step # 5
Exploration rate (epsilon): 0.18867675960063934
All available actions: [(3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9)]
State:
[[5 6 3 4 7 2 1 9 8]
 [2 1 9 3 8 6 7 5 4]
 [8 4 7 1 9 5 6 2 3]
 [4 7 2 6 3 8 5 0 9]
 [9 5 1 2 4 7 3 8 6]
 [6 3 8 5 1 9 4 7 2]
 [7 9 5 8 6 4 2 3 1]
 [3 0 4 9 5 1 8 6 7]
 [1 8 6 7 2 3 9 4 5]]
Valid actions: [(3, 7, 1), (7, 1, 2)]
All available actions: [(3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (3, 7, 1), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #96
Puzzle step # 6
Exploration rate (epsilon): 0.18867675960063934
All available actions: [(7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9)]
State:
[[5 6 3 4 7 2 1 9 8]
 [2 1 9 3 8 6 7 5 4]
 [8 4 7 1 9 5 6 2 3]
 [4 7 2 6 3 8 5 1 9]
 [9 5 1 2 4 7 3 8 6]
 [6 3 8 5 1 9 4 7 2]
 [7 9 5 8 6 4 2 3 1]
 [3 0 4 9 5 1 8 6 7]
 [1 8 6 7 2 3 9 4 5]]
Valid actions: [(7, 1, 2)]
All available actions: [(7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Solved.
Step: Action: (7, 1, 2), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: True
Board: tf.Tensor(
[[1 6 3 7 2 5 9 4 8]
 [5 8 4 6 9 3 0 7 1]
 [7 2 9 1 8 4 3 6 0]
 [9 4 6 3 5 8 0 2 7]
 [3 7 1 4 6 2 5 8 9]
 [8 5 2 9 1 7 0 3 4]
 [4 9 8 2 0 1 7 5 6]
 [0 3 7 5 4 0 0 1 2]
 [2 1 5 8 7 6 4 9 3]], shape=(9, 9), dtype=int32)

Puzzle # 10
All available actions: [(1, 6, 1), (1, 6, 2), (1, 6, 3), (1, 6, 4), (1, 6, 5), (1, 6, 6), (1, 6, 7), (1, 6, 8), (1, 6, 9), (2, 8, 1), (2, 8, 2), (2, 8, 3), (2, 8, 4), (2, 8, 5), (2, 8, 6), (2, 8, 7), (2, 8, 8), (2, 8, 9), (3, 6, 1), (3, 6, 2), (3, 6, 3), (3, 6, 4), (3, 6, 5), (3, 6, 6), (3, 6, 7), (3, 6, 8), (3, 6, 9), (5, 6, 1), (5, 6, 2), (5, 6, 3), (5, 6, 4), (5, 6, 5), (5, 6, 6), (5, 6, 7), (5, 6, 8), (5, 6, 9), (6, 4, 1), (6, 4, 2), (6, 4, 3), (6, 4, 4), (6, 4, 5), (6, 4, 6), (6, 4, 7), (6, 4, 8), (6, 4, 9), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 0, 8), (7, 0, 9), (7, 5, 1), (7, 5, 2), (7, 5, 3), (7, 5, 4), (7, 5, 5), (7, 5, 6), (7, 5, 7), (7, 5, 8), (7, 5, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
State:
[[1 6 3 7 2 5 9 4 8]
 [5 8 4 6 9 3 0 7 1]
 [7 2 9 1 8 4 3 6 0]
 [9 4 6 3 5 8 0 2 7]
 [3 7 1 4 6 2 5 8 9]
 [8 5 2 9 1 7 0 3 4]
 [4 9 8 2 0 1 7 5 6]
 [0 3 7 5 4 0 0 1 2]
 [2 1 5 8 7 6 4 9 3]]
Valid actions: [(1, 6, 2), (2, 8, 5), (3, 6, 1), (5, 6, 6), (6, 4, 3), (7, 0, 6), (7, 5, 9), (7, 6, 8)]
All available actions: [(1, 6, 1), (1, 6, 2), (1, 6, 3), (1, 6, 4), (1, 6, 5), (1, 6, 6), (1, 6, 7), (1, 6, 8), (1, 6, 9), (2, 8, 1), (2, 8, 2), (2, 8, 3), (2, 8, 4), (2, 8, 5), (2, 8, 6), (2, 8, 7), (2, 8, 8), (2, 8, 9), (3, 6, 1), (3, 6, 2), (3, 6, 3), (3, 6, 4), (3, 6, 5), (3, 6, 6), (3, 6, 7), (3, 6, 8), (3, 6, 9), (5, 6, 1), (5, 6, 2), (5, 6, 3), (5, 6, 4), (5, 6, 5), (5, 6, 6), (5, 6, 7), (5, 6, 8), (5, 6, 9), (6, 4, 1), (6, 4, 2), (6, 4, 3), (6, 4, 4), (6, 4, 5), (6, 4, 6), (6, 4, 7), (6, 4, 8), (6, 4, 9), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 0, 8), (7, 0, 9), (7, 5, 1), (7, 5, 2), (7, 5, 3), (7, 5, 4), (7, 5, 5), (7, 5, 6), (7, 5, 7), (7, 5, 8), (7, 5, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (7, 5, 9), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #97
Puzzle step # 0
Exploration rate (epsilon): 0.18867675960063934
All available actions: [(1, 6, 1), (1, 6, 2), (1, 6, 3), (1, 6, 4), (1, 6, 5), (1, 6, 6), (1, 6, 7), (1, 6, 8), (1, 6, 9), (2, 8, 1), (2, 8, 2), (2, 8, 3), (2, 8, 4), (2, 8, 5), (2, 8, 6), (2, 8, 7), (2, 8, 8), (2, 8, 9), (3, 6, 1), (3, 6, 2), (3, 6, 3), (3, 6, 4), (3, 6, 5), (3, 6, 6), (3, 6, 7), (3, 6, 8), (3, 6, 9), (5, 6, 1), (5, 6, 2), (5, 6, 3), (5, 6, 4), (5, 6, 5), (5, 6, 6), (5, 6, 7), (5, 6, 8), (5, 6, 9), (6, 4, 1), (6, 4, 2), (6, 4, 3), (6, 4, 4), (6, 4, 5), (6, 4, 6), (6, 4, 7), (6, 4, 8), (6, 4, 9), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 0, 8), (7, 0, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
State:
[[1 6 3 7 2 5 9 4 8]
 [5 8 4 6 9 3 0 7 1]
 [7 2 9 1 8 4 3 6 0]
 [9 4 6 3 5 8 0 2 7]
 [3 7 1 4 6 2 5 8 9]
 [8 5 2 9 1 7 0 3 4]
 [4 9 8 2 0 1 7 5 6]
 [0 3 7 5 4 9 0 1 2]
 [2 1 5 8 7 6 4 9 3]]
Valid actions: [(1, 6, 2), (2, 8, 5), (3, 6, 1), (5, 6, 6), (6, 4, 3), (7, 0, 6), (7, 6, 8)]
All available actions: [(1, 6, 1), (1, 6, 2), (1, 6, 3), (1, 6, 4), (1, 6, 5), (1, 6, 6), (1, 6, 7), (1, 6, 8), (1, 6, 9), (2, 8, 1), (2, 8, 2), (2, 8, 3), (2, 8, 4), (2, 8, 5), (2, 8, 6), (2, 8, 7), (2, 8, 8), (2, 8, 9), (3, 6, 1), (3, 6, 2), (3, 6, 3), (3, 6, 4), (3, 6, 5), (3, 6, 6), (3, 6, 7), (3, 6, 8), (3, 6, 9), (5, 6, 1), (5, 6, 2), (5, 6, 3), (5, 6, 4), (5, 6, 5), (5, 6, 6), (5, 6, 7), (5, 6, 8), (5, 6, 9), (6, 4, 1), (6, 4, 2), (6, 4, 3), (6, 4, 4), (6, 4, 5), (6, 4, 6), (6, 4, 7), (6, 4, 8), (6, 4, 9), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 0, 8), (7, 0, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (6, 4, 3), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #98
Puzzle step # 1
Exploration rate (epsilon): 0.18867675960063934
All available actions: [(1, 6, 1), (1, 6, 2), (1, 6, 3), (1, 6, 4), (1, 6, 5), (1, 6, 6), (1, 6, 7), (1, 6, 8), (1, 6, 9), (2, 8, 1), (2, 8, 2), (2, 8, 3), (2, 8, 4), (2, 8, 5), (2, 8, 6), (2, 8, 7), (2, 8, 8), (2, 8, 9), (3, 6, 1), (3, 6, 2), (3, 6, 3), (3, 6, 4), (3, 6, 5), (3, 6, 6), (3, 6, 7), (3, 6, 8), (3, 6, 9), (5, 6, 1), (5, 6, 2), (5, 6, 3), (5, 6, 4), (5, 6, 5), (5, 6, 6), (5, 6, 7), (5, 6, 8), (5, 6, 9), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 0, 8), (7, 0, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
State:
[[1 6 3 7 2 5 9 4 8]
 [5 8 4 6 9 3 0 7 1]
 [7 2 9 1 8 4 3 6 0]
 [9 4 6 3 5 8 0 2 7]
 [3 7 1 4 6 2 5 8 9]
 [8 5 2 9 1 7 0 3 4]
 [4 9 8 2 3 1 7 5 6]
 [0 3 7 5 4 9 0 1 2]
 [2 1 5 8 7 6 4 9 3]]
Valid actions: [(1, 6, 2), (2, 8, 5), (3, 6, 1), (5, 6, 6), (7, 0, 6), (7, 6, 8)]
All available actions: [(1, 6, 1), (1, 6, 2), (1, 6, 3), (1, 6, 4), (1, 6, 5), (1, 6, 6), (1, 6, 7), (1, 6, 8), (1, 6, 9), (2, 8, 1), (2, 8, 2), (2, 8, 3), (2, 8, 4), (2, 8, 5), (2, 8, 6), (2, 8, 7), (2, 8, 8), (2, 8, 9), (3, 6, 1), (3, 6, 2), (3, 6, 3), (3, 6, 4), (3, 6, 5), (3, 6, 6), (3, 6, 7), (3, 6, 8), (3, 6, 9), (5, 6, 1), (5, 6, 2), (5, 6, 3), (5, 6, 4), (5, 6, 5), (5, 6, 6), (5, 6, 7), (5, 6, 8), (5, 6, 9), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 0, 8), (7, 0, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (7, 0, 6), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #99
Puzzle step # 2
Exploration rate (epsilon): 0.18867675960063934
All available actions: [(1, 6, 1), (1, 6, 2), (1, 6, 3), (1, 6, 4), (1, 6, 5), (1, 6, 6), (1, 6, 7), (1, 6, 8), (1, 6, 9), (2, 8, 1), (2, 8, 2), (2, 8, 3), (2, 8, 4), (2, 8, 5), (2, 8, 6), (2, 8, 7), (2, 8, 8), (2, 8, 9), (3, 6, 1), (3, 6, 2), (3, 6, 3), (3, 6, 4), (3, 6, 5), (3, 6, 6), (3, 6, 7), (3, 6, 8), (3, 6, 9), (5, 6, 1), (5, 6, 2), (5, 6, 3), (5, 6, 4), (5, 6, 5), (5, 6, 6), (5, 6, 7), (5, 6, 8), (5, 6, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
State:
[[1 6 3 7 2 5 9 4 8]
 [5 8 4 6 9 3 0 7 1]
 [7 2 9 1 8 4 3 6 0]
 [9 4 6 3 5 8 0 2 7]
 [3 7 1 4 6 2 5 8 9]
 [8 5 2 9 1 7 0 3 4]
 [4 9 8 2 3 1 7 5 6]
 [6 3 7 5 4 9 0 1 2]
 [2 1 5 8 7 6 4 9 3]]
Valid actions: [(1, 6, 2), (2, 8, 5), (3, 6, 1), (5, 6, 6), (7, 6, 8)]
All available actions: [(1, 6, 1), (1, 6, 2), (1, 6, 3), (1, 6, 4), (1, 6, 5), (1, 6, 6), (1, 6, 7), (1, 6, 8), (1, 6, 9), (2, 8, 1), (2, 8, 2), (2, 8, 3), (2, 8, 4), (2, 8, 5), (2, 8, 6), (2, 8, 7), (2, 8, 8), (2, 8, 9), (3, 6, 1), (3, 6, 2), (3, 6, 3), (3, 6, 4), (3, 6, 5), (3, 6, 6), (3, 6, 7), (3, 6, 8), (3, 6, 9), (5, 6, 1), (5, 6, 2), (5, 6, 3), (5, 6, 4), (5, 6, 5), (5, 6, 6), (5, 6, 7), (5, 6, 8), (5, 6, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (5, 6, 6), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #100
Puzzle step # 3
Exploration rate (epsilon): 0.17924290895462036
All available actions: [(1, 6, 1), (1, 6, 2), (1, 6, 3), (1, 6, 4), (1, 6, 5), (1, 6, 6), (1, 6, 7), (1, 6, 8), (1, 6, 9), (2, 8, 1), (2, 8, 2), (2, 8, 3), (2, 8, 4), (2, 8, 5), (2, 8, 6), (2, 8, 7), (2, 8, 8), (2, 8, 9), (3, 6, 1), (3, 6, 2), (3, 6, 3), (3, 6, 4), (3, 6, 5), (3, 6, 6), (3, 6, 7), (3, 6, 8), (3, 6, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
State:
[[1 6 3 7 2 5 9 4 8]
 [5 8 4 6 9 3 0 7 1]
 [7 2 9 1 8 4 3 6 0]
 [9 4 6 3 5 8 0 2 7]
 [3 7 1 4 6 2 5 8 9]
 [8 5 2 9 1 7 6 3 4]
 [4 9 8 2 3 1 7 5 6]
 [6 3 7 5 4 9 0 1 2]
 [2 1 5 8 7 6 4 9 3]]
Valid actions: [(1, 6, 2), (2, 8, 5), (3, 6, 1), (7, 6, 8)]
All available actions: [(1, 6, 1), (1, 6, 2), (1, 6, 3), (1, 6, 4), (1, 6, 5), (1, 6, 6), (1, 6, 7), (1, 6, 8), (1, 6, 9), (2, 8, 1), (2, 8, 2), (2, 8, 3), (2, 8, 4), (2, 8, 5), (2, 8, 6), (2, 8, 7), (2, 8, 8), (2, 8, 9), (3, 6, 1), (3, 6, 2), (3, 6, 3), (3, 6, 4), (3, 6, 5), (3, 6, 6), (3, 6, 7), (3, 6, 8), (3, 6, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
Running total step #101
Puzzle step # 4
Exploration rate (epsilon): 0.17924290895462036
All available actions: [(1, 6, 1), (1, 6, 2), (1, 6, 3), (1, 6, 4), (1, 6, 5), (1, 6, 6), (1, 6, 7), (1, 6, 8), (1, 6, 9), (2, 8, 1), (2, 8, 2), (2, 8, 3), (2, 8, 4), (2, 8, 5), (2, 8, 6), (2, 8, 7), (2, 8, 8), (2, 8, 9), (3, 6, 1), (3, 6, 2), (3, 6, 3), (3, 6, 4), (3, 6, 5), (3, 6, 6), (3, 6, 7), (3, 6, 8), (3, 6, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
State:
[[1 6 3 7 2 5 9 4 8]
 [5 8 4 6 9 3 0 7 1]
 [7 2 9 1 8 4 3 6 0]
 [9 4 6 3 5 8 0 2 7]
 [3 7 1 4 6 2 5 8 9]
 [8 5 2 9 1 7 6 3 4]
 [4 9 8 2 3 1 7 5 6]
 [6 3 7 5 4 9 0 1 2]
 [2 1 5 8 7 6 4 9 3]]
Valid actions: [(1, 6, 2), (2, 8, 5), (3, 6, 1), (7, 6, 8)]
All available actions: [(1, 6, 1), (1, 6, 2), (1, 6, 3), (1, 6, 4), (1, 6, 5), (1, 6, 6), (1, 6, 7), (1, 6, 8), (1, 6, 9), (2, 8, 1), (2, 8, 2), (2, 8, 3), (2, 8, 4), (2, 8, 5), (2, 8, 6), (2, 8, 7), (2, 8, 8), (2, 8, 9), (3, 6, 1), (3, 6, 2), (3, 6, 3), (3, 6, 4), (3, 6, 5), (3, 6, 6), (3, 6, 7), (3, 6, 8), (3, 6, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (2, 8, 5), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #102
Puzzle step # 5
Exploration rate (epsilon): 0.17924290895462036
All available actions: [(1, 6, 1), (1, 6, 2), (1, 6, 3), (1, 6, 4), (1, 6, 5), (1, 6, 6), (1, 6, 7), (1, 6, 8), (1, 6, 9), (3, 6, 1), (3, 6, 2), (3, 6, 3), (3, 6, 4), (3, 6, 5), (3, 6, 6), (3, 6, 7), (3, 6, 8), (3, 6, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
State:
[[1 6 3 7 2 5 9 4 8]
 [5 8 4 6 9 3 0 7 1]
 [7 2 9 1 8 4 3 6 5]
 [9 4 6 3 5 8 0 2 7]
 [3 7 1 4 6 2 5 8 9]
 [8 5 2 9 1 7 6 3 4]
 [4 9 8 2 3 1 7 5 6]
 [6 3 7 5 4 9 0 1 2]
 [2 1 5 8 7 6 4 9 3]]
Valid actions: [(1, 6, 2), (3, 6, 1), (7, 6, 8)]
All available actions: [(1, 6, 1), (1, 6, 2), (1, 6, 3), (1, 6, 4), (1, 6, 5), (1, 6, 6), (1, 6, 7), (1, 6, 8), (1, 6, 9), (3, 6, 1), (3, 6, 2), (3, 6, 3), (3, 6, 4), (3, 6, 5), (3, 6, 6), (3, 6, 7), (3, 6, 8), (3, 6, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (3, 6, 1), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #103
Puzzle step # 6
Exploration rate (epsilon): 0.17924290895462036
All available actions: [(1, 6, 1), (1, 6, 2), (1, 6, 3), (1, 6, 4), (1, 6, 5), (1, 6, 6), (1, 6, 7), (1, 6, 8), (1, 6, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
State:
[[1 6 3 7 2 5 9 4 8]
 [5 8 4 6 9 3 0 7 1]
 [7 2 9 1 8 4 3 6 5]
 [9 4 6 3 5 8 1 2 7]
 [3 7 1 4 6 2 5 8 9]
 [8 5 2 9 1 7 6 3 4]
 [4 9 8 2 3 1 7 5 6]
 [6 3 7 5 4 9 0 1 2]
 [2 1 5 8 7 6 4 9 3]]
Valid actions: [(1, 6, 2), (7, 6, 8)]
All available actions: [(1, 6, 1), (1, 6, 2), (1, 6, 3), (1, 6, 4), (1, 6, 5), (1, 6, 6), (1, 6, 7), (1, 6, 8), (1, 6, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (1, 6, 2), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #104
Puzzle step # 7
Exploration rate (epsilon): 0.17924290895462036
All available actions: [(7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
State:
[[1 6 3 7 2 5 9 4 8]
 [5 8 4 6 9 3 2 7 1]
 [7 2 9 1 8 4 3 6 5]
 [9 4 6 3 5 8 1 2 7]
 [3 7 1 4 6 2 5 8 9]
 [8 5 2 9 1 7 6 3 4]
 [4 9 8 2 3 1 7 5 6]
 [6 3 7 5 4 9 0 1 2]
 [2 1 5 8 7 6 4 9 3]]
Valid actions: [(7, 6, 8)]
All available actions: [(7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Solved.
Step: Action: (7, 6, 8), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: True
Board: tf.Tensor(
[[9 7 4 1 0 3 6 5 0]
 [6 5 1 2 7 4 3 8 9]
 [2 8 3 0 9 6 7 0 4]
 [1 2 9 8 3 5 4 7 6]
 [7 4 6 9 1 2 5 3 8]
 [8 3 5 6 4 7 9 2 1]
 [5 0 8 3 2 9 1 4 0]
 [3 0 7 4 6 8 0 9 5]
 [4 9 2 7 5 1 8 6 3]], shape=(9, 9), dtype=int32)

Puzzle # 11
All available actions: [(0, 4, 1), (0, 4, 2), (0, 4, 3), (0, 4, 4), (0, 4, 5), (0, 4, 6), (0, 4, 7), (0, 4, 8), (0, 4, 9), (0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (2, 3, 1), (2, 3, 2), (2, 3, 3), (2, 3, 4), (2, 3, 5), (2, 3, 6), (2, 3, 7), (2, 3, 8), (2, 3, 9), (2, 7, 1), (2, 7, 2), (2, 7, 3), (2, 7, 4), (2, 7, 5), (2, 7, 6), (2, 7, 7), (2, 7, 8), (2, 7, 9), (6, 1, 1), (6, 1, 2), (6, 1, 3), (6, 1, 4), (6, 1, 5), (6, 1, 6), (6, 1, 7), (6, 1, 8), (6, 1, 9), (6, 8, 1), (6, 8, 2), (6, 8, 3), (6, 8, 4), (6, 8, 5), (6, 8, 6), (6, 8, 7), (6, 8, 8), (6, 8, 9), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
State:
[[9 7 4 1 0 3 6 5 0]
 [6 5 1 2 7 4 3 8 9]
 [2 8 3 0 9 6 7 0 4]
 [1 2 9 8 3 5 4 7 6]
 [7 4 6 9 1 2 5 3 8]
 [8 3 5 6 4 7 9 2 1]
 [5 0 8 3 2 9 1 4 0]
 [3 0 7 4 6 8 0 9 5]
 [4 9 2 7 5 1 8 6 3]]
Valid actions: [(0, 4, 8), (0, 8, 2), (2, 3, 5), (2, 7, 1), (6, 1, 6), (6, 8, 7), (7, 1, 1), (7, 6, 2)]
All available actions: [(0, 4, 1), (0, 4, 2), (0, 4, 3), (0, 4, 4), (0, 4, 5), (0, 4, 6), (0, 4, 7), (0, 4, 8), (0, 4, 9), (0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (2, 3, 1), (2, 3, 2), (2, 3, 3), (2, 3, 4), (2, 3, 5), (2, 3, 6), (2, 3, 7), (2, 3, 8), (2, 3, 9), (2, 7, 1), (2, 7, 2), (2, 7, 3), (2, 7, 4), (2, 7, 5), (2, 7, 6), (2, 7, 7), (2, 7, 8), (2, 7, 9), (6, 1, 1), (6, 1, 2), (6, 1, 3), (6, 1, 4), (6, 1, 5), (6, 1, 6), (6, 1, 7), (6, 1, 8), (6, 1, 9), (6, 8, 1), (6, 8, 2), (6, 8, 3), (6, 8, 4), (6, 8, 5), (6, 8, 6), (6, 8, 7), (6, 8, 8), (6, 8, 9), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
Running total step #105
Puzzle step # 0
Exploration rate (epsilon): 0.17028076946735382
All available actions: [(0, 4, 1), (0, 4, 2), (0, 4, 3), (0, 4, 4), (0, 4, 5), (0, 4, 6), (0, 4, 7), (0, 4, 8), (0, 4, 9), (0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (2, 3, 1), (2, 3, 2), (2, 3, 3), (2, 3, 4), (2, 3, 5), (2, 3, 6), (2, 3, 7), (2, 3, 8), (2, 3, 9), (2, 7, 1), (2, 7, 2), (2, 7, 3), (2, 7, 4), (2, 7, 5), (2, 7, 6), (2, 7, 7), (2, 7, 8), (2, 7, 9), (6, 1, 1), (6, 1, 2), (6, 1, 3), (6, 1, 4), (6, 1, 5), (6, 1, 6), (6, 1, 7), (6, 1, 8), (6, 1, 9), (6, 8, 1), (6, 8, 2), (6, 8, 3), (6, 8, 4), (6, 8, 5), (6, 8, 6), (6, 8, 7), (6, 8, 8), (6, 8, 9), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
State:
[[9 7 4 1 0 3 6 5 0]
 [6 5 1 2 7 4 3 8 9]
 [2 8 3 0 9 6 7 0 4]
 [1 2 9 8 3 5 4 7 6]
 [7 4 6 9 1 2 5 3 8]
 [8 3 5 6 4 7 9 2 1]
 [5 0 8 3 2 9 1 4 0]
 [3 0 7 4 6 8 0 9 5]
 [4 9 2 7 5 1 8 6 3]]
Valid actions: [(0, 4, 8), (0, 8, 2), (2, 3, 5), (2, 7, 1), (6, 1, 6), (6, 8, 7), (7, 1, 1), (7, 6, 2)]
All available actions: [(0, 4, 1), (0, 4, 2), (0, 4, 3), (0, 4, 4), (0, 4, 5), (0, 4, 6), (0, 4, 7), (0, 4, 8), (0, 4, 9), (0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (2, 3, 1), (2, 3, 2), (2, 3, 3), (2, 3, 4), (2, 3, 5), (2, 3, 6), (2, 3, 7), (2, 3, 8), (2, 3, 9), (2, 7, 1), (2, 7, 2), (2, 7, 3), (2, 7, 4), (2, 7, 5), (2, 7, 6), (2, 7, 7), (2, 7, 8), (2, 7, 9), (6, 1, 1), (6, 1, 2), (6, 1, 3), (6, 1, 4), (6, 1, 5), (6, 1, 6), (6, 1, 7), (6, 1, 8), (6, 1, 9), (6, 8, 1), (6, 8, 2), (6, 8, 3), (6, 8, 4), (6, 8, 5), (6, 8, 6), (6, 8, 7), (6, 8, 8), (6, 8, 9), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
Choosing to exploit
Valid move determined.
Step: Action: (6, 1, 6), Reward: tf.Tensor(10.0, shape=(), dtype=float32), Done: False
Running total step #106
Puzzle step # 1
Exploration rate (epsilon): 0.17028076946735382
All available actions: [(0, 4, 1), (0, 4, 2), (0, 4, 3), (0, 4, 4), (0, 4, 5), (0, 4, 6), (0, 4, 7), (0, 4, 8), (0, 4, 9), (0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (2, 3, 1), (2, 3, 2), (2, 3, 3), (2, 3, 4), (2, 3, 5), (2, 3, 6), (2, 3, 7), (2, 3, 8), (2, 3, 9), (2, 7, 1), (2, 7, 2), (2, 7, 3), (2, 7, 4), (2, 7, 5), (2, 7, 6), (2, 7, 7), (2, 7, 8), (2, 7, 9), (6, 8, 1), (6, 8, 2), (6, 8, 3), (6, 8, 4), (6, 8, 5), (6, 8, 6), (6, 8, 7), (6, 8, 8), (6, 8, 9), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
State:
[[9 7 4 1 0 3 6 5 0]
 [6 5 1 2 7 4 3 8 9]
 [2 8 3 0 9 6 7 0 4]
 [1 2 9 8 3 5 4 7 6]
 [7 4 6 9 1 2 5 3 8]
 [8 3 5 6 4 7 9 2 1]
 [5 6 8 3 2 9 1 4 0]
 [3 0 7 4 6 8 0 9 5]
 [4 9 2 7 5 1 8 6 3]]
Valid actions: [(0, 4, 8), (0, 8, 2), (2, 3, 5), (2, 7, 1), (6, 8, 7), (7, 1, 1), (7, 6, 2)]
All available actions: [(0, 4, 1), (0, 4, 2), (0, 4, 3), (0, 4, 4), (0, 4, 5), (0, 4, 6), (0, 4, 7), (0, 4, 8), (0, 4, 9), (0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (2, 3, 1), (2, 3, 2), (2, 3, 3), (2, 3, 4), (2, 3, 5), (2, 3, 6), (2, 3, 7), (2, 3, 8), (2, 3, 9), (2, 7, 1), (2, 7, 2), (2, 7, 3), (2, 7, 4), (2, 7, 5), (2, 7, 6), (2, 7, 7), (2, 7, 8), (2, 7, 9), (6, 8, 1), (6, 8, 2), (6, 8, 3), (6, 8, 4), (6, 8, 5), (6, 8, 6), (6, 8, 7), (6, 8, 8), (6, 8, 9), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (2, 3, 5), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #107
Puzzle step # 2
Exploration rate (epsilon): 0.17028076946735382
All available actions: [(0, 4, 1), (0, 4, 2), (0, 4, 3), (0, 4, 4), (0, 4, 5), (0, 4, 6), (0, 4, 7), (0, 4, 8), (0, 4, 9), (0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (2, 7, 1), (2, 7, 2), (2, 7, 3), (2, 7, 4), (2, 7, 5), (2, 7, 6), (2, 7, 7), (2, 7, 8), (2, 7, 9), (6, 8, 1), (6, 8, 2), (6, 8, 3), (6, 8, 4), (6, 8, 5), (6, 8, 6), (6, 8, 7), (6, 8, 8), (6, 8, 9), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
State:
[[9 7 4 1 0 3 6 5 0]
 [6 5 1 2 7 4 3 8 9]
 [2 8 3 5 9 6 7 0 4]
 [1 2 9 8 3 5 4 7 6]
 [7 4 6 9 1 2 5 3 8]
 [8 3 5 6 4 7 9 2 1]
 [5 6 8 3 2 9 1 4 0]
 [3 0 7 4 6 8 0 9 5]
 [4 9 2 7 5 1 8 6 3]]
Valid actions: [(0, 4, 8), (0, 8, 2), (2, 7, 1), (6, 8, 7), (7, 1, 1), (7, 6, 2)]
All available actions: [(0, 4, 1), (0, 4, 2), (0, 4, 3), (0, 4, 4), (0, 4, 5), (0, 4, 6), (0, 4, 7), (0, 4, 8), (0, 4, 9), (0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (2, 7, 1), (2, 7, 2), (2, 7, 3), (2, 7, 4), (2, 7, 5), (2, 7, 6), (2, 7, 7), (2, 7, 8), (2, 7, 9), (6, 8, 1), (6, 8, 2), (6, 8, 3), (6, 8, 4), (6, 8, 5), (6, 8, 6), (6, 8, 7), (6, 8, 8), (6, 8, 9), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (2, 7, 1), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #108
Puzzle step # 3
Exploration rate (epsilon): 0.17028076946735382
All available actions: [(0, 4, 1), (0, 4, 2), (0, 4, 3), (0, 4, 4), (0, 4, 5), (0, 4, 6), (0, 4, 7), (0, 4, 8), (0, 4, 9), (0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (6, 8, 1), (6, 8, 2), (6, 8, 3), (6, 8, 4), (6, 8, 5), (6, 8, 6), (6, 8, 7), (6, 8, 8), (6, 8, 9), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
State:
[[9 7 4 1 0 3 6 5 0]
 [6 5 1 2 7 4 3 8 9]
 [2 8 3 5 9 6 7 1 4]
 [1 2 9 8 3 5 4 7 6]
 [7 4 6 9 1 2 5 3 8]
 [8 3 5 6 4 7 9 2 1]
 [5 6 8 3 2 9 1 4 0]
 [3 0 7 4 6 8 0 9 5]
 [4 9 2 7 5 1 8 6 3]]
Valid actions: [(0, 4, 8), (0, 8, 2), (6, 8, 7), (7, 1, 1), (7, 6, 2)]
All available actions: [(0, 4, 1), (0, 4, 2), (0, 4, 3), (0, 4, 4), (0, 4, 5), (0, 4, 6), (0, 4, 7), (0, 4, 8), (0, 4, 9), (0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (6, 8, 1), (6, 8, 2), (6, 8, 3), (6, 8, 4), (6, 8, 5), (6, 8, 6), (6, 8, 7), (6, 8, 8), (6, 8, 9), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
Choosing to exploit
Valid move determined.
Step: Action: (0, 8, 2), Reward: tf.Tensor(10.0, shape=(), dtype=float32), Done: False
Running total step #109
Puzzle step # 4
Exploration rate (epsilon): 0.17028076946735382
All available actions: [(0, 4, 1), (0, 4, 2), (0, 4, 3), (0, 4, 4), (0, 4, 5), (0, 4, 6), (0, 4, 7), (0, 4, 8), (0, 4, 9), (6, 8, 1), (6, 8, 2), (6, 8, 3), (6, 8, 4), (6, 8, 5), (6, 8, 6), (6, 8, 7), (6, 8, 8), (6, 8, 9), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
State:
[[9 7 4 1 0 3 6 5 2]
 [6 5 1 2 7 4 3 8 9]
 [2 8 3 5 9 6 7 1 4]
 [1 2 9 8 3 5 4 7 6]
 [7 4 6 9 1 2 5 3 8]
 [8 3 5 6 4 7 9 2 1]
 [5 6 8 3 2 9 1 4 0]
 [3 0 7 4 6 8 0 9 5]
 [4 9 2 7 5 1 8 6 3]]
Valid actions: [(0, 4, 8), (6, 8, 7), (7, 1, 1), (7, 6, 2)]
All available actions: [(0, 4, 1), (0, 4, 2), (0, 4, 3), (0, 4, 4), (0, 4, 5), (0, 4, 6), (0, 4, 7), (0, 4, 8), (0, 4, 9), (6, 8, 1), (6, 8, 2), (6, 8, 3), (6, 8, 4), (6, 8, 5), (6, 8, 6), (6, 8, 7), (6, 8, 8), (6, 8, 9), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 1, 8), (7, 1, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (7, 1, 1), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #110
Puzzle step # 5
Exploration rate (epsilon): 0.16176672279834747
All available actions: [(0, 4, 1), (0, 4, 2), (0, 4, 3), (0, 4, 4), (0, 4, 5), (0, 4, 6), (0, 4, 7), (0, 4, 8), (0, 4, 9), (6, 8, 1), (6, 8, 2), (6, 8, 3), (6, 8, 4), (6, 8, 5), (6, 8, 6), (6, 8, 7), (6, 8, 8), (6, 8, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
State:
[[9 7 4 1 0 3 6 5 2]
 [6 5 1 2 7 4 3 8 9]
 [2 8 3 5 9 6 7 1 4]
 [1 2 9 8 3 5 4 7 6]
 [7 4 6 9 1 2 5 3 8]
 [8 3 5 6 4 7 9 2 1]
 [5 6 8 3 2 9 1 4 0]
 [3 1 7 4 6 8 0 9 5]
 [4 9 2 7 5 1 8 6 3]]
Valid actions: [(0, 4, 8), (6, 8, 7), (7, 6, 2)]
All available actions: [(0, 4, 1), (0, 4, 2), (0, 4, 3), (0, 4, 4), (0, 4, 5), (0, 4, 6), (0, 4, 7), (0, 4, 8), (0, 4, 9), (6, 8, 1), (6, 8, 2), (6, 8, 3), (6, 8, 4), (6, 8, 5), (6, 8, 6), (6, 8, 7), (6, 8, 8), (6, 8, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (7, 6, 2), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #111
Puzzle step # 6
Exploration rate (epsilon): 0.16176672279834747
All available actions: [(0, 4, 1), (0, 4, 2), (0, 4, 3), (0, 4, 4), (0, 4, 5), (0, 4, 6), (0, 4, 7), (0, 4, 8), (0, 4, 9), (6, 8, 1), (6, 8, 2), (6, 8, 3), (6, 8, 4), (6, 8, 5), (6, 8, 6), (6, 8, 7), (6, 8, 8), (6, 8, 9)]
State:
[[9 7 4 1 0 3 6 5 2]
 [6 5 1 2 7 4 3 8 9]
 [2 8 3 5 9 6 7 1 4]
 [1 2 9 8 3 5 4 7 6]
 [7 4 6 9 1 2 5 3 8]
 [8 3 5 6 4 7 9 2 1]
 [5 6 8 3 2 9 1 4 0]
 [3 1 7 4 6 8 2 9 5]
 [4 9 2 7 5 1 8 6 3]]
Valid actions: [(0, 4, 8), (6, 8, 7)]
All available actions: [(0, 4, 1), (0, 4, 2), (0, 4, 3), (0, 4, 4), (0, 4, 5), (0, 4, 6), (0, 4, 7), (0, 4, 8), (0, 4, 9), (6, 8, 1), (6, 8, 2), (6, 8, 3), (6, 8, 4), (6, 8, 5), (6, 8, 6), (6, 8, 7), (6, 8, 8), (6, 8, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (0, 4, 8), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #112
Puzzle step # 7
Exploration rate (epsilon): 0.16176672279834747
All available actions: [(6, 8, 1), (6, 8, 2), (6, 8, 3), (6, 8, 4), (6, 8, 5), (6, 8, 6), (6, 8, 7), (6, 8, 8), (6, 8, 9)]
State:
[[9 7 4 1 8 3 6 5 2]
 [6 5 1 2 7 4 3 8 9]
 [2 8 3 5 9 6 7 1 4]
 [1 2 9 8 3 5 4 7 6]
 [7 4 6 9 1 2 5 3 8]
 [8 3 5 6 4 7 9 2 1]
 [5 6 8 3 2 9 1 4 0]
 [3 1 7 4 6 8 2 9 5]
 [4 9 2 7 5 1 8 6 3]]
Valid actions: [(6, 8, 7)]
All available actions: [(6, 8, 1), (6, 8, 2), (6, 8, 3), (6, 8, 4), (6, 8, 5), (6, 8, 6), (6, 8, 7), (6, 8, 8), (6, 8, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Solved.
Step: Action: (6, 8, 7), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: True
Board: tf.Tensor(
[[4 3 0 5 6 7 2 0 0]
 [7 2 9 4 8 1 6 5 3]
 [8 6 5 3 2 9 1 7 4]
 [9 8 6 2 4 3 5 0 7]
 [2 5 7 1 9 8 3 4 6]
 [1 4 3 7 5 6 8 0 2]
 [0 1 2 0 7 0 4 3 8]
 [3 7 4 8 1 2 9 6 5]
 [5 9 8 6 3 4 7 2 1]], shape=(9, 9), dtype=int32)

Puzzle # 12
All available actions: [(0, 2, 1), (0, 2, 2), (0, 2, 3), (0, 2, 4), (0, 2, 5), (0, 2, 6), (0, 2, 7), (0, 2, 8), (0, 2, 9), (0, 7, 1), (0, 7, 2), (0, 7, 3), (0, 7, 4), (0, 7, 5), (0, 7, 6), (0, 7, 7), (0, 7, 8), (0, 7, 9), (0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9), (5, 7, 1), (5, 7, 2), (5, 7, 3), (5, 7, 4), (5, 7, 5), (5, 7, 6), (5, 7, 7), (5, 7, 8), (5, 7, 9), (6, 0, 1), (6, 0, 2), (6, 0, 3), (6, 0, 4), (6, 0, 5), (6, 0, 6), (6, 0, 7), (6, 0, 8), (6, 0, 9), (6, 3, 1), (6, 3, 2), (6, 3, 3), (6, 3, 4), (6, 3, 5), (6, 3, 6), (6, 3, 7), (6, 3, 8), (6, 3, 9), (6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9)]
State:
[[4 3 0 5 6 7 2 0 0]
 [7 2 9 4 8 1 6 5 3]
 [8 6 5 3 2 9 1 7 4]
 [9 8 6 2 4 3 5 0 7]
 [2 5 7 1 9 8 3 4 6]
 [1 4 3 7 5 6 8 0 2]
 [0 1 2 0 7 0 4 3 8]
 [3 7 4 8 1 2 9 6 5]
 [5 9 8 6 3 4 7 2 1]]
Valid actions: [(0, 2, 1), (0, 7, 8), (0, 7, 9), (0, 8, 9), (3, 7, 1), (5, 7, 9), (6, 0, 6), (6, 3, 9), (6, 5, 5)]
All available actions: [(0, 2, 1), (0, 2, 2), (0, 2, 3), (0, 2, 4), (0, 2, 5), (0, 2, 6), (0, 2, 7), (0, 2, 8), (0, 2, 9), (0, 7, 1), (0, 7, 2), (0, 7, 3), (0, 7, 4), (0, 7, 5), (0, 7, 6), (0, 7, 7), (0, 7, 8), (0, 7, 9), (0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9), (5, 7, 1), (5, 7, 2), (5, 7, 3), (5, 7, 4), (5, 7, 5), (5, 7, 6), (5, 7, 7), (5, 7, 8), (5, 7, 9), (6, 0, 1), (6, 0, 2), (6, 0, 3), (6, 0, 4), (6, 0, 5), (6, 0, 6), (6, 0, 7), (6, 0, 8), (6, 0, 9), (6, 3, 1), (6, 3, 2), (6, 3, 3), (6, 3, 4), (6, 3, 5), (6, 3, 6), (6, 3, 7), (6, 3, 8), (6, 3, 9), (6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (6, 3, 9), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #113
Puzzle step # 0
Exploration rate (epsilon): 0.16176672279834747
All available actions: [(0, 2, 1), (0, 2, 2), (0, 2, 3), (0, 2, 4), (0, 2, 5), (0, 2, 6), (0, 2, 7), (0, 2, 8), (0, 2, 9), (0, 7, 1), (0, 7, 2), (0, 7, 3), (0, 7, 4), (0, 7, 5), (0, 7, 6), (0, 7, 7), (0, 7, 8), (0, 7, 9), (0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9), (5, 7, 1), (5, 7, 2), (5, 7, 3), (5, 7, 4), (5, 7, 5), (5, 7, 6), (5, 7, 7), (5, 7, 8), (5, 7, 9), (6, 0, 1), (6, 0, 2), (6, 0, 3), (6, 0, 4), (6, 0, 5), (6, 0, 6), (6, 0, 7), (6, 0, 8), (6, 0, 9), (6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9)]
State:
[[4 3 0 5 6 7 2 0 0]
 [7 2 9 4 8 1 6 5 3]
 [8 6 5 3 2 9 1 7 4]
 [9 8 6 2 4 3 5 0 7]
 [2 5 7 1 9 8 3 4 6]
 [1 4 3 7 5 6 8 0 2]
 [0 1 2 9 7 0 4 3 8]
 [3 7 4 8 1 2 9 6 5]
 [5 9 8 6 3 4 7 2 1]]
Valid actions: [(0, 2, 1), (0, 7, 8), (0, 7, 9), (0, 8, 9), (3, 7, 1), (5, 7, 9), (6, 0, 6), (6, 5, 5)]
All available actions: [(0, 2, 1), (0, 2, 2), (0, 2, 3), (0, 2, 4), (0, 2, 5), (0, 2, 6), (0, 2, 7), (0, 2, 8), (0, 2, 9), (0, 7, 1), (0, 7, 2), (0, 7, 3), (0, 7, 4), (0, 7, 5), (0, 7, 6), (0, 7, 7), (0, 7, 8), (0, 7, 9), (0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9), (5, 7, 1), (5, 7, 2), (5, 7, 3), (5, 7, 4), (5, 7, 5), (5, 7, 6), (5, 7, 7), (5, 7, 8), (5, 7, 9), (6, 0, 1), (6, 0, 2), (6, 0, 3), (6, 0, 4), (6, 0, 5), (6, 0, 6), (6, 0, 7), (6, 0, 8), (6, 0, 9), (6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9)]
Choosing to exploit
Valid move determined.
Step: Action: (0, 7, 9), Reward: tf.Tensor(10.0, shape=(), dtype=float32), Done: False
Running total step #114
Puzzle step # 1
Exploration rate (epsilon): 0.16176672279834747
All available actions: [(0, 2, 1), (0, 2, 2), (0, 2, 3), (0, 2, 4), (0, 2, 5), (0, 2, 6), (0, 2, 7), (0, 2, 8), (0, 2, 9), (0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9), (5, 7, 1), (5, 7, 2), (5, 7, 3), (5, 7, 4), (5, 7, 5), (5, 7, 6), (5, 7, 7), (5, 7, 8), (5, 7, 9), (6, 0, 1), (6, 0, 2), (6, 0, 3), (6, 0, 4), (6, 0, 5), (6, 0, 6), (6, 0, 7), (6, 0, 8), (6, 0, 9), (6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9)]
State:
[[4 3 0 5 6 7 2 9 0]
 [7 2 9 4 8 1 6 5 3]
 [8 6 5 3 2 9 1 7 4]
 [9 8 6 2 4 3 5 0 7]
 [2 5 7 1 9 8 3 4 6]
 [1 4 3 7 5 6 8 0 2]
 [0 1 2 9 7 0 4 3 8]
 [3 7 4 8 1 2 9 6 5]
 [5 9 8 6 3 4 7 2 1]]
Valid actions: [(0, 2, 1), (3, 7, 1), (6, 0, 6), (6, 5, 5)]
All available actions: [(0, 2, 1), (0, 2, 2), (0, 2, 3), (0, 2, 4), (0, 2, 5), (0, 2, 6), (0, 2, 7), (0, 2, 8), (0, 2, 9), (0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9), (5, 7, 1), (5, 7, 2), (5, 7, 3), (5, 7, 4), (5, 7, 5), (5, 7, 6), (5, 7, 7), (5, 7, 8), (5, 7, 9), (6, 0, 1), (6, 0, 2), (6, 0, 3), (6, 0, 4), (6, 0, 5), (6, 0, 6), (6, 0, 7), (6, 0, 8), (6, 0, 9), (6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (6, 0, 6), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
Running total step #115
Puzzle step # 2
Exploration rate (epsilon): 0.15367838740348816
All available actions: [(0, 2, 1), (0, 2, 2), (0, 2, 3), (0, 2, 4), (0, 2, 5), (0, 2, 6), (0, 2, 7), (0, 2, 8), (0, 2, 9), (0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9), (5, 7, 1), (5, 7, 2), (5, 7, 3), (5, 7, 4), (5, 7, 5), (5, 7, 6), (5, 7, 7), (5, 7, 8), (5, 7, 9), (6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9)]
State:
[[4 3 0 5 6 7 2 9 0]
 [7 2 9 4 8 1 6 5 3]
 [8 6 5 3 2 9 1 7 4]
 [9 8 6 2 4 3 5 0 7]
 [2 5 7 1 9 8 3 4 6]
 [1 4 3 7 5 6 8 0 2]
 [6 1 2 9 7 0 4 3 8]
 [3 7 4 8 1 2 9 6 5]
 [5 9 8 6 3 4 7 2 1]]
Valid actions: [(0, 2, 1), (3, 7, 1), (6, 5, 5)]
All available actions: [(0, 2, 1), (0, 2, 2), (0, 2, 3), (0, 2, 4), (0, 2, 5), (0, 2, 6), (0, 2, 7), (0, 2, 8), (0, 2, 9), (0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (3, 7, 8), (3, 7, 9), (5, 7, 1), (5, 7, 2), (5, 7, 3), (5, 7, 4), (5, 7, 5), (5, 7, 6), (5, 7, 7), (5, 7, 8), (5, 7, 9), (6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 5, 8), (6, 5, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: tf.Tensor(5.0, shape=(), dtype=float32)
Step: Action: (6, 5, 5), Reward: tf.Tensor(15.0, shape=(), dtype=float32), Done: False
