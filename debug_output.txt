Epoch # 0
Board: tf.Tensor(
[[0 6 4 3 7 1 2 5 0]
 [3 2 5 8 4 9 7 6 1]
 [0 7 1 2 6 5 8 4 0]
 [4 3 6 1 0 2 0 8 7]
 [1 9 8 6 5 7 4 3 2]
 [0 5 7 4 8 3 0 1 6]
 [6 8 9 7 3 4 1 2 5]
 [7 1 3 5 2 8 6 9 4]
 [5 4 2 9 1 6 3 7 8]], shape=(9, 9), dtype=int32)

Puzzle # 1
State:
[[0 6 4 3 7 1 2 5 0]
 [3 2 5 8 4 9 7 6 1]
 [0 7 1 2 6 5 8 4 0]
 [4 3 6 1 0 2 0 8 7]
 [1 9 8 6 5 7 4 3 2]
 [0 5 7 4 8 3 0 1 6]
 [6 8 9 7 3 4 1 2 5]
 [7 1 3 5 2 8 6 9 4]
 [5 4 2 9 1 6 3 7 8]]
Valid actions: [(0, 0, 8), (0, 0, 9), (0, 8, 9), (2, 0, 9), (2, 8, 3), (2, 8, 9), (3, 4, 9), (3, 6, 5), (3, 6, 9), (5, 0, 2), (5, 6, 9)]
All available actions: [(0, 0, 1), (0, 0, 2), (0, 0, 3), (0, 0, 4), (0, 0, 5), (0, 0, 6), (0, 0, 7), (0, 0, 8), (0, 0, 9), (0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (2, 0, 1), (2, 0, 2), (2, 0, 3), (2, 0, 4), (2, 0, 5), (2, 0, 6), (2, 0, 7), (2, 0, 8), (2, 0, 9), (2, 8, 1), (2, 8, 2), (2, 8, 3), (2, 8, 4), (2, 8, 5), (2, 8, 6), (2, 8, 7), (2, 8, 8), (2, 8, 9), (3, 4, 1), (3, 4, 2), (3, 4, 3), (3, 4, 4), (3, 4, 5), (3, 4, 6), (3, 4, 7), (3, 4, 8), (3, 4, 9), (3, 6, 1), (3, 6, 2), (3, 6, 3), (3, 6, 4), (3, 6, 5), (3, 6, 6), (3, 6, 7), (3, 6, 8), (3, 6, 9), (5, 0, 1), (5, 0, 2), (5, 0, 3), (5, 0, 4), (5, 0, 5), (5, 0, 6), (5, 0, 7), (5, 0, 8), (5, 0, 9), (5, 6, 1), (5, 6, 2), (5, 6, 3), (5, 6, 4), (5, 6, 5), (5, 6, 6), (5, 6, 7), (5, 6, 8), (5, 6, 9)]
Choosing to exploit
Valid move determined.
Step: Action: (2, 8, 3), Reward: 10, Done: False
Running total step #0
Puzzle step # 0
Exploration rate (epsilon): 0.5
State:
[[0 6 4 3 7 1 2 5 0]
 [3 2 5 8 4 9 7 6 1]
 [0 7 1 2 6 5 8 4 3]
 [4 3 6 1 0 2 0 8 7]
 [1 9 8 6 5 7 4 3 2]
 [0 5 7 4 8 3 0 1 6]
 [6 8 9 7 3 4 1 2 5]
 [7 1 3 5 2 8 6 9 4]
 [5 4 2 9 1 6 3 7 8]]
Valid actions: [(0, 0, 8), (0, 0, 9), (0, 8, 9), (2, 0, 9), (3, 4, 9), (3, 6, 5), (3, 6, 9), (5, 0, 2), (5, 6, 9)]
All available actions: [(0, 0, 1), (0, 0, 2), (0, 0, 3), (0, 0, 4), (0, 0, 5), (0, 0, 6), (0, 0, 7), (0, 0, 8), (0, 0, 9), (0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (2, 0, 1), (2, 0, 2), (2, 0, 3), (2, 0, 4), (2, 0, 5), (2, 0, 6), (2, 0, 7), (2, 0, 8), (2, 0, 9), (3, 4, 1), (3, 4, 2), (3, 4, 3), (3, 4, 4), (3, 4, 5), (3, 4, 6), (3, 4, 7), (3, 4, 8), (3, 4, 9), (3, 6, 1), (3, 6, 2), (3, 6, 3), (3, 6, 4), (3, 6, 5), (3, 6, 6), (3, 6, 7), (3, 6, 8), (3, 6, 9), (5, 0, 1), (5, 0, 2), (5, 0, 3), (5, 0, 4), (5, 0, 5), (5, 0, 6), (5, 0, 7), (5, 0, 8), (5, 0, 9), (5, 6, 1), (5, 6, 2), (5, 6, 3), (5, 6, 4), (5, 6, 5), (5, 6, 6), (5, 6, 7), (5, 6, 8), (5, 6, 9)]
Step: Action: (3, 4, 3), Reward: -5, Done: False
Running total step #1
Puzzle step # 1
Exploration rate (epsilon): 0.5
State:
[[0 6 4 3 7 1 2 5 0]
 [3 2 5 8 4 9 7 6 1]
 [0 7 1 2 6 5 8 4 3]
 [4 3 6 1 0 2 0 8 7]
 [1 9 8 6 5 7 4 3 2]
 [0 5 7 4 8 3 0 1 6]
 [6 8 9 7 3 4 1 2 5]
 [7 1 3 5 2 8 6 9 4]
 [5 4 2 9 1 6 3 7 8]]
Valid actions: [(0, 0, 8), (0, 0, 9), (0, 8, 9), (2, 0, 9), (3, 4, 9), (3, 6, 5), (3, 6, 9), (5, 0, 2), (5, 6, 9)]
All available actions: [(0, 0, 1), (0, 0, 2), (0, 0, 3), (0, 0, 4), (0, 0, 5), (0, 0, 6), (0, 0, 7), (0, 0, 8), (0, 0, 9), (0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (2, 0, 1), (2, 0, 2), (2, 0, 3), (2, 0, 4), (2, 0, 5), (2, 0, 6), (2, 0, 7), (2, 0, 8), (2, 0, 9), (3, 4, 1), (3, 4, 2), (3, 4, 3), (3, 4, 4), (3, 4, 5), (3, 4, 6), (3, 4, 7), (3, 4, 8), (3, 4, 9), (3, 6, 1), (3, 6, 2), (3, 6, 3), (3, 6, 4), (3, 6, 5), (3, 6, 6), (3, 6, 7), (3, 6, 8), (3, 6, 9), (5, 0, 1), (5, 0, 2), (5, 0, 3), (5, 0, 4), (5, 0, 5), (5, 0, 6), (5, 0, 7), (5, 0, 8), (5, 0, 9), (5, 6, 1), (5, 6, 2), (5, 6, 3), (5, 6, 4), (5, 6, 5), (5, 6, 6), (5, 6, 7), (5, 6, 8), (5, 6, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: 5
Step: Action: (2, 0, 9), Reward: 15, Done: False
Running total step #2
Puzzle step # 2
Exploration rate (epsilon): 0.5
State:
[[0 6 4 3 7 1 2 5 0]
 [3 2 5 8 4 9 7 6 1]
 [9 7 1 2 6 5 8 4 3]
 [4 3 6 1 0 2 0 8 7]
 [1 9 8 6 5 7 4 3 2]
 [0 5 7 4 8 3 0 1 6]
 [6 8 9 7 3 4 1 2 5]
 [7 1 3 5 2 8 6 9 4]
 [5 4 2 9 1 6 3 7 8]]
Valid actions: [(0, 0, 8), (0, 8, 9), (3, 4, 9), (3, 6, 5), (3, 6, 9), (5, 0, 2), (5, 6, 9)]
All available actions: [(0, 0, 1), (0, 0, 2), (0, 0, 3), (0, 0, 4), (0, 0, 5), (0, 0, 6), (0, 0, 7), (0, 0, 8), (0, 0, 9), (0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (3, 4, 1), (3, 4, 2), (3, 4, 3), (3, 4, 4), (3, 4, 5), (3, 4, 6), (3, 4, 7), (3, 4, 8), (3, 4, 9), (3, 6, 1), (3, 6, 2), (3, 6, 3), (3, 6, 4), (3, 6, 5), (3, 6, 6), (3, 6, 7), (3, 6, 8), (3, 6, 9), (5, 0, 1), (5, 0, 2), (5, 0, 3), (5, 0, 4), (5, 0, 5), (5, 0, 6), (5, 0, 7), (5, 0, 8), (5, 0, 9), (5, 6, 1), (5, 6, 2), (5, 6, 3), (5, 6, 4), (5, 6, 5), (5, 6, 6), (5, 6, 7), (5, 6, 8), (5, 6, 9)]
Step: Action: (5, 0, 8), Reward: -5, Done: False
Running total step #3
Puzzle step # 3
Exploration rate (epsilon): 0.5
State:
[[0 6 4 3 7 1 2 5 0]
 [3 2 5 8 4 9 7 6 1]
 [9 7 1 2 6 5 8 4 3]
 [4 3 6 1 0 2 0 8 7]
 [1 9 8 6 5 7 4 3 2]
 [0 5 7 4 8 3 0 1 6]
 [6 8 9 7 3 4 1 2 5]
 [7 1 3 5 2 8 6 9 4]
 [5 4 2 9 1 6 3 7 8]]
Valid actions: [(0, 0, 8), (0, 8, 9), (3, 4, 9), (3, 6, 5), (3, 6, 9), (5, 0, 2), (5, 6, 9)]
All available actions: [(0, 0, 1), (0, 0, 2), (0, 0, 3), (0, 0, 4), (0, 0, 5), (0, 0, 6), (0, 0, 7), (0, 0, 8), (0, 0, 9), (0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (3, 4, 1), (3, 4, 2), (3, 4, 3), (3, 4, 4), (3, 4, 5), (3, 4, 6), (3, 4, 7), (3, 4, 8), (3, 4, 9), (3, 6, 1), (3, 6, 2), (3, 6, 3), (3, 6, 4), (3, 6, 5), (3, 6, 6), (3, 6, 7), (3, 6, 8), (3, 6, 9), (5, 0, 1), (5, 0, 2), (5, 0, 3), (5, 0, 4), (5, 0, 5), (5, 0, 6), (5, 0, 7), (5, 0, 8), (5, 0, 9), (5, 6, 1), (5, 6, 2), (5, 6, 3), (5, 6, 4), (5, 6, 5), (5, 6, 6), (5, 6, 7), (5, 6, 8), (5, 6, 9)]
Step: Action: (3, 4, 2), Reward: -5, Done: False
Running total step #4
Puzzle step # 4
Exploration rate (epsilon): 0.5
State:
[[0 6 4 3 7 1 2 5 0]
 [3 2 5 8 4 9 7 6 1]
 [9 7 1 2 6 5 8 4 3]
 [4 3 6 1 0 2 0 8 7]
 [1 9 8 6 5 7 4 3 2]
 [0 5 7 4 8 3 0 1 6]
 [6 8 9 7 3 4 1 2 5]
 [7 1 3 5 2 8 6 9 4]
 [5 4 2 9 1 6 3 7 8]]
Valid actions: [(0, 0, 8), (0, 8, 9), (3, 4, 9), (3, 6, 5), (3, 6, 9), (5, 0, 2), (5, 6, 9)]
All available actions: [(0, 0, 1), (0, 0, 2), (0, 0, 3), (0, 0, 4), (0, 0, 5), (0, 0, 6), (0, 0, 7), (0, 0, 8), (0, 0, 9), (0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (3, 4, 1), (3, 4, 2), (3, 4, 3), (3, 4, 4), (3, 4, 5), (3, 4, 6), (3, 4, 7), (3, 4, 8), (3, 4, 9), (3, 6, 1), (3, 6, 2), (3, 6, 3), (3, 6, 4), (3, 6, 5), (3, 6, 6), (3, 6, 7), (3, 6, 8), (3, 6, 9), (5, 0, 1), (5, 0, 2), (5, 0, 3), (5, 0, 4), (5, 0, 5), (5, 0, 6), (5, 0, 7), (5, 0, 8), (5, 0, 9), (5, 6, 1), (5, 6, 2), (5, 6, 3), (5, 6, 4), (5, 6, 5), (5, 6, 6), (5, 6, 7), (5, 6, 8), (5, 6, 9)]
Choosing to exploit
Valid move determined.
Step: Action: (3, 6, 5), Reward: 10, Done: False
Running total step #5
Puzzle step # 5
Exploration rate (epsilon): 0.4975000023841858
State:
[[0 6 4 3 7 1 2 5 0]
 [3 2 5 8 4 9 7 6 1]
 [9 7 1 2 6 5 8 4 3]
 [4 3 6 1 0 2 5 8 7]
 [1 9 8 6 5 7 4 3 2]
 [0 5 7 4 8 3 0 1 6]
 [6 8 9 7 3 4 1 2 5]
 [7 1 3 5 2 8 6 9 4]
 [5 4 2 9 1 6 3 7 8]]
Valid actions: [(0, 0, 8), (0, 8, 9), (3, 4, 9), (5, 0, 2), (5, 6, 9)]
All available actions: [(0, 0, 1), (0, 0, 2), (0, 0, 3), (0, 0, 4), (0, 0, 5), (0, 0, 6), (0, 0, 7), (0, 0, 8), (0, 0, 9), (0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (3, 4, 1), (3, 4, 2), (3, 4, 3), (3, 4, 4), (3, 4, 5), (3, 4, 6), (3, 4, 7), (3, 4, 8), (3, 4, 9), (5, 0, 1), (5, 0, 2), (5, 0, 3), (5, 0, 4), (5, 0, 5), (5, 0, 6), (5, 0, 7), (5, 0, 8), (5, 0, 9), (5, 6, 1), (5, 6, 2), (5, 6, 3), (5, 6, 4), (5, 6, 5), (5, 6, 6), (5, 6, 7), (5, 6, 8), (5, 6, 9)]
Step: Action: (3, 4, 7), Reward: -5, Done: False
Running total step #6
Puzzle step # 6
Exploration rate (epsilon): 0.4975000023841858
State:
[[0 6 4 3 7 1 2 5 0]
 [3 2 5 8 4 9 7 6 1]
 [9 7 1 2 6 5 8 4 3]
 [4 3 6 1 0 2 5 8 7]
 [1 9 8 6 5 7 4 3 2]
 [0 5 7 4 8 3 0 1 6]
 [6 8 9 7 3 4 1 2 5]
 [7 1 3 5 2 8 6 9 4]
 [5 4 2 9 1 6 3 7 8]]
Valid actions: [(0, 0, 8), (0, 8, 9), (3, 4, 9), (5, 0, 2), (5, 6, 9)]
All available actions: [(0, 0, 1), (0, 0, 2), (0, 0, 3), (0, 0, 4), (0, 0, 5), (0, 0, 6), (0, 0, 7), (0, 0, 8), (0, 0, 9), (0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (3, 4, 1), (3, 4, 2), (3, 4, 3), (3, 4, 4), (3, 4, 5), (3, 4, 6), (3, 4, 7), (3, 4, 8), (3, 4, 9), (5, 0, 1), (5, 0, 2), (5, 0, 3), (5, 0, 4), (5, 0, 5), (5, 0, 6), (5, 0, 7), (5, 0, 8), (5, 0, 9), (5, 6, 1), (5, 6, 2), (5, 6, 3), (5, 6, 4), (5, 6, 5), (5, 6, 6), (5, 6, 7), (5, 6, 8), (5, 6, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: 5
Step: Action: (5, 0, 2), Reward: 15, Done: False
Running total step #7
Puzzle step # 7
Exploration rate (epsilon): 0.4975000023841858
State:
[[0 6 4 3 7 1 2 5 0]
 [3 2 5 8 4 9 7 6 1]
 [9 7 1 2 6 5 8 4 3]
 [4 3 6 1 0 2 5 8 7]
 [1 9 8 6 5 7 4 3 2]
 [2 5 7 4 8 3 0 1 6]
 [6 8 9 7 3 4 1 2 5]
 [7 1 3 5 2 8 6 9 4]
 [5 4 2 9 1 6 3 7 8]]
Valid actions: [(0, 0, 8), (0, 8, 9), (3, 4, 9), (5, 6, 9)]
All available actions: [(0, 0, 1), (0, 0, 2), (0, 0, 3), (0, 0, 4), (0, 0, 5), (0, 0, 6), (0, 0, 7), (0, 0, 8), (0, 0, 9), (0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (3, 4, 1), (3, 4, 2), (3, 4, 3), (3, 4, 4), (3, 4, 5), (3, 4, 6), (3, 4, 7), (3, 4, 8), (3, 4, 9), (5, 6, 1), (5, 6, 2), (5, 6, 3), (5, 6, 4), (5, 6, 5), (5, 6, 6), (5, 6, 7), (5, 6, 8), (5, 6, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: 5
Step: Action: (0, 0, 8), Reward: 15, Done: False
Running total step #8
Puzzle step # 8
Exploration rate (epsilon): 0.4975000023841858
State:
[[8 6 4 3 7 1 2 5 0]
 [3 2 5 8 4 9 7 6 1]
 [9 7 1 2 6 5 8 4 3]
 [4 3 6 1 0 2 5 8 7]
 [1 9 8 6 5 7 4 3 2]
 [2 5 7 4 8 3 0 1 6]
 [6 8 9 7 3 4 1 2 5]
 [7 1 3 5 2 8 6 9 4]
 [5 4 2 9 1 6 3 7 8]]
Valid actions: [(0, 8, 9), (3, 4, 9), (5, 6, 9)]
All available actions: [(0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (3, 4, 1), (3, 4, 2), (3, 4, 3), (3, 4, 4), (3, 4, 5), (3, 4, 6), (3, 4, 7), (3, 4, 8), (3, 4, 9), (5, 6, 1), (5, 6, 2), (5, 6, 3), (5, 6, 4), (5, 6, 5), (5, 6, 6), (5, 6, 7), (5, 6, 8), (5, 6, 9)]
Step: Action: (0, 8, 2), Reward: -5, Done: False
Running total step #9
Puzzle step # 9
Exploration rate (epsilon): 0.4975000023841858
State:
[[8 6 4 3 7 1 2 5 0]
 [3 2 5 8 4 9 7 6 1]
 [9 7 1 2 6 5 8 4 3]
 [4 3 6 1 0 2 5 8 7]
 [1 9 8 6 5 7 4 3 2]
 [2 5 7 4 8 3 0 1 6]
 [6 8 9 7 3 4 1 2 5]
 [7 1 3 5 2 8 6 9 4]
 [5 4 2 9 1 6 3 7 8]]
Valid actions: [(0, 8, 9), (3, 4, 9), (5, 6, 9)]
All available actions: [(0, 8, 1), (0, 8, 2), (0, 8, 3), (0, 8, 4), (0, 8, 5), (0, 8, 6), (0, 8, 7), (0, 8, 8), (0, 8, 9), (3, 4, 1), (3, 4, 2), (3, 4, 3), (3, 4, 4), (3, 4, 5), (3, 4, 6), (3, 4, 7), (3, 4, 8), (3, 4, 9), (5, 6, 1), (5, 6, 2), (5, 6, 3), (5, 6, 4), (5, 6, 5), (5, 6, 6), (5, 6, 7), (5, 6, 8), (5, 6, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: 5
Step: Action: (0, 8, 9), Reward: 15, Done: False
Running total step #10
Puzzle step # 10
Exploration rate (epsilon): 0.495012491941452
State:
[[8 6 4 3 7 1 2 5 9]
 [3 2 5 8 4 9 7 6 1]
 [9 7 1 2 6 5 8 4 3]
 [4 3 6 1 0 2 5 8 7]
 [1 9 8 6 5 7 4 3 2]
 [2 5 7 4 8 3 0 1 6]
 [6 8 9 7 3 4 1 2 5]
 [7 1 3 5 2 8 6 9 4]
 [5 4 2 9 1 6 3 7 8]]
Valid actions: [(3, 4, 9), (5, 6, 9)]
All available actions: [(3, 4, 1), (3, 4, 2), (3, 4, 3), (3, 4, 4), (3, 4, 5), (3, 4, 6), (3, 4, 7), (3, 4, 8), (3, 4, 9), (5, 6, 1), (5, 6, 2), (5, 6, 3), (5, 6, 4), (5, 6, 5), (5, 6, 6), (5, 6, 7), (5, 6, 8), (5, 6, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: 5
Step: Action: (3, 4, 9), Reward: 15, Done: False
Running total step #11
Puzzle step # 11
Exploration rate (epsilon): 0.495012491941452
State:
[[8 6 4 3 7 1 2 5 9]
 [3 2 5 8 4 9 7 6 1]
 [9 7 1 2 6 5 8 4 3]
 [4 3 6 1 9 2 5 8 7]
 [1 9 8 6 5 7 4 3 2]
 [2 5 7 4 8 3 0 1 6]
 [6 8 9 7 3 4 1 2 5]
 [7 1 3 5 2 8 6 9 4]
 [5 4 2 9 1 6 3 7 8]]
Valid actions: [(5, 6, 9)]
All available actions: [(5, 6, 1), (5, 6, 2), (5, 6, 3), (5, 6, 4), (5, 6, 5), (5, 6, 6), (5, 6, 7), (5, 6, 8), (5, 6, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: 5
Step: Action: (5, 6, 9), Reward: 15, Done: False
Running total step #12
Puzzle step # 12
Exploration rate (epsilon): 0.495012491941452
State:
[[8 6 4 3 7 1 2 5 9]
 [3 2 5 8 4 9 7 6 1]
 [9 7 1 2 6 5 8 4 3]
 [4 3 6 1 9 2 5 8 7]
 [1 9 8 6 5 7 4 3 2]
 [2 5 7 4 8 3 9 1 6]
 [6 8 9 7 3 4 1 2 5]
 [7 1 3 5 2 8 6 9 4]
 [5 4 2 9 1 6 3 7 8]]
Valid actions: []
All available actions: []
Board: tf.Tensor(
[[3 4 6 1 7 9 2 5 8]
 [1 8 7 5 2 3 9 6 4]
 [5 2 9 0 0 8 3 0 1]
 [9 6 5 8 3 2 4 1 0]
 [4 7 2 9 1 6 0 3 0]
 [8 1 3 7 5 4 6 2 9]
 [0 9 8 2 6 1 5 4 3]
 [6 3 1 4 8 5 0 9 2]
 [2 5 4 3 9 7 1 8 6]], shape=(9, 9), dtype=int32)

Puzzle # 2
State:
[[3 4 6 1 7 9 2 5 8]
 [1 8 7 5 2 3 9 6 4]
 [5 2 9 0 0 8 3 0 1]
 [9 6 5 8 3 2 4 1 0]
 [4 7 2 9 1 6 0 3 0]
 [8 1 3 7 5 4 6 2 9]
 [0 9 8 2 6 1 5 4 3]
 [6 3 1 4 8 5 0 9 2]
 [2 5 4 3 9 7 1 8 6]]
Valid actions: [(2, 3, 6), (2, 4, 4), (2, 7, 7), (3, 8, 7), (4, 6, 8), (4, 8, 5), (6, 0, 7), (7, 6, 7)]
All available actions: [(2, 3, 1), (2, 3, 2), (2, 3, 3), (2, 3, 4), (2, 3, 5), (2, 3, 6), (2, 3, 7), (2, 3, 8), (2, 3, 9), (2, 4, 1), (2, 4, 2), (2, 4, 3), (2, 4, 4), (2, 4, 5), (2, 4, 6), (2, 4, 7), (2, 4, 8), (2, 4, 9), (2, 7, 1), (2, 7, 2), (2, 7, 3), (2, 7, 4), (2, 7, 5), (2, 7, 6), (2, 7, 7), (2, 7, 8), (2, 7, 9), (3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (4, 6, 1), (4, 6, 2), (4, 6, 3), (4, 6, 4), (4, 6, 5), (4, 6, 6), (4, 6, 7), (4, 6, 8), (4, 6, 9), (4, 8, 1), (4, 8, 2), (4, 8, 3), (4, 8, 4), (4, 8, 5), (4, 8, 6), (4, 8, 7), (4, 8, 8), (4, 8, 9), (6, 0, 1), (6, 0, 2), (6, 0, 3), (6, 0, 4), (6, 0, 5), (6, 0, 6), (6, 0, 7), (6, 0, 8), (6, 0, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: 5
Step: Action: (2, 3, 6), Reward: 15, Done: False
Running total step #13
Puzzle step # 0
Exploration rate (epsilon): 0.495012491941452
State:
[[3 4 6 1 7 9 2 5 8]
 [1 8 7 5 2 3 9 6 4]
 [5 2 9 6 0 8 3 0 1]
 [9 6 5 8 3 2 4 1 0]
 [4 7 2 9 1 6 0 3 0]
 [8 1 3 7 5 4 6 2 9]
 [0 9 8 2 6 1 5 4 3]
 [6 3 1 4 8 5 0 9 2]
 [2 5 4 3 9 7 1 8 6]]
Valid actions: [(2, 4, 4), (2, 7, 7), (3, 8, 7), (4, 6, 8), (4, 8, 5), (6, 0, 7), (7, 6, 7)]
All available actions: [(2, 4, 1), (2, 4, 2), (2, 4, 3), (2, 4, 4), (2, 4, 5), (2, 4, 6), (2, 4, 7), (2, 4, 8), (2, 4, 9), (2, 7, 1), (2, 7, 2), (2, 7, 3), (2, 7, 4), (2, 7, 5), (2, 7, 6), (2, 7, 7), (2, 7, 8), (2, 7, 9), (3, 8, 1), (3, 8, 2), (3, 8, 3), (3, 8, 4), (3, 8, 5), (3, 8, 6), (3, 8, 7), (3, 8, 8), (3, 8, 9), (4, 6, 1), (4, 6, 2), (4, 6, 3), (4, 6, 4), (4, 6, 5), (4, 6, 6), (4, 6, 7), (4, 6, 8), (4, 6, 9), (4, 8, 1), (4, 8, 2), (4, 8, 3), (4, 8, 4), (4, 8, 5), (4, 8, 6), (4, 8, 7), (4, 8, 8), (4, 8, 9), (6, 0, 1), (6, 0, 2), (6, 0, 3), (6, 0, 4), (6, 0, 5), (6, 0, 6), (6, 0, 7), (6, 0, 8), (6, 0, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
Choosing to exploit
Valid move determined.
row_col_box_bonus: 5
Step: Action: (3, 8, 7), Reward: 15, Done: False
Running total step #14
Puzzle step # 1
Exploration rate (epsilon): 0.495012491941452
State:
[[3 4 6 1 7 9 2 5 8]
 [1 8 7 5 2 3 9 6 4]
 [5 2 9 6 0 8 3 0 1]
 [9 6 5 8 3 2 4 1 7]
 [4 7 2 9 1 6 0 3 0]
 [8 1 3 7 5 4 6 2 9]
 [0 9 8 2 6 1 5 4 3]
 [6 3 1 4 8 5 0 9 2]
 [2 5 4 3 9 7 1 8 6]]
Valid actions: [(2, 4, 4), (2, 7, 7), (4, 6, 8), (4, 8, 5), (6, 0, 7), (7, 6, 7)]
All available actions: [(2, 4, 1), (2, 4, 2), (2, 4, 3), (2, 4, 4), (2, 4, 5), (2, 4, 6), (2, 4, 7), (2, 4, 8), (2, 4, 9), (2, 7, 1), (2, 7, 2), (2, 7, 3), (2, 7, 4), (2, 7, 5), (2, 7, 6), (2, 7, 7), (2, 7, 8), (2, 7, 9), (4, 6, 1), (4, 6, 2), (4, 6, 3), (4, 6, 4), (4, 6, 5), (4, 6, 6), (4, 6, 7), (4, 6, 8), (4, 6, 9), (4, 8, 1), (4, 8, 2), (4, 8, 3), (4, 8, 4), (4, 8, 5), (4, 8, 6), (4, 8, 7), (4, 8, 8), (4, 8, 9), (6, 0, 1), (6, 0, 2), (6, 0, 3), (6, 0, 4), (6, 0, 5), (6, 0, 6), (6, 0, 7), (6, 0, 8), (6, 0, 9), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 6, 8), (7, 6, 9)]
Step: Action: (4, 8, 4), Reward: -5, Done: False
